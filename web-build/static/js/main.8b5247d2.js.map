{"version":3,"file":"static/js/main.8b5247d2.js","mappings":"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","sources":["components/DailyTips.tsx","screens/Homepage.tsx","screens/Homepage1.tsx","screens/FirstAid.tsx","components/symptomsKeywords.ts","screens/SymptomAssessment.tsx","api.ts","components/counselorCard.tsx","components/counselors.ts","screens/CounselorSession.tsx","screens/DailyTipDetailScreen.tsx","screens/MedSchedule.tsx","screens/FitnessNutrition.tsx","screens/Settings.tsx","screens/CounselorDetails.tsx","screens/BookAppointment.tsx","screens/AddMedication.tsx","components/Menu.tsx","screens/WelcomeScreen.tsx","components/CustomCheckBox.tsx","screens/LoginScreen.tsx","screens/SignUpScreen.tsx","screens/ForgetPassword.tsx","screens/NewsPage.tsx","screens/NotificationSettings.tsx","components/api.ts","screens/MentalHealth.tsx","imports.ts","voiceCommands.ts","screens/HealthNewsInterest.tsx","App.tsx","registerPushNotifications.ts","components/StatusBar.tsx","firebaseConfig.ts","screens/AccessibilityScreen.tsx","screens/NotificationScreen.tsx","screens/PreferencesScreen.tsx","screens/PrivacyScreen.tsx","screens/ProfileScreen.tsx","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["const dailyTips = [\n    {\n      content: \"Eat a variety of fresh fruits daily for essential nutrients and better digestion.\",\n      image: require(\"../assets/wallpaperflare.png\"),\n    },\n    {\n      content: \"Regular exercise can help prevent heart disease and high blood pressure.\",\n      image: require(\"../assets/wallpaperflare.png\"),\n    },\n    {\n      content: \"Drinking enough water each day is crucial for many reasons, including regulating body temperature and keeping joints lubricated.\",\n      image: require(\"../assets/wallpaperflare.png\"),\n    },\n    {\n      content: \"Getting enough sleep is important for your mental health.\",\n      image: require(\"../assets/wallpaperflare.png\"),\n    },\n    {\n      content: \"A balanced diet includes a variety of foods to ensure you're getting a range of nutrients.\",\n      image: require(\"../assets/wallpaperflare.png\"),\n    },\n  ];\n  \n  export default dailyTips;\n  ","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  Dimensions,\n  SafeAreaView,\n  StatusBar,\n  ScrollView,\n  Pressable,\n  Platform,\n} from \"react-native\";\nimport { useNavigation, NavigationProp, DrawerActions } from \"@react-navigation/native\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport dailyTips from \"../components/DailyTips\";\nimport { db, auth } from \"../firebaseConfig\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\ntype RootStackParamList = {\n  Home: undefined;\n  SymptomAssessment: undefined;\n  ClinicAppointment: undefined;\n  FitnessNutrition: undefined;\n  MentalHealth: undefined;\n  CounselorSession: undefined;\n  DailyTipDetailScreen: { tip: any };\n};\n\nconst Homepage: React.FC = () => {\n  const navigation = useNavigation<NavigationProp<RootStackParamList>>();\n  const [firstName, setFirstName] = useState<string>(\"\");\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const user = auth.currentUser;\n        if (user) {\n          console.log(\"User email: \", user.email); // Log the user email\n          const userQuery = query(collection(db, \"users\"), where(\"email\", \"==\", user.email));\n          const userSnapshot = await getDocs(userQuery);\n          if (!userSnapshot.empty) {\n            const userData = userSnapshot.docs[0].data();\n            if (userData && userData.firstname) {\n              setFirstName(userData.firstname);\n              console.log(\"User data found:\", userData); // Log user data\n            } else {\n              console.log(\"First name not found in user data!\");\n            }\n          } else {\n            console.log(\"No user data found!\");\n          }\n        } else {\n          console.log(\"No user is signed in.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  const handleReadMorePress = (tip: any) => {\n    navigation.navigate(\"DailyTipDetailScreen\", { tip });\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#318CE7\" />\n      <Pressable\n        style={styles.menuIconContainer}\n        onPress={() => navigation.dispatch(DrawerActions.openDrawer())}\n      >\n        <FontAwesome5 name=\"bars\" style={styles.menuIcon} />\n      </Pressable>\n      <View style={styles.headerContainer}>\n        <View style={styles.header}>\n          <View style={styles.iconContainer}>\n            <FontAwesome5 name=\"user\" style={styles.userIcon} />\n          </View>\n          <Text style={styles.headerText}>Hi, {firstName}</Text>\n        </View>\n      </View>\n      <ScrollView contentContainerStyle={styles.mainContainer}>\n      <LinearGradient\n        colors={[\"#369AFF\", \"#318CE7\"]}\n        style={styles.dailyTipsContainer}\n      >\n        <View style={styles.dtTopicContainer}>\n          <Text style={styles.dtTopic}>Daily Tips</Text>\n        </View>\n        <View style={styles.dailyTipsSubContainer}>\n          {dailyTips.slice(0, 3).map((item, index) => (\n            <View key={index} style={styles.TipContainer}>\n              <Image\n                source={item.image}\n                style={styles.image}\n                resizeMode=\"cover\"\n              />\n              <View style={styles.dailyTip}>\n                <Text style={styles.dailyTipContents}>\n                  {item.content.length > 20\n                    ? `${item.content.substring(0, 20)}...`\n                    : item.content}\n                </Text>\n              </View>\n            </View>\n          ))}\n        </View>\n        <Pressable\n          style={styles.readMorebtn}\n          // onPress={() => handleReadMorePress(item)}\n        >\n          <Text style={styles.readMore}>READ MORE </Text>\n          <FontAwesome5 name=\"arrow-right\" style={styles.arrowRight} />\n        </Pressable>\n      </LinearGradient>\n   \n        <View style={styles.subContainer}>\n          <Pressable\n            style={styles.button}\n            onPress={() => navigation.navigate(\"MentalHealth\")}\n          >\n            <FontAwesome5 name=\"brain\" size={responsiveFontSize(8)} color=\"#333\" />\n            <Text style={[styles.buttonText, styles.iconText]}>\n              Mental Health\n            </Text>\n          </Pressable>\n          <Pressable\n            style={styles.button}\n            onPress={() => navigation.navigate(\"SymptomAssessment\")}\n          >\n            <FontAwesome5 name=\"clipboard-list\" size={responsiveFontSize(8)} color=\"#333\" />\n            <Text style={[styles.buttonText, styles.iconText]}>\n              Symptom Assessment\n            </Text>\n          </Pressable>\n        </View>\n        <View style={styles.subContainer}>\n          <Pressable\n            style={styles.button}\n            onPress={() => navigation.navigate(\"ClinicAppointment\")}\n          >\n            <FontAwesome5 name=\"hospital\" size={responsiveFontSize(8)} color=\"#333\" />\n            <Text style={[styles.buttonText, styles.iconText]}>\n              Clinic Appointment\n            </Text>\n          </Pressable>\n          <Pressable\n            style={styles.button}\n            onPress={() => navigation.navigate(\"FitnessNutrition\")}\n          >\n            <FontAwesome5 name=\"dumbbell\" size={responsiveFontSize(8)} color=\"#333\" />\n            <Text style={[styles.buttonText, styles.iconText]}>\n              Fitness & Nutrition\n            </Text>\n          </Pressable>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n\n  },\n  menuIconContainer: {\n    position: \"absolute\",\n    top: responsiveHeight(2),\n    left: responsiveWidth(6),\n    zIndex: 10,\n    padding: responsiveFontSize(1),\n  },\n  menuIcon: {\n    fontSize: responsiveFontSize(6),\n    color: \"#333\",\n  },\n  headerContainer: {\n    marginTop: responsiveHeight(8),\n    marginBottom: responsiveHeight(2),\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#318CE7\",\n    width: \"70%\",\n    paddingLeft: responsiveFontSize(5),\n    paddingVertical: responsiveFontSize(2),\n    borderTopRightRadius: responsiveFontSize(3),\n    borderBottomRightRadius: responsiveFontSize(3),\n  },\n  iconContainer: {\n    width: responsiveFontSize(10),\n    height: responsiveFontSize(10),\n    borderRadius: responsiveFontSize(5),\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  userIcon: {\n    fontSize: responsiveFontSize(6),\n    color: \"#318CE7\",\n  },\n  headerText: {\n    fontSize: responsiveFontSize(6),\n    color: \"#fff\",\n    marginLeft: responsiveWidth(5),\n  },\n  dailyTipsContainer: {\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    marginVertical: responsiveHeight(2),\n    alignItems: \"center\",\n    padding: responsiveWidth(1),\n    height: responsiveHeight(40), // Increased height\n    width: responsiveWidth(97),\n    borderRadius: responsiveWidth(5),\n    alignSelf: \"center\",\n  },\n  dailyTipsSubContainer: {\n    display: \"flex\",\n    width: responsiveWidth(92),\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"rgba(238, 234, 236, 0.26)\",\n    \n  },\n  dtTopicContainer: {\n    width: responsiveWidth(92),\n  },\n  dtTopic: {\n    color: \"white\",\n    fontSize: responsiveFontSize(4.1),\n    marginVertical: responsiveHeight(1),\n  },\n  image: {\n    width: \"100%\",\n    height: responsiveHeight(15),\n    borderRadius: responsiveFontSize(2),\n  },\n  dailyTip: {\n    alignItems: \"center\",\n    paddingVertical: responsiveHeight(1),\n    paddingHorizontal: responsiveWidth(2),\n    ...Platform.select({\n      ios: {\n        shadowColor: \"#000\",\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n      },\n      android: {\n        elevation: 5,\n      },\n      web: {\n        boxShadow: \"none\", \n      },\n    }),\n  },\n  dailyTipContents: {\n    fontFamily: \"Poppins-Medium\",\n    color: \"#fff\",\n    fontSize: responsiveFontSize(3.6),\n    textAlign: \"center\",\n  },\n  TipContainer: {\n    width: \"32%\",\n  },\n  readMorebtn: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginTop: responsiveHeight(1),\n  },\n  readMore: {\n    fontFamily: \"Poppins-Bold\",\n    fontSize: responsiveFontSize(3.8),\n    color: \"#fff\",\n  },\n  arrowRight: {\n    fontSize: responsiveFontSize(2.8),\n    color: \"#fff\",\n    marginLeft: responsiveWidth(1),\n  },\n  mainContainer: {\n    flexGrow: 1,\n    padding: responsiveWidth(5),\n    marginBottom: responsiveHeight(7),\n   \n  },\n  subContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginVertical: responsiveHeight(1),\n    // marginBottom: responsiveHeight(4),\n  },\n  button: {\n    backgroundColor: \"#fbfaf3\",\n    paddingVertical: responsiveHeight(2),\n    borderRadius: 10,\n    flex: 1,\n    marginHorizontal: responsiveWidth(2.5),\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    ...Platform.select({\n      ios: {\n        shadowColor: \"#000\",\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.8,\n        shadowRadius: 2,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n    marginVertical: responsiveHeight(0.5),\n  },\n  buttonText: {\n    fontSize: responsiveFontSize(3.2),\n    marginTop: responsiveHeight(1),\n    color: \"#333\",\n    fontFamily: \"Poppins-Regular\",\n    textAlign: \"center\",\n  },\n  iconText: {\n    color: \"red\",\n  },\n});\n\nexport default Homepage;\n","import React from 'react';\nimport { SafeAreaView, View, StyleSheet } from 'react-native';\nimport Homepage from './Homepage'; // Adjust the import path as needed\n\nconst Homepage1 = () => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.homepage}>\n        <Homepage />\n      </View>\n    </SafeAreaView>\n  );\n};\n\n\n\n\n\nconst styles = StyleSheet.create({\n\n  homepage: {\n    flex: 1,\n    width: \"100%\",\n    height: \"auto\"\n\n    \n  },\n  container: {\n    flex: 1,\n  },\n \n  \n});\n\nexport default Homepage1;\n","import React from \"react\";\nimport { View, Text, Pressable, StyleSheet, Dimensions } from \"react-native\";\nimport { FontAwesome5, Ionicons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { StatusBar } from \"react-native\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst FirstAidPage = () => {\n  const navigation = useNavigation();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#318CE7\" />\n    \n      <View style={styles.headerContainer}>\n        <View style={styles.header}>\n          <View style={styles.iconContainer}>\n            <FontAwesome5 name=\"first-aid\" style={styles.firstAidIcon} />\n          </View>\n          <Text style={styles.headerText}>First Aid</Text>\n        </View>\n      </View>\n      <View style={styles.mainContainer}>\n        <View style={styles.buttonContainer}>\n          <Pressable style={styles.button} onPress={() => console.log(\"Cuts/Bruises\")}>\n            <Text style={styles.buttonText}>Cuts/Bruises</Text>\n          </Pressable>\n        </View>\n        <View style={styles.buttonContainer}>\n          <Pressable style={styles.button} onPress={() => console.log(\"Burns\")}>\n            <Text style={styles.buttonText}>Burns</Text>\n          </Pressable>\n        </View>\n        <View style={styles.buttonContainer}>\n          <Pressable style={styles.button} onPress={() => console.log(\"Shock\")}>\n            <Text style={styles.buttonText}>Shock</Text>\n          </Pressable>\n        </View>\n        <View style={styles.buttonContainer}>\n          <Pressable style={styles.button} onPress={() => console.log(\"Others\")}>\n            <Text style={styles.buttonText}>Others</Text>\n          </Pressable>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  headerContainer: {\n    marginTop: responsiveHeight(6), // Adjusted to make space for the back icon\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#318CE7\",\n    width: \"70%\",\n    paddingLeft: responsiveFontSize(5),\n    paddingVertical: responsiveFontSize(2),\n    borderTopRightRadius: responsiveFontSize(3),\n    borderBottomRightRadius: responsiveFontSize(3),\n  },\n  iconContainer: {\n    width: responsiveFontSize(10),\n    height: responsiveFontSize(10),\n    borderRadius: responsiveFontSize(5),\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  firstAidIcon: {\n    fontSize: responsiveFontSize(6),\n    color: \"#318CE7\",\n  },\n  headerText: {\n    fontSize: responsiveFontSize(6),\n    color: \"#fff\",\n    marginLeft: responsiveWidth(5),\n  },\n  mainContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginVertical: responsiveHeight(2),\n  },\n  buttonContainer: {\n    width: responsiveWidth(90),\n    marginVertical: responsiveHeight(1),\n    elevation: 5,\n    backgroundColor: \"#fff\",\n    borderRadius: 20,\n    overflow: \"hidden\",\n    padding: responsiveFontSize(2),\n  },\n  button: {\n    width: \"100%\",\n    paddingVertical: responsiveHeight(2),\n    backgroundColor: \"#fbfaf3\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 20,\n    borderWidth: 2,\n    borderColor: \"#318CE7\",\n  },\n  buttonText: {\n    fontSize: responsiveFontSize(6),\n    color: \"#318CE7\",\n    fontFamily: \"Poppins-Bold\",\n  },\n});\n\nexport default FirstAidPage;\n","const symptomsKeywords = [\n    \"fever\", \"chills\", \"sweats\", \"cough\", \"dry cough\", \"wet cough\", \"headache\", \"migraine\",\n    \"sore throat\", \"scratchy throat\", \"runny nose\", \"stuffy nose\", \"nasal congestion\", \"sneezing\",\n    \"shortness of breath\", \"difficulty breathing\", \"wheezing\", \"chest pain\", \"chest tightness\",\n    \"rapid heartbeat\", \"palpitations\", \"fatigue\", \"weakness\", \"tiredness\", \"dizziness\",\n    \"lightheadedness\", \"fainting\", \"nausea\", \"vomiting\", \"upset stomach\", \"stomach pain\",\n    \"abdominal pain\", \"diarrhea\", \"constipation\", \"bloating\", \"gas\", \"indigestion\", \"heartburn\",\n    \"loss of appetite\", \"weight loss\", \"weight gain\", \"muscle pain\", \"muscle cramps\", \"joint pain\",\n    \"stiff joints\", \"swollen joints\", \"back pain\", \"neck pain\", \"shoulder pain\", \"knee pain\",\n    \"ankle pain\", \"hip pain\", \"wrist pain\", \"hand pain\", \"foot pain\", \"leg pain\", \"arm pain\",\n    \"finger pain\", \"toe pain\", \"skin rash\", \"itchy skin\", \"hives\", \"blisters\", \"bruises\",\n    \"swelling\", \"redness\", \"warmth\", \"painful urination\", \"frequent urination\", \"urgent urination\",\n    \"urinary incontinence\", \"blood in urine\", \"cloudy urine\", \"dark urine\", \"ear pain\", \"earache\",\n    \"hearing loss\", \"ringing in ears\", \"ear discharge\", \"itchy ears\", \"sore eyes\", \"red eyes\",\n    \"itchy eyes\", \"watery eyes\", \"blurred vision\", \"double vision\", \"eye pain\", \"sensitivity to light\",\n    \"dry eyes\", \"eye discharge\", \"mouth sores\", \"mouth ulcers\", \"gum pain\", \"toothache\", \"bad breath\",\n    \"dry mouth\", \"difficulty swallowing\", \"hoarseness\", \"voice changes\", \"swollen lymph nodes\", \"lumps\",\n    \"bumps\", \"night sweats\", \"shaking\", \"tremors\", \"seizures\", \"memory loss\", \"confusion\",\n    \"difficulty concentrating\", \"mood swings\", \"irritability\", \"anxiety\", \"depression\", \"panic attacks\",\n    \"hallucinations\", \"delusions\", \"paranoia\", \"insomnia\", \"sleep disturbances\", \"nightmares\", \"snoring\",\n    \"excessive sleepiness\", \"itchy scalp\", \"hair loss\", \"brittle nails\", \"yellow nails\", \"bleeding gums\",\n    \"nosebleeds\", \"bleeding\", \"easy bruising\", \"anemia\", \"jaundice\", \"yellow skin\", \"yellow eyes\",\n    \"pale skin\", \"cyanosis\", \"blue lips\", \"blue fingertips\", \"tingling\", \"numbness\", \"burning sensation\",\n    \"prickling sensation\", \"cold hands\", \"cold feet\", \"hot flashes\", \"excessive sweating\", \"decreased sweating\",\n    \"dry skin\", \"scaly skin\", \"peeling skin\", \"cracked skin\", \"thickened skin\", \"skin discoloration\",\n    \"ulcers\", \"sores\", \"slow wound healing\", \"chronic pain\", \"acute pain\", \"intermittent pain\", \"constant pain\",\n    \"sharp pain\", \"dull pain\", \"aching\", \"burning pain\", \"throbbing pain\", \"stabbing pain\", \"pressure\",\n    \"tightness\", \"heaviness\", \"shooting pain\", \"radiating pain\", \"localized pain\", \"generalized pain\",\n    \"tenderness\", \"soreness\", \"fatigue\", \"malaise\", \"lethargy\", \"weakness\", \"lack of energy\", \"muscle weakness\",\n    \"joint stiffness\", \"muscle stiffness\", \"difficulty moving\", \"limited range of motion\", \"spasticity\",\n    \"muscle twitching\", \"muscle jerking\", \"cramps\", \"spasms\", \"paralysis\", \"loss of sensation\",\n    \"loss of coordination\", \"balance problems\", \"difficulty walking\", \"gait changes\", \"posture changes\",\n    \"trembling\", \"shaking hands\", \"shaky legs\", \"clumsiness\", \"poor coordination\", \"dizziness\", \"vertigo\",\n    \"lightheadedness\", \"spinning sensation\", \"unsteadiness\", \"feeling faint\", \"blackouts\", \"syncope\",\n    \"loss of consciousness\", \"memory problems\", \"forgetfulness\", \"amnesia\", \"confusion\", \"disorientation\",\n    \"difficulty concentrating\", \"inattention\", \"distractibility\", \"slow thinking\", \"delayed response\",\n    \"word-finding difficulty\", \"difficulty speaking\", \"slurred speech\", \"mumbling\", \"difficulty understanding\",\n    \"difficulty writing\", \"difficulty reading\", \"difficulty learning\", \"mental fog\", \"brain fog\", \"poor judgment\",\n    \"impulsivity\", \"racing thoughts\", \"irrational thoughts\", \"obsessive thoughts\", \"compulsive behaviors\",\n    \"repetitive behaviors\", \"phobias\", \"fears\", \"excessive worrying\", \"excessive fear\", \"unrealistic fears\",\n    \"panic attacks\", \"anxiety attacks\", \"social anxiety\", \"agoraphobia\", \"claustrophobia\", \"fear of heights\",\n    \"fear of flying\", \"fear of germs\", \"fear of illness\", \"fear of death\", \"depression\", \"sadness\", \"hopelessness\",\n    \"helplessness\", \"worthlessness\", \"guilt\", \"shame\", \"low self-esteem\", \"loss of interest\", \"loss of pleasure\",\n    \"withdrawal\", \"isolation\", \"crying spells\", \"tearfulness\", \"anger\", \"irritability\", \"frustration\", \"restlessness\",\n    \"agitation\", \"fatigue\", \"excessive sleeping\", \"insomnia\", \"early morning waking\", \"middle of the night waking\",\n    \"difficulty falling asleep\", \"poor sleep quality\", \"nightmares\", \"vivid dreams\", \"daytime sleepiness\", \"tiredness\",\n    \"fatigue\", \"low energy\", \"lack of motivation\", \"difficulty making decisions\", \"indecisiveness\", \"procrastination\",\n    \"difficulty starting tasks\", \"difficulty completing tasks\", \"slowed thinking\", \"slowed movements\", \"thoughts of death\",\n    \"thoughts of suicide\", \"self-harm\", \"cutting\", \"burning\", \"scratching\", \"hitting\", \"banging head\", \"biting\",\n    \"pulling hair\", \"eating problems\", \"overeating\", \"undereating\", \"binge eating\", \"purging\", \"restricting food\",\n    \"body image issues\", \"weight changes\", \"muscle pain\", \"joint pain\", \"back pain\", \"neck pain\", \"headaches\",\n    \"migraines\", \"abdominal pain\", \"chest pain\", \"palpitations\", \"shortness of breath\", \"difficulty breathing\", \"wheezing\",\n    \"coughing\", \"choking\", \"gagging\", \"nausea\", \"vomiting\", \"diarrhea\", \"constipation\", \"bloating\", \"gas\", \"indigestion\",\n    \"heartburn\", \"loss of appetite\", \"weight loss\", \"weight gain\", \"frequent urination\", \"painful urination\", \"blood in urine\",\n    \"cloudy urine\", \"dark urine\", \"vaginal discharge\", \"vaginal itching\", \"vaginal dryness\", \"painful intercourse\",\n    \"irregular periods\", \"missed periods\", \"heavy periods\", \"light periods\", \"spotting\", \"menstrual cramps\", \"PMS\", \"breast pain\"\n    // Add more keywords as needed\n  ];\n  \n  export default symptomsKeywords;\n  ","import React, { useState, useEffect } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  SafeAreaView,\n  ScrollView,\n  Pressable,\n  Dimensions,\n  Image,\n  Platform,\n} from 'react-native';\nimport CustomStatusBar from '../components/StatusBar';\nimport { FontAwesome, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { chatWithGemini } from '../api';\nimport { db, auth } from '../firebaseConfig';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport symptomsKeywords from '../components/symptomsKeywords';\nimport { useFocusEffect } from '@react-navigation/native';\n\nconst { width, height } = Dimensions.get('window');\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\ninterface Message {\n  user: string;\n  bot?: string;\n}\n\nconst SymptomAssessment: React.FC = () => {\n  const [symptom, setSymptom] = useState<string>('');\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [firstName, setFirstName] = useState<string>('');\n  \n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const user = auth.currentUser;\n        if (user) {\n          const userQuery = query(collection(db, 'users'), where('email', '==', user.email));\n          const userSnapshot = await getDocs(userQuery);\n          if (!userSnapshot.empty) {\n            const userData = userSnapshot.docs[0].data();\n            if (userData && userData.firstname) {\n              setFirstName(userData.firstname);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching user data:', error);\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  useFocusEffect(\n    React.useCallback(() => {\n      return () => {\n        // Cleanup on screen focus change\n      };\n    }, [])\n  );\n\n  const checkForIrrelevantContent = (message: string): boolean => {\n    return !symptomsKeywords.some(keyword => message.toLowerCase().includes(keyword));\n  };\n\n  const handleSend = async () => {\n    if (symptom.trim()) {\n      const userMessage: Message = { user: symptom };\n      setMessages([...messages, userMessage]);\n      setSymptom('');\n\n      try {\n        let botResponse;\n        if (checkForIrrelevantContent(symptom)) {\n          botResponse = 'I am only equipped to assist with symptom assessment. Please ask about symptoms.';\n        } else {\n          botResponse = await chatWithGemini(symptom);\n          botResponse = botResponse.replace(/\\*/g, ''); // Remove '*' characters\n        }\n        setMessages(prevMessages => [...prevMessages, { user: symptom, bot: botResponse }]);\n        setError(null);\n      } catch (error) {\n        setError('Failed to fetch response from AI. Please check your API key and try again.');\n      }\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.safeAreaView}>\n      <CustomStatusBar screenName={'Symptom Assessment'} />\n\n      <View style={styles.container}>\n        <View style={styles.warningContainer}>\n          <Text style={styles.warningText}>\n            If you have serious symptoms, do not use CampCare. Please contact emergency services immediately.\n          </Text>\n        </View>\n        <ScrollView contentContainerStyle={styles.chatContainer}>\n          {messages.map((message, index) => (\n            <View\n              key={index}\n              style={[\n                styles.chatRow,\n                message.bot ? styles.botRow : styles.userRow,\n              ]}\n            >\n              {message.bot ? (\n                <>\n                  <View style={styles.thumbnailContainer}>\n                    <Image\n                      source={require('../assets/Campcare.png')}\n                      style={styles.thumbnail}\n                    />\n                  </View>\n                  <View style={styles.messageContainer}>\n                    <View style={[styles.chatBubble, styles.botBubble]}>\n                      <Text style={styles.nameText}>CampCare</Text>\n                      <Text style={styles.chatText}>\n                        {message.bot}\n                      </Text>\n                    </View>\n                  </View>\n                </>\n              ) : (\n                <>\n                  <View style={styles.messageContainer}>\n                    <View style={[styles.chatBubble, styles.userBubble]}>\n                      <Text style={styles.nameText}>You</Text>\n                      <Text style={styles.chatText}>{message.user}</Text>\n                    </View>\n                  </View>\n                  <View style={styles.thumbnailContainer}>\n                    <View style={styles.userThumbnail}>\n                      <Text style={styles.thumbnailText}>\n                        {firstName.charAt(0).toUpperCase()}\n                      </Text>\n                    </View>\n                  </View>\n                </>\n              )}\n            </View>\n          ))}\n        </ScrollView>\n        {error && <Text style={styles.errorText}>{error}</Text>}\n        <View style={styles.inputContainer}>\n          <TextInput\n            style={styles.textInput}\n            value={symptom}\n            onChangeText={setSymptom}\n            placeholder=\"Type a symptom\"\n            placeholderTextColor=\"#6b6b6b\"\n          />\n          <Pressable style={styles.sendButton} onPress={symptom ? handleSend : () => {}}>\n            <MaterialCommunityIcons name=\"send-circle\" size={36} color=\"#1F75FE\" />\n          </Pressable>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeAreaView: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n  },\n  warningContainer: {\n    paddingVertical: responsiveHeight(1),\n    paddingHorizontal: responsiveWidth(5),\n  },\n  warningText: {\n    fontSize: responsiveFontSize(4),\n    color: '#333',\n  },\n  chatContainer: {\n    flexGrow: 1,\n    padding: responsiveWidth(2),\n    backgroundColor: '#fff',\n  },\n  chatRow: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginVertical: responsiveHeight(1),\n  },\n  userRow: {\n    alignSelf: 'flex-end',\n  },\n  botRow: {\n    alignSelf: 'flex-start',\n  },\n  thumbnailContainer: {\n    marginHorizontal: responsiveWidth(2),\n  },\n  userThumbnail: {\n    width: responsiveWidth(10),\n    height: responsiveWidth(10),\n    borderRadius: responsiveWidth(5),\n    backgroundColor: '#318CE7',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  thumbnail: {\n    width: responsiveWidth(10),\n    height: responsiveWidth(10),\n    borderRadius: responsiveWidth(5),\n    backgroundColor: '#e5e5ea',\n  },\n  thumbnailText: {\n    color: '#fff',\n    fontSize: responsiveFontSize(6),\n  },\n  messageContainer: {\n    flexDirection: 'column',\n    maxWidth: '70%',\n    marginBottom: responsiveHeight(2.5),\n  },\n  nameText: {\n    fontSize: responsiveFontSize(3),\n    color: '#666',\n    marginBottom: responsiveHeight(0.5),\n    fontWeight: 'bold',\n  },\n  chatBubble: {\n    borderRadius: 10,\n    padding: responsiveWidth(3),\n  },\n  userBubble: {\n    backgroundColor: '#e5e5ea',\n  },\n  botBubble: {\n    backgroundColor: '#d1f1ff',\n  },\n  chatText: {\n    fontSize: responsiveFontSize(4),\n    color: '#000',\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    marginVertical: responsiveHeight(1),\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: responsiveWidth(5),\n    paddingVertical: responsiveHeight(3),\n    backgroundColor: '#fff',\n  },\n  textInput: {\n    flex: 1,\n    height: responsiveHeight(6),\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 10,\n    paddingHorizontal: responsiveWidth(4),\n    fontSize: responsiveFontSize(4),\n    marginRight: responsiveWidth(2),\n    ...Platform.select({\n      web: {\n        outlineWidth: 0, // Remove the yellow border on web\n      },\n    }),\n  },\n  sendButton: {\n    backgroundColor: '#fff',\n    borderRadius: 20,\n  },\n});\n\nexport default SymptomAssessment;\n","import axios from 'axios';\nimport { GEMINI_API_KEY } from '@env';\n\nconst API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent';\n\nexport async function chatWithGemini(userMessage: string): Promise<string> {\n  try {\n    const response = await axios.post(\n      `${API_URL}?key=AIzaSyBLul9jArDlgiX5Aa6vhL2d0ChmlvG7-80`,\n      {\n        contents: [\n          {\n            parts: [\n              {\n                text: userMessage,\n              },\n            ],\n          },\n        ],\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n    const responseData = response.data;\n\n    const responseText = responseData.candidates[0]?.content?.parts[0]?.text || '';\n\n    return responseText;\n  } catch (error) {\n    console.error('Error:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n}\n","import * as React from \"react\";\nimport { Image, StyleSheet, Text, View, Pressable, Dimensions } from \"react-native\";\nimport { NavigationProp, ParamListBase, useNavigation } from \"@react-navigation/native\";\nimport MaterialIcons from \"@expo/vector-icons/build/MaterialIcons\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\ninterface Counselor {\n  position: string;\n  fullName: string;\n  description: string;\n  available: boolean;\n}\n\ninterface CounselorCardProps {\n  counselor: Counselor;\n}\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst CounselorCard: React.FC<CounselorCardProps> = ({ counselor }) => {\n  const navigation = useNavigation<NavigationProp<ParamListBase>>();\n\n  const handlePress = () => {\n    navigation.navigate(\"CounselorDetails\", { counselor });\n  };\n\n  return (\n    <Pressable style={styles.counselorCard} onPress={handlePress}>\n      <Image\n        style={styles.counselorImage}\n        source={require(\"../assets/image.png\")} // Replace with counselor.image if dynamic\n      />\n      <View style={styles.counselorInfo}>\n        <Text style={styles.position}>{counselor.position}</Text>\n        <Text style={styles.fullName}>{counselor.fullName}</Text>\n        <View style={styles.ratingContainer}>\n          <Text style={styles.ratingText}>★★★★★</Text>\n          <MaterialIcons name=\"navigate-next\" size={responsiveFontSize(6)} color=\"#0063ae\" />\n        </View>\n      </View>\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  counselorCard: {\n    flexDirection: \"row\",\n    padding: responsiveWidth(2.5), // Decreased padding\n    marginVertical: responsiveHeight(1), // Decreased vertical margin\n    height: responsiveHeight(17),\n    backgroundColor: \"#fbfaf3\",\n    borderRadius: responsiveWidth(2), // Decreased border radius\n    shadowColor: \"#000\",\n    shadowOpacity: 0.1,\n    shadowRadius: responsiveWidth(1), // Decreased shadow radius\n    shadowOffset: { width: 0, height: responsiveHeight(0.5) }, // Decreased shadow offset\n    elevation: 5,\n  },\n  counselorImage: {\n    width: responsiveWidth(26), // Decreased image width\n    height: responsiveWidth(32), // Decreased image height\n    borderTopLeftRadius: responsiveWidth(2.8),\n    borderBottomLeftRadius: responsiveWidth(2.8)\n  },\n  counselorInfo: {\n    marginLeft: responsiveWidth(4), // Decreased marginLeft\n    flex: 1,\n  },\n  position: {\n    fontSize: responsiveFontSize(5), // Increased font size\n    fontWeight: \"bold\",\n    marginBottom: responsiveHeight(0.1), // Decreased marginBottom\n  },\n  fullName: {\n    fontSize: responsiveFontSize(4), // Increased font size\n    marginBottom: responsiveHeight(0.5), // Decreased marginBottom\n  },\n  ratingContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  ratingText: {\n    fontSize: responsiveFontSize(4), // Increased font size\n    color: \"#ffb400\",\n  },\n});\n\nexport default CounselorCard;\n","// CounselorData.ts\nexport interface Counselor {\n  id: string;\n  fullName: string;\n  position: string;\n}\n\nconst counselors: Counselor[] = [\n  {\n    id: \"1\",\n    fullName: \"Dr. John Doe\",\n    position: \"Psychologist\",\n  },\n  {\n    id: \"2\",\n    fullName: \"Ms. Jane Smith\",\n    position: \"Therapist\",\n  },\n  // Add more counselors as needed\n];\n\nexport default counselors;\n","import * as React from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  SafeAreaView,\n  Dimensions,\n  Pressable,\n  StatusBar,\n  KeyboardAvoidingView,\n  Platform,\n} from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport {\n  useNavigation,\n  NavigationProp,\n  ParamListBase,\n} from \"@react-navigation/native\";\nimport CounselorCard from \"../components/counselorCard\"; // Adjust the import path as needed\nimport counselors, { Counselor } from \"../components/counselors\"; // Adjust the import path as needed\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst CounselorSession: React.FC = () => {\n  const navigation = useNavigation<NavigationProp<ParamListBase>>();\n  const [selectedFeeling, setSelectedFeeling] = React.useState<string | null>(\n    null\n  );\n  const [searchQuery, setSearchQuery] = React.useState<string>(\"\");\n  const [filteredCounselors, setFilteredCounselors] =\n    React.useState<Counselor[]>(counselors);\n\n  const handleSearch = (query: string) => {\n    setSearchQuery(query);\n    if (query) {\n      const filtered = counselors.filter((counselor) =>\n        counselor.fullName.toLowerCase().includes(query.toLowerCase())\n      );\n      setFilteredCounselors(filtered);\n    } else {\n      setFilteredCounselors(counselors);\n    }\n  };\n\n  const handleBackPress = () => {\n    navigation.goBack();\n  };\n\n  const feelings = [\n    { name: \"Happy\", icon: \"smile-o\" },\n    { name: \"Calm\", icon: \"meh-o\" },\n    { name: \"Relax\", icon: \"frown-o\" },\n    { name: \"Focus\", icon: \"eye\" },\n  ];\n\n  return (\n    <KeyboardAvoidingView\n      style={{ flex: 1 }}\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n      keyboardVerticalOffset={Platform.OS === \"ios\" ? 90 : 0} // Adjust the offset as needed\n    >\n      <SafeAreaView style={styles.container}>\n        <StatusBar barStyle=\"dark-content\" backgroundColor=\"#fff\" />\n        <View style={styles.header}>\n          <Text style={styles.headerText}>Counselor Session</Text>\n        </View>\n        <ScrollView contentContainerStyle={styles.scrollContainer}>\n          <View style={styles.searchContainer}>\n            <FontAwesome name=\"search\" style={styles.searchIcon} />\n            <TextInput\n              style={[\n                styles.searchInput,\n                Platform.OS === \"web\" && styles.webSearchInput,\n              ]}\n              placeholder=\"Search Counselor\"\n              value={searchQuery}\n              onChangeText={handleSearch}\n              placeholderTextColor=\"#888\"\n            />\n          </View>\n          <Text style={styles.sectionTitle}>Available Counselors</Text>\n          {filteredCounselors.length > 0 ? (\n            <ScrollView\n              horizontal\n              contentContainerStyle={styles.cardContainer}\n              showsHorizontalScrollIndicator={false}\n            >\n              {filteredCounselors.map((counselor, index) => (\n                <View key={index} style={styles.cardSpacing}>\n                  <CounselorCard counselor={counselor} />\n                </View>\n              ))}\n            </ScrollView>\n          ) : (\n            <Text style={styles.noResultsText}>No counselors found</Text>\n          )}\n          <Text style={styles.feelingsTitle}>How are you feeling today?</Text>\n          <View style={styles.feelingsContainer}>\n            {feelings.map((feeling, index) => (\n              <Pressable\n                key={index}\n                style={styles.feeling}\n                onPress={() => setSelectedFeeling(feeling.name)}\n              >\n                <View\n                  style={[\n                    styles.feelingIconContainer,\n                    selectedFeeling === feeling.name &&\n                      styles.selectedFeelingIconContainer,\n                  ]}\n                >\n                  <FontAwesome name={feeling.icon} style={styles.feelingIcon} />\n                </View>\n                <Text style={styles.feelingText}>{feeling.name}</Text>\n              </Pressable>\n            ))}\n          </View>\n          <View style={styles.additionalInfo}>\n            <Text style={styles.additionalInfoTitle}>Why Counseling?</Text>\n            <Text style={styles.additionalInfoText}>\n              Counseling can help you improve your mental health, manage stress,\n              and cope with life challenges.\n            </Text>\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingHorizontal: responsiveWidth(5),\n    paddingVertical: responsiveHeight(2),\n  },\n  headerText: {\n    fontSize: responsiveFontSize(5),\n    fontWeight: \"bold\",\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    paddingHorizontal: responsiveWidth(5),\n    paddingBottom: responsiveHeight(10),\n  },\n  searchContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: responsiveHeight(2),\n    paddingHorizontal: responsiveWidth(3),\n    paddingVertical: responsiveHeight(1),\n    borderRadius: responsiveWidth(2),\n    backgroundColor: \"#f0f0f0\",\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2,\n  },\n  searchIcon: {\n    fontSize: responsiveFontSize(6),\n    marginRight: responsiveWidth(2),\n  },\n  searchInput: {\n    flex: 1,\n    fontSize: responsiveFontSize(5),\n    // paddingVertical: responsiveHeight(0.1),\n    borderBottomWidth: 0,\n  },\n  webSearchInput: {\n    outlineStyle: \"none\",\n  },\n  sectionTitle: {\n    fontSize: responsiveFontSize(5),\n    fontWeight: \"700\",\n    marginBottom: responsiveHeight(2),\n  },\n  cardContainer: {\n    flexDirection: \"row\",\n    marginBottom: responsiveHeight(3),\n  },\n  cardSpacing: {\n    marginRight: responsiveWidth(5),\n    backgroundColor: \"#fff\",\n    borderRadius: responsiveWidth(2),\n    overflow: \"hidden\",\n    \n  },\n  noResultsText: {\n    fontSize: responsiveFontSize(4),\n    color: \"#333\",\n    textAlign: \"center\",\n    marginVertical: responsiveHeight(2),\n  },\n  feelingsTitle: {\n    fontSize: responsiveFontSize(5),\n    fontWeight: \"700\",\n    textAlign: \"center\",\n    marginBottom: responsiveHeight(2),\n  },\n  feelingsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: responsiveHeight(3),\n  },\n  feeling: {\n    alignItems: \"center\",\n  },\n  feelingIconContainer: {\n    backgroundColor: \"#318CE7\",\n    borderRadius: responsiveWidth(3),\n    padding: responsiveWidth(3),\n    marginBottom: responsiveHeight(1.5),\n  },\n  selectedFeelingIconContainer: {\n    backgroundColor: \"#0050a0\",\n  },\n  feelingIcon: {\n    fontSize: responsiveFontSize(8),\n    color: \"#fff\",\n  },\n  feelingText: {\n    fontSize: responsiveFontSize(4),\n    textAlign: \"center\",\n  },\n  additionalInfo: {\n    paddingHorizontal: responsiveWidth(5),\n    paddingVertical: responsiveHeight(3),\n    backgroundColor: \"#f5f5f5\",\n    borderRadius: responsiveWidth(2),\n    marginBottom: responsiveHeight(3),\n  },\n  additionalInfoTitle: {\n    fontSize: responsiveFontSize(5),\n    fontWeight: \"700\",\n    marginBottom: responsiveHeight(2),\n  },\n  additionalInfoText: {\n    fontSize: responsiveFontSize(4),\n    color: \"#333\",\n  },\n  '@media (min-width: 768px)': {\n    headerText: {\n      fontSize: responsiveFontSize(4),\n    },\n    searchInput: {\n      fontSize: responsiveFontSize(4),\n    },\n    sectionTitle: {\n      fontSize: responsiveFontSize(4),\n    },\n    cardSpacing: {\n      marginRight: responsiveWidth(4),\n    },\n    noResultsText: {\n      fontSize: responsiveFontSize(3.5),\n    },\n    feelingsTitle: {\n      fontSize: responsiveFontSize(4),\n    },\n    feelingIcon: {\n      fontSize: responsiveFontSize(7),\n    },\n    feelingText: {\n      fontSize: responsiveFontSize(3.5),\n    },\n    additionalInfoTitle: {\n      fontSize: responsiveFontSize(4),\n    },\n    additionalInfoText: {\n      fontSize: responsiveFontSize(3.5),\n    },\n  },\n});\n\nexport default CounselorSession;\n","import React from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  Dimensions,\n  ScrollView,\n  Pressable,\n} from \"react-native\";\nimport { useNavigation, NavigationProp, RouteProp } from \"@react-navigation/native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\ntype RootStackParamList = {\n  DailyTipDetailScreen: { tip: any };\n};\n\ntype DailyTipDetailScreenRouteProp = RouteProp<RootStackParamList, 'DailyTipDetailScreen'>;\n\nconst DailyTipDetailScreen: React.FC = () => {\n  const navigation = useNavigation<NavigationProp<RootStackParamList>>();\n  const route = useNavigation<DailyTipDetailScreenRouteProp>();\n  const { tip } = route.params;\n\n  const handleBackPress = () => {\n    navigation.goBack();\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <Pressable\n          style={styles.backButton}\n          onPress={handleBackPress}\n        >\n          <FontAwesome5 name=\"arrow-left\" style={styles.backIcon} />\n        </Pressable>\n        <View style={styles.imageContainer}>\n          <Image\n            source={tip.image}\n            style={styles.image}\n            resizeMode=\"cover\"\n          />\n        </View>\n        <View style={styles.contentContainer}>\n          <Text style={styles.contentText}>{tip.content}</Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    paddingHorizontal: responsiveWidth(5),\n    paddingVertical: responsiveHeight(3),\n  },\n  backButton: {\n    padding: responsiveWidth(2),\n  },\n  backIcon: {\n    fontSize: responsiveFontSize(6),\n    color: \"#007bff\",\n  },\n  imageContainer: {\n    alignItems: \"center\",\n    marginVertical: responsiveHeight(3),\n  },\n  image: {\n    width: responsiveWidth(90),\n    height: responsiveHeight(40),\n    borderRadius: responsiveFontSize(5),\n  },\n  contentContainer: {\n    padding: responsiveWidth(5),\n    backgroundColor: \"#f0f0f0\",\n    borderRadius: responsiveWidth(2),\n  },\n  contentText: {\n    fontSize: responsiveFontSize(4),\n    color: \"#333\",\n  },\n});\n\nexport default DailyTipDetailScreen;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, FlatList, ScrollView, SafeAreaView, Dimensions, Platform, Alert } from 'react-native';\nimport styled from 'styled-components/native';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport { ListRenderItem } from 'react-native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { RootStackParamList } from '../types';\nimport { db } from '../firebaseConfig';\nimport { collection, query, onSnapshot, doc, deleteDoc, DocumentData, QuerySnapshot } from 'firebase/firestore';\n\n// Conditionally import based on the platform\nconst TouchableOpacity = Platform.OS === 'web' ? require('react-native-web').TouchableOpacity : require('react-native').TouchableOpacity;\n\nconst { width, height } = Dimensions.get('window');\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\ntype MedicationReminderScreenNavigationProp = NativeStackNavigationProp<\n  RootStackParamList,\n  'MedicationReminderScreen'\n>;\n\ntype Props = {\n  navigation: MedicationReminderScreenNavigationProp;\n};\n\ntype Medication = {\n  id: string;\n  medicationName: string;\n  selectedForm: string;\n  selectedUnit: string;\n  frequency: string;\n  times: string[];\n  timestamp: any;\n};\n\nconst MedicationReminderScreen: React.FC<Props> = ({ navigation }) => {\n  const [selectedDate, setSelectedDate] = useState(new Date().getDate());\n  const [currentMonth, setCurrentMonth] = useState('');\n  const [currentYear, setCurrentYear] = useState('');\n  const [medications, setMedications] = useState<Medication[]>([]);\n\n  useEffect(() => {\n    const date = new Date();\n    setCurrentMonth(date.toLocaleString('default', { month: 'long' }));\n    setCurrentYear(date.getFullYear().toString());\n\n    // Fetch medications\n    const medQuery = query(collection(db, 'medReminder'));\n    const unsubscribe = onSnapshot(medQuery, (querySnapshot: QuerySnapshot<DocumentData>) => {\n      const medsData = querySnapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id })) as Medication[];\n      setMedications(medsData);\n      console.log('Medications fetched: ', medsData);\n    });\n\n    return () => unsubscribe(); // Cleanup on unmount\n  }, []);\n\n  const dates = Array.from({ length: 7 }, (_, i) => {\n    const date = new Date();\n    date.setDate(date.getDate() + i);\n    return date;\n  });\n\n  const confirmDeleteMedication = (id: string) => {\n    if (Platform.OS === 'web') {\n      const result = window.confirm('Are you sure you want to delete this medication?');\n      if (result) {\n        handleDeleteMedication(id);\n      }\n    } else {\n      Alert.alert(\n        'Confirm Delete',\n        'Are you sure you want to delete this medication?',\n        [\n          {\n            text: 'Cancel',\n            style: 'cancel',\n          },\n          {\n            text: 'Delete',\n            onPress: () => handleDeleteMedication(id),\n            style: 'destructive',\n          },\n        ],\n        { cancelable: false }\n      );\n    }\n  };\n\n  const handleDeleteMedication = async (id: string) => {\n    try {\n      await deleteDoc(doc(db, 'medReminder', id));\n    } catch (error) {\n      console.error('Error deleting medication:', error);\n    }\n  };\n\n  const handleAddMedication = () => {\n    navigation.navigate('AddMedication');\n  };\n\n  const renderDateItem: ListRenderItem<Date> = ({ item }) => (\n    <DateItem onPress={() => setSelectedDate(item.getDate())} selected={item.getDate() === selectedDate}>\n      <DayText selected={item.getDate() === selectedDate}>{item.toLocaleString('default', { weekday: 'short' })}</DayText>\n      <DateText selected={item.getDate() === selectedDate}>{item.getDate()}</DateText>\n    </DateItem>\n  );\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <Container>\n        <Header>\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Icon name='arrow-back' size={responsiveFontSize(6)} color='#fff' />\n          </TouchableOpacity>\n          <MonthText>{`${currentMonth} ${currentYear}`}</MonthText>\n          <Icon name='notifications-none' size={responsiveFontSize(6)} color='#fff' />\n        </Header>\n        <DateScrollerContainer>\n          <FlatList\n            horizontal\n            contentContainerStyle={{ paddingHorizontal: responsiveWidth(2.5) }}\n            data={dates}\n            keyExtractor={(item) => item.toString()}\n            renderItem={renderDateItem}\n            showsHorizontalScrollIndicator={false}\n          />\n        </DateScrollerContainer>\n        <MedicationsContainer>\n          <Title>To Take</Title>\n          {medications.length === 0 ? (\n            <NoMedicationsText>You have no medication list.</NoMedicationsText>\n          ) : (\n            <ScrollView>\n              {medications.map((med) => (\n                <MedicationItem key={med.id}>\n                  <MedicationInfo>\n                    <MedicationName>{med.medicationName}</MedicationName>\n                    <MedicationDosage>{`${med.selectedForm} ${med.selectedUnit}`}</MedicationDosage>\n                    <MedTimeText>{med.times ? med.times.join(', ') : 'No time set'}</MedTimeText>\n                    <MedicationFrequency>{med.frequency ? med.frequency : 'No frequency set'}</MedicationFrequency>\n                  </MedicationInfo>\n                  <TouchableOpacity onPress={() => confirmDeleteMedication(med.id)}>\n                    <Icon name='delete' size={responsiveFontSize(6)} color='#2e2e2d' />\n                  </TouchableOpacity>\n                </MedicationItem>\n              ))}\n            </ScrollView>\n          )}\n        </MedicationsContainer>\n        <AddButton onPress={handleAddMedication}>\n          <Icon name='add' size={responsiveFontSize(7.5)} color='#fff' />\n        </AddButton>\n      </Container>\n    </SafeAreaView>\n  );\n};\n\nconst Container = styled.View`\n  flex: 1;\n  background-color: #318ce7;\n`;\n\nconst Header = styled.View`\n  background-color: #318ce7;\n  padding: ${responsiveWidth(4)}px;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst MonthText = styled.Text`\n  color: #fff;\n  font-size: ${responsiveFontSize(4.5)}px;\n  text-align: center;\n  flex: 1;\n`;\n\nconst DateScrollerContainer = styled.View`\n  background-color: #318ce7;\n`;\n\nconst DateItem = styled(TouchableOpacity)<{ selected: boolean }>`\n  align-items: center;\n  margin: 0 ${responsiveWidth(2.5)}px;\n  background-color: ${({ selected }) => (selected ? '#fff' : 'transparent')};\n  padding: ${responsiveHeight(1.25)}px ${responsiveWidth(2.5)}px;\n  border-radius: 10px;\n`;\n\nconst DayText = styled.Text<{ selected: boolean }>`\n  color: ${({ selected }) => (selected ? '#318ce7' : '#fff')};\n  font-weight: bold;\n`;\n\nconst DateText = styled.Text<{ selected: boolean }>`\n  color: ${({ selected }) => (selected ? '#318ce7' : '#fff')};\n  font-size: ${responsiveFontSize(4.5)}px;\n  margin-top: ${responsiveHeight(1.25)}px;\n`;\n\nconst MedicationsContainer = styled.View`\n  flex: 1;\n  background-color: #fff;\n  margin-top: ${responsiveHeight(2.5)}px;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n  padding: ${responsiveWidth(5)}px;\n`;\n\nconst Title = styled.Text`\n  color: #318ce7;\n  font-size: ${responsiveFontSize(4.5)}px;\n  margin-bottom: ${responsiveHeight(2.5)}px;\n`;\n\nconst NoMedicationsText = styled.Text`\n  color: #000;\n  font-size: ${responsiveFontSize(4)}px;\n  text-align: center;\n  margin-top: ${responsiveHeight(2.5)}px;\n`;\n\nconst MedicationItem = styled.View`\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #f2f2f2;\n  padding: ${responsiveHeight(1.75)}px;\n  border-radius: 10px;\n  margin-bottom: ${responsiveHeight(2.5)}px;\n`;\n\nconst MedicationInfo = styled.View``;\n\nconst MedicationName = styled.Text`\n  color: #000;\n  font-size: ${responsiveFontSize(4)}px;\n  font-weight: bold;\n`;\n\nconst MedicationDosage = styled.Text`\n  color: #000;\n  font-size: ${responsiveFontSize(3.5)}px;\n  margin-top: ${responsiveHeight(1.25)}px;\n`;\n\nconst MedTimeText = styled.Text`\n  color: #318ce7;\n  font-size: ${responsiveFontSize(3.5)}px;\n  margin-top: ${responsiveHeight(1.25)}px;\n`;\n\nconst MedicationFrequency = styled.Text`\n  color: #318ce7;\n  font-size: ${responsiveFontSize(3.5)}px;\n  margin-top: ${responsiveHeight(1.25)}px;\n`;\n\nconst AddButton = styled(TouchableOpacity)`\n  position: absolute;\n  right: ${responsiveWidth(5)}px;\n  bottom: ${responsiveHeight(5)}px;\n  background-color: #318ce7;\n  width: ${responsiveWidth(15)}px;\n  height: ${responsiveWidth(15)}px;\n  border-radius: ${responsiveWidth(7.5)}px;\n  justify-content: center;\n  align-items: center;\n  elevation: 5;\n`;\n\nexport default MedicationReminderScreen;\n","import * as React from \"react\";\nimport {\n  Text,\n  StyleSheet,\n  View,\n  ScrollView,\n  Pressable,\n  Dimensions,\n  Image,\n  Linking,\n  Platform,\n} from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport StatusBar from \"../components/StatusBar\"; // Adjust path as per your project structure\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst FitnessNutritionScreen = ({ navigation }) => {\n  const resources = [\n    {\n      id: 1,\n      title: \"Healthy Eating Tips\",\n      description: \"Learn how to make healthier food choices and maintain a balanced diet.\",\n      imageUrl: \"https://example.com/healthy_eating.jpg\",\n      link: \"https://www.example.com/healthy-eating\",\n    },\n    {\n      id: 2,\n      title: \"Exercise for Beginners\",\n      description: \"A beginner's guide to starting a fitness routine and staying motivated.\",\n      imageUrl: \"https://example.com/exercise_beginners.jpg\",\n      link: \"https://www.example.com/exercise-beginners\",\n    },\n    {\n      id: 3,\n      title: \"Meal Planning\",\n      description: \"Tips and tricks for effective meal planning and preparation.\",\n      imageUrl: \"https://example.com/meal_planning.jpg\",\n      link: \"https://www.example.com/meal-planning\",\n    },\n    {\n      id: 4,\n      title: \"Hydration Importance\",\n      description: \"Understand the importance of staying hydrated and how it affects your health.\",\n      imageUrl: \"https://example.com/hydration.jpg\",\n      link: \"https://www.example.com/hydration\",\n    },\n  ];\n\n  const openLink = (link) => {\n    Linking.openURL(link);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar screenName=\"Fitness & Nutrition\" />\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        {resources.map((resource) => (\n          <Pressable\n            key={resource.id}\n            style={[\n              styles.resourceCard,\n              Platform.OS === 'web' && styles.webResourceCard\n            ]}\n            onPress={() => openLink(resource.link)}\n          >\n            <Image source={{ uri: resource.imageUrl }} style={styles.resourceImage} />\n            <View style={styles.resourceInfo}>\n              <Text style={styles.resourceTitle}>{resource.title}</Text>\n              <Text style={styles.resourceDescription}>{resource.description}</Text>\n            </View>\n          </Pressable>\n        ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f0f4f8\",\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: responsiveWidth(5),\n    backgroundColor: \"#fff\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ddd\",\n  },\n  backButton: {\n    marginRight: responsiveWidth(3),\n  },\n  headerTitle: {\n    fontSize: responsiveFontSize(5),\n    fontWeight: \"bold\",\n    color: \"#1F75FE\",\n  },\n  scrollContainer: {\n    padding: responsiveWidth(5),\n  },\n  resourceCard: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    padding: responsiveWidth(3),\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.84,\n    elevation: 5,\n    marginBottom: responsiveHeight(2),\n  },\n  webResourceCard: {\n    cursor: 'pointer', // Web-specific style\n  },\n  resourceImage: {\n    width: responsiveWidth(25),\n    height: responsiveWidth(25),\n    borderRadius: 10,\n    marginRight: responsiveWidth(5),\n  },\n  resourceInfo: {\n    flex: 1,\n  },\n  resourceTitle: {\n    fontSize: responsiveFontSize(4.5),\n    fontWeight: \"bold\",\n    color: \"#000\",\n    marginBottom: responsiveHeight(1),\n  },\n  resourceDescription: {\n    fontSize: responsiveFontSize(3.5),\n    color: \"#666\",\n  },\n});\n\nexport default FitnessNutritionScreen;\n","import * as React from \"react\";\nimport { StyleSheet, Text, View, Pressable, Dimensions } from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { useNavigation, NavigationProp, ParamListBase } from \"@react-navigation/native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport StatusBar from \"../components/StatusBar\"; // Adjust the path based on your project structure\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst Settings = () => {\n  const navigation = useNavigation<NavigationProp<ParamListBase>>();\n\n  const handlePress = (buttonText: string) => {\n    // Map button text to screen component\n    const screenComponents: { [key: string]: React.ComponentType } = {\n      Profile: require(\"./ProfileScreen\").default, // Adjust path as needed\n      Privacy: require(\"./PrivacyScreen\").default, // Adjust path as needed\n      Notification: require(\"./NotificationScreen\").default, // Adjust path as needed\n      Accessibility: require(\"./AccessibilityScreen\").default, // Adjust path as needed\n      Preferences: require(\"./PreferencesScreen\").default, // Adjust path as needed\n    };\n\n    // Navigate using the mapped screen component\n    navigation.navigate(buttonText, {});\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar screenName=\"Settings\" />\n      <View style={styles.buttonContainer}>\n        <Pressable style={styles.button} onPress={() => handlePress(\"ProfileScreen\")}>\n          <FontAwesome name=\"user\" size={24} color=\"#1F75FE\" style={styles.buttonIcon} />\n          <Text style={styles.buttonText}>Profile</Text>\n        </Pressable>\n        <Pressable style={styles.button} onPress={() => handlePress(\"PrivacyScreen\")}>\n          <FontAwesome name=\"lock\" size={24} color=\"#1F75FE\" style={styles.buttonIcon} />\n          <Text style={styles.buttonText}>Privacy</Text>\n        </Pressable>\n        <Pressable style={styles.button} onPress={() => handlePress(\"NotificationSettings\")}>\n          <FontAwesome name=\"bell\" size={24} color=\"#1F75FE\" style={styles.buttonIcon} />\n          <Text style={styles.buttonText}>Notification</Text>\n        </Pressable>\n        <Pressable style={styles.button} onPress={() => handlePress(\"AccessibilityScreen\")}>\n          <FontAwesome name=\"universal-access\" size={24} color=\"#1F75FE\" style={styles.buttonIcon} />\n          <Text style={styles.buttonText}>Accessibility</Text>\n        </Pressable>\n        <Pressable style={styles.button} onPress={() => handlePress(\"PreferencesScreen\")}>\n          <FontAwesome name=\"sliders\" size={24} color=\"#1F75FE\" style={styles.buttonIcon} />\n          <Text style={styles.buttonText}>Preferences</Text>\n        </Pressable>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  buttonContainer: {\n    marginTop: responsiveHeight(5),\n    alignItems: \"center\",\n  },\n  button: {\n    width: responsiveWidth(90),\n    height: responsiveHeight(8),\n    backgroundColor: \"#fbfaf3\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: responsiveWidth(5),\n    marginBottom: responsiveHeight(2),\n    borderRadius: 8,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  buttonText: {\n    fontSize: responsiveFontSize(5),\n    color: \"#3a3a3a\",\n    marginLeft: 15,\n  },\n  buttonIcon: {\n    marginRight: responsiveWidth(3),\n  },\n});\n\nexport default Settings;\n","import React from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  SafeAreaView,\n  Dimensions,\n  Pressable,\n} from \"react-native\";\nimport { FontAwesome, MaterialIcons } from \"@expo/vector-icons\";\nimport { useNavigation, NavigationProp, ParamListBase } from \"@react-navigation/native\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\ninterface Counselor {\n  fullName: string;\n  position: string;\n  description: string;\n  available: boolean;\n  experience: number;\n  rating: number;\n  specialization: string;\n}\n\ninterface CounselorDetailsProps {\n  route: {\n    params: {\n      counselor: Counselor;\n    };\n  };\n}\n\nconst CounselorDetails: React.FC<CounselorDetailsProps> = ({ route }) => {\n  const navigation = useNavigation<NavigationProp<ParamListBase>>();\n  const { counselor } = route.params;\n\n  const handleBackPress = () => {\n    navigation.goBack();\n  };\n\n  const handleBookAppointmentPress = () => {\n    navigation.navigate(\"BookAppointment\", { counselor });\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <View style={styles.header}>\n          <Pressable style={styles.backButton} onPress={handleBackPress}>\n            <MaterialIcons name=\"arrow-back\" size={responsiveFontSize(6)} color=\"#000\" />\n          </Pressable>\n          <Pressable style={styles.menuButton}>\n            <MaterialIcons name=\"more-vert\" size={responsiveFontSize(6)} color=\"#000\" />\n          </Pressable>\n        </View>\n        <Image style={styles.counselorImage} source={require(\"../assets/counselor.png\")} />\n        <View style={styles.counselorInfoContainer}>\n          <Text style={styles.counselorName}>{counselor.fullName}</Text>\n          <Text style={styles.counselorSpecialization}>{counselor.specialization}</Text>\n          <View style={styles.ratingContainer}>\n            <FontAwesome name=\"star\" size={responsiveFontSize(4)} color=\"#FFD700\" />\n            <Text style={styles.ratingText}>{counselor.rating}</Text>\n          </View>\n          <Text style={styles.counselorPosition}>{counselor.position}</Text>\n          <Text style={styles.counselorExperience}>Experience: {counselor.experience} years</Text>\n        </View>\n        <View style={styles.buttonGroup}>\n          <Pressable style={styles.videoCallButton} onPress={() => { /* Handle Video Call */ }}>\n            <MaterialIcons name=\"videocam\" size={responsiveFontSize(5)} color=\"#fff\" />\n            <Text style={styles.buttonText}>Video Call</Text>\n          </Pressable>\n          <Pressable style={styles.chatButton} onPress={() => { /* Handle Online Chat */ }}>\n            <MaterialIcons name=\"chat\" size={responsiveFontSize(5)} color=\"#fff\" />\n            <Text style={styles.buttonText}>Online Chat</Text>\n          </Pressable>\n        </View>\n        <View style={styles.aboutContainer}>\n          <Text style={styles.aboutTitle}>About Therapists</Text>\n          <Text style={styles.aboutDescription}>{counselor.description}</Text>\n        </View>\n        <Pressable style={styles.bookNowButton} onPress={handleBookAppointmentPress}>\n          <Text style={styles.bookNowText}>Book Now</Text>\n        </Pressable>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    alignItems: \"center\",\n    paddingVertical: responsiveHeight(2),\n    paddingHorizontal: responsiveWidth(5),\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    marginBottom: responsiveHeight(2),\n  },\n  backButton: {\n    padding: responsiveWidth(2),\n  },\n  menuButton: {\n    padding: responsiveWidth(2),\n  },\n  counselorImage: {\n    width: responsiveWidth(30),\n    height: responsiveWidth(30),\n    borderRadius: responsiveWidth(15),\n    marginBottom: responsiveHeight(2),\n    resizeMode: \"cover\",\n  },\n  counselorInfoContainer: {\n    alignItems: \"center\",\n    marginBottom: responsiveHeight(2),\n  },\n  counselorName: {\n    fontSize: responsiveFontSize(5),\n    fontWeight: \"bold\",\n  },\n  counselorSpecialization: {\n    fontSize: responsiveFontSize(3.5),\n    color: \"#007bff\",\n    marginBottom: responsiveHeight(1),\n  },\n  ratingContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: responsiveHeight(1),\n  },\n  ratingText: {\n    fontSize: responsiveFontSize(4),\n    marginLeft: responsiveWidth(1),\n  },\n  counselorPosition: {\n    fontSize: responsiveFontSize(4),\n    color: \"#666\",\n    marginBottom: responsiveHeight(1),\n  },\n  counselorExperience: {\n    fontSize: responsiveFontSize(3.5),\n    color: \"#666\",\n  },\n  buttonGroup: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: \"100%\",\n    marginBottom: responsiveHeight(3),\n  },\n  videoCallButton: {\n    backgroundColor: \"#007bff\",\n    paddingVertical: responsiveHeight(2),\n    paddingHorizontal: responsiveWidth(6),\n    borderRadius: responsiveWidth(3),\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  chatButton: {\n    backgroundColor: \"#6c757d\",\n    paddingVertical: responsiveHeight(2),\n    paddingHorizontal: responsiveWidth(6),\n    borderRadius: responsiveWidth(3),\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: responsiveFontSize(3.5),\n    marginLeft: responsiveWidth(2),\n  },\n  aboutContainer: {\n    width: \"100%\",\n    backgroundColor: \"#f8f9fa\",\n    padding: responsiveWidth(5),\n    borderRadius: responsiveWidth(2),\n    marginBottom: responsiveHeight(3),\n  },\n  aboutTitle: {\n    fontSize: responsiveFontSize(4.5),\n    fontWeight: \"bold\",\n    marginBottom: responsiveHeight(1),\n  },\n  aboutDescription: {\n    fontSize: responsiveFontSize(3.5),\n    color: \"#333\",\n  },\n  bookNowButton: {\n    width: \"80%\",\n    backgroundColor: \"#007bff\",\n    paddingVertical: responsiveHeight(2),\n    borderRadius: responsiveWidth(3),\n    alignItems: \"center\",\n    marginBottom: responsiveHeight(3),\n  },\n  bookNowText: {\n    color: \"#fff\",\n    fontSize: responsiveFontSize(4),\n    fontWeight: \"bold\",\n  },\n});\n\nexport default CounselorDetails;\n","import React, { useState } from \"react\";\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  View,\n  SafeAreaView,\n  TextInput,\n  Pressable,\n  Dimensions,\n} from \"react-native\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { useNavigation, NavigationProp, ParamListBase } from \"@react-navigation/native\";\nimport MaterialIcons from \"@expo/vector-icons/build/MaterialIcons\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\ninterface Counselor {\n  fullName: string;\n  position: string;\n}\n\ninterface BookAppointmentScreenProps {\n  route: {\n    params: {\n      counselor: Counselor;\n    };\n  };\n}\n\nconst BookAppointmentScreen: React.FC<BookAppointmentScreenProps> = ({ route }) => {\n  const navigation = useNavigation<NavigationProp<ParamListBase>>();\n  const { counselor } = route.params;\n  const [date, setDate] = useState(new Date());\n  const [mode, setMode] = useState<\"date\" | \"time\">(\"date\");\n  const [show, setShow] = useState(false);\n  const [appointmentDetails, setAppointmentDetails] = useState(\"\");\n  const [counselingMode, setCounselingMode] = useState<\"video\" | \"audio\" | \"face-to-face\">(\"video\");\n\n  const handleBackPress = () => {\n    navigation.goBack();\n  };\n\n  const onChange = (event: any, selectedDate?: Date) => {\n    const currentDate = selectedDate || date;\n    setShow(false);\n    setDate(currentDate);\n  };\n\n  const showMode = (currentMode: \"date\" | \"time\") => {\n    setShow(true);\n    setMode(currentMode);\n  };\n\n  const showDatePicker = () => {\n    showMode(\"date\");\n  };\n\n  const showTimePicker = () => {\n    showMode(\"time\");\n  };\n\n  const handleBookPress = () => {\n    // Logic to book the appointment goes here\n    // For now, just navigate back to the CounselorDetails screen\n    navigation.goBack();\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <View style={styles.header}>\n          <Pressable style={styles.backButton} onPress={handleBackPress}>\n            <MaterialIcons name=\"arrow-back\" size={responsiveFontSize(6)} color=\"#000\" />\n          </Pressable>\n          <Text style={styles.headerText}>Book Appointment</Text>\n        </View>\n        <Text style={styles.label}>Counselor:</Text>\n        <Text style={styles.text}>{counselor.fullName}</Text>\n        <Text style={styles.label}>Select Date:</Text>\n        <Pressable style={styles.button} onPress={showDatePicker}>\n          <Text style={styles.buttonText}>Choose Date</Text>\n        </Pressable>\n        <Text style={styles.text}>{date.toDateString()}</Text>\n        <Text style={styles.label}>Select Time:</Text>\n        <Pressable style={styles.button} onPress={showTimePicker}>\n          <Text style={styles.buttonText}>Choose Time</Text>\n        </Pressable>\n        <Text style={styles.text}>{date.toTimeString()}</Text>\n        <Text style={styles.label}>Mode of Counseling:</Text>\n        <View style={styles.modeContainer}>\n          <Pressable\n            style={[styles.modeButton, counselingMode === \"video\" && styles.selectedModeButton]}\n            onPress={() => setCounselingMode(\"video\")}\n          >\n            <Text style={styles.modeButtonText}>Video</Text>\n          </Pressable>\n          <Pressable\n            style={[styles.modeButton, counselingMode === \"audio\" && styles.selectedModeButton]}\n            onPress={() => setCounselingMode(\"audio\")}\n          >\n            <Text style={styles.modeButtonText}>Audio</Text>\n          </Pressable>\n          <Pressable\n            style={[styles.modeButton, counselingMode === \"face-to-face\" && styles.selectedModeButton]}\n            onPress={() => setCounselingMode(\"face-to-face\")}\n          >\n            <Text style={styles.modeButtonText}>Face to Face</Text>\n          </Pressable>\n        </View>\n        <Text style={styles.label}>Details:</Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Enter appointment details\"\n          value={appointmentDetails}\n          onChangeText={setAppointmentDetails}\n          multiline\n        />\n        <Pressable style={styles.bookButton} onPress={handleBookPress}>\n          <Text style={styles.bookButtonText}>Book Appointment</Text>\n        </Pressable>\n        {show && (\n          <DateTimePicker\n            testID=\"dateTimePicker\"\n            value={date}\n            mode={mode}\n            is24Hour={true}\n            display=\"default\"\n            onChange={onChange}\n          />\n        )}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    paddingHorizontal: responsiveWidth(5),\n    paddingVertical: responsiveHeight(3),\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: responsiveHeight(3),\n  },\n  backButton: {\n    padding: responsiveWidth(2),\n  },\n  backButtonText: {\n    fontSize: responsiveFontSize(4),\n    color: \"#007bff\",\n  },\n  headerText: {\n    fontSize: responsiveFontSize(5),\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  label: {\n    fontSize: responsiveFontSize(4),\n    marginBottom: responsiveHeight(1),\n  },\n  text: {\n    fontSize: responsiveFontSize(3.5),\n    marginBottom: responsiveHeight(2),\n  },\n  button: {\n    backgroundColor: \"#007bff\",\n    padding: responsiveWidth(4),\n    borderRadius: responsiveWidth(2),\n    alignItems: \"center\",\n    marginBottom: responsiveHeight(2),\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: responsiveFontSize(3.5),\n  },\n  input: {\n    backgroundColor: \"#f0f0f0\",\n    padding: responsiveWidth(4),\n    borderRadius: responsiveWidth(2),\n    fontSize: responsiveFontSize(3.5),\n    marginBottom: responsiveHeight(3),\n  },\n  modeContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: responsiveHeight(2),\n  },\n  modeButton: {\n    backgroundColor: \"#f0f0f0\",\n    padding: responsiveWidth(4),\n    borderRadius: responsiveWidth(2),\n  },\n  selectedModeButton: {\n    backgroundColor: \"#007bff\",\n  },\n  modeButtonText: {\n    color: \"#000\",\n    fontSize: responsiveFontSize(3.5),\n  },\n  bookButton: {\n    backgroundColor: \"#28a745\",\n    padding: responsiveWidth(4),\n    borderRadius: responsiveWidth(2),\n    alignItems: \"center\",\n  },\n  bookButtonText: {\n    color: \"#fff\",\n    fontSize: responsiveFontSize(3.5),\n  },\n});\n\nexport default BookAppointmentScreen;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  ScrollView,\n  SafeAreaView,\n  Dimensions,\n  KeyboardAvoidingView,\n  Modal,\n  Alert,\n  Platform,\n  TextInput as RNTextInput,\n  TouchableOpacity as RNTouchableOpacity,\n} from \"react-native\";\nimport styled from \"styled-components/native\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\nimport { NavigationProp, ParamListBase } from \"@react-navigation/native\";\nimport { db } from \"../firebaseConfig\"; // Ensure the correct path\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\n\n// Conditionally import TouchableOpacity\nconst TouchableOpacity = Platform.OS === 'web' ? require('react-native-web').TouchableOpacity : RNTouchableOpacity;\n\ninterface CombinedScreenProps {\n  navigation: NavigationProp<ParamListBase>;\n}\n\nconst CombinedScreen: React.FC<CombinedScreenProps> = ({ navigation }) => {\n  const [medicationName, setMedicationName] = useState(\"\");\n  const [selectedForm, setSelectedForm] = useState(\"Capsule\");\n  const [selectedUnit, setSelectedUnit] = useState(\"mg\");\n  const [frequency, setFrequency] = useState(\"Every Day\");\n  const [customFrequency, setCustomFrequency] = useState(\"\");\n  const [showFrequencyModal, setShowFrequencyModal] = useState(false);\n  const [showFormModal, setShowFormModal] = useState(false);\n  const [showUnitModal, setShowUnitModal] = useState(false);\n  const [showTimePicker, setShowTimePicker] = useState(false);\n  const [time, setTime] = useState(new Date());\n  const [times, setTimes] = useState<string[]>([]);\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get(\"window\").width);\n  const [screenHeight, setScreenHeight] = useState(Dimensions.get(\"window\").height);\n\n  const forms = [\n    \"Capsule\",\n    \"Tablet\",\n    \"Liquid\",\n    \"Topical\",\n    \"Cream\",\n    \"Device\",\n    \"Drops\",\n    \"Foam\",\n    \"Gel\",\n    \"Inhaler\",\n    \"Injection\",\n    \"Lotion\",\n    \"Ointment\",\n    \"Patch\",\n    \"Powder\",\n    \"Spray\",\n    \"Suppository\",\n  ];\n  const units = [\"mg\", \"mcg\", \"g\", \"ml\", \"%\"];\n  const frequencies = [\"Every Day\", \"Every Week\", \"Every Month\", \"Other\"];\n\n  useEffect(() => {\n    const handleResize = ({ window }) => {\n      setScreenWidth(window.width);\n      setScreenHeight(window.height);\n    };\n\n    const dimensionListener = Dimensions.addEventListener(\"change\", handleResize);\n\n    return () => {\n      dimensionListener?.remove();\n    };\n  }, []);\n\n  const vw = screenWidth / 100;\n  const vh = screenHeight / 100;\n\n  const dynamicStyles = getDynamicStyles(vw, vh);\n\n  const handleTimeChange = (event: any, selectedTime?: Date) => {\n    if (selectedTime) {\n      setTime(selectedTime);\n    }\n    if (Platform.OS !== 'web') {\n      setShowTimePicker(false);\n    }\n  };\n\n  const handleConfirmTime = () => {\n    setTimes([...times, time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })]);\n    setShowTimePicker(false);\n  };\n\n  const selectFrequency = (selectedFrequency: string) => {\n    if (selectedFrequency === \"Other\") {\n      setFrequency(selectedFrequency);\n      setShowFrequencyModal(true);\n    } else {\n      setFrequency(selectedFrequency);\n      setCustomFrequency(\"\");\n      setShowFrequencyModal(false);\n    }\n  };\n\n  const handleAddMedicine = async () => {\n    try {\n      await addDoc(collection(db, \"medReminder\"), {\n        medicationName,\n        selectedForm,\n        selectedUnit,\n        frequency: customFrequency.trim() !== \"\" ? customFrequency : frequency,\n        times,\n        timestamp: serverTimestamp(),\n      });\n      Alert.alert(\n        \"Success\",\n        \"Medication details saved successfully\",\n        [\n          {\n            text: \"OK\",\n            onPress: () => navigation.goBack(), // Navigate to previous screen\n          },\n        ],\n        { cancelable: false }\n      );\n    } catch (error) {\n      console.error(\"Error adding document:\", error);\n      Alert.alert(\"Error\", \"Failed to save medication details\");\n    }\n  };\n\n  return (\n    <SafeAreaView style={dynamicStyles.container}>\n      <ScrollView contentContainerStyle={dynamicStyles.scrollContainer}>\n        <KeyboardAvoidingView behavior={\"padding\"} style={{ flex: 1 }}>\n          <Header vw={vw} vh={vh}>\n            <TouchableOpacity onPress={() => navigation.goBack()}>\n              <Icon name=\"arrow-back\" size={responsiveFontSize(vw, 6)} color=\"#318CE7\" />\n            </TouchableOpacity>\n            <HeaderText vw={vw}>Add Medicine</HeaderText>\n          </Header>\n          <Image source={require(\"../assets/medicine.png\")} style={dynamicStyles.icon} />\n\n          <FormContainer vw={vw} vh={vh}>\n            <SectionTitle vw={vw} vh={vh}>Pill Name</SectionTitle>\n            <StyledInput\n              vw={vw}\n              placeholder=\"Enter the pill name\"\n              value={medicationName}\n              onChangeText={setMedicationName}\n              placeholderTextColor=\"#888\"\n            />\n\n            <SectionTitle vw={vw} vh={vh}>Dose</SectionTitle>\n            <Row vw={vw} vh={vh}>\n              <DropdownButton vw={vw} vh={vh} onPress={() => setShowUnitModal(true)}>\n                <DropdownButtonText vw={vw}>{selectedUnit}</DropdownButtonText>\n                <Icon name=\"arrow-drop-down\" size={responsiveFontSize(vw, 6)} color=\"#318CE7\" />\n              </DropdownButton>\n              <DropdownButton vw={vw} vh={vh} onPress={() => setShowFormModal(true)}>\n                <DropdownButtonText vw={vw}>{selectedForm}</DropdownButtonText>\n                <Icon name=\"arrow-drop-down\" size={responsiveFontSize(vw, 6)} color=\"#318CE7\" />\n              </DropdownButton>\n            </Row>\n\n            <SectionTitle vw={vw} vh={vh}>Time</SectionTitle>\n            <Row vw={vw} vh={vh}>\n              <DropdownButton vw={vw} vh={vh} onPress={() => setShowTimePicker(true)}>\n                <DropdownButtonText vw={vw}>\n                  {time.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                  })}\n                </DropdownButtonText>\n                <Icon name=\"arrow-drop-down\" size={responsiveFontSize(vw, 6)} color=\"#318CE7\" />\n              </DropdownButton>\n            </Row>\n\n            <SectionTitle vw={vw} vh={vh}>How to Use</SectionTitle>\n            <Row vw={vw} vh={vh}>\n              <DropdownButton vw={vw} vh={vh} onPress={() => setShowFrequencyModal(true)}>\n                <DropdownButtonText vw={vw}>\n                  {customFrequency.trim() !== \"\" ? customFrequency : frequency}\n                </DropdownButtonText>\n                <Icon name=\"arrow-drop-down\" size={responsiveFontSize(vw, 6)} color=\"#318CE7\" />\n              </DropdownButton>\n            </Row>\n\n            <AddButton vw={vw} vh={vh} disabled={medicationName.trim() === \"\"} onPress={handleAddMedicine}>\n              <AddButtonText vw={vw} disabled={medicationName.trim() === \"\"}>\n                Add Medicine\n              </AddButtonText>\n            </AddButton>\n          </FormContainer>\n\n          {showTimePicker && Platform.OS !== 'web' && (\n            <DateTimePicker\n              testID=\"dateTimePicker\"\n              value={time}\n              mode=\"time\"\n              is24Hour={true}\n              display=\"default\"\n              onChange={handleTimeChange}\n            />\n          )}\n\n          {showTimePicker && Platform.OS === 'web' && (\n            <Modal\n              animationType=\"fade\"\n              transparent={true}\n              visible={showTimePicker}\n              onRequestClose={() => setShowTimePicker(false)}\n            >\n              <CenteredModalContainer>\n                <ModalContent vw={vw}>\n                  <ModalTitle vw={vw} vh={vh}>Select Time</ModalTitle>\n                  <input\n                    type=\"time\"\n                    value={time.toLocaleTimeString('en-US', { hour12: false }).substring(0, 5)}\n                    onChange={(e) => handleTimeChange({ type: 'set' }, new Date(`1970-01-01T${e.target.value}:00`))}\n                    style={{ width: '100%', padding: 10, borderRadius: 10, borderWidth: 1, borderColor: '#ccc', outline: 'none' }}\n                  />\n                  <ButtonRow vw={vw} vh={vh}>\n                    <CloseButton vw={vw} vh={vh} onPress={() => setShowTimePicker(false)}>\n                      <CloseButtonText vw={vw}>Cancel</CloseButtonText>\n                    </CloseButton>\n                    <ConfirmButton vw={vw} vh={vh} onPress={handleConfirmTime}>\n                      <ConfirmButtonText vw={vw}>OK</ConfirmButtonText>\n                    </ConfirmButton>\n                  </ButtonRow>\n                </ModalContent>\n              </CenteredModalContainer>\n            </Modal>\n          )}\n\n          {/* Medication Type Modal */}\n          <Modal\n            animationType=\"fade\"\n            transparent={true}\n            visible={showFormModal}\n            onRequestClose={() => setShowFormModal(false)}\n          >\n            <ModalContainer>\n              <ModalContent vw={vw}>\n                <ModalTitle vw={vw} vh={vh}>Select Medication Type</ModalTitle>\n                <OptionsContainer vw={vw} vh={vh}>\n                  {forms.map((form) => (\n                    <OptionItem\n                      key={form}\n                      vw={vw}\n                      vh={vh}\n                      onPress={() => {\n                        setSelectedForm(form);\n                        setShowFormModal(false);\n                      }}\n                    >\n                      <OptionText vw={vw}>{form}</OptionText>\n                    </OptionItem>\n                  ))}\n                </OptionsContainer>\n                <CloseButton vw={vw} vh={vh} onPress={() => setShowFormModal(false)}>\n                  <CloseButtonText vw={vw}>Close</CloseButtonText>\n                </CloseButton>\n              </ModalContent>\n            </ModalContainer>\n          </Modal>\n\n          {/* Unit Modal */}\n          <Modal\n            animationType=\"fade\"\n            transparent={true}\n            visible={showUnitModal}\n            onRequestClose={() => setShowUnitModal(false)}\n          >\n            <ModalContainer>\n              <ModalContent vw={vw}>\n                <ModalTitle vw={vw} vh={vh}>Select Unit</ModalTitle>\n                <OptionsContainer vw={vw} vh={vh}>\n                  {units.map((unit) => (\n                    <OptionItem\n                      key={unit}\n                      vw={vw}\n                      vh={vh}\n                      onPress={() => {\n                        setSelectedUnit(unit);\n                        setShowUnitModal(false);\n                      }}\n                    >\n                      <OptionText vw={vw}>{unit}</OptionText>\n                    </OptionItem>\n                  ))}\n                </OptionsContainer>\n                <CloseButton vw={vw} vh={vh} onPress={() => setShowUnitModal(false)}>\n                  <CloseButtonText vw={vw}>Close</CloseButtonText>\n                </CloseButton>\n              </ModalContent>\n            </ModalContainer>\n          </Modal>\n\n          {/* Frequency Modal */}\n          <Modal\n            animationType=\"fade\"\n            transparent={true}\n            visible={showFrequencyModal}\n            onRequestClose={() => setShowFrequencyModal(false)}\n          >\n            <ModalContainer>\n              <ModalContent vw={vw}>\n                <ModalTitle vw={vw} vh={vh}>Select Frequency</ModalTitle>\n                <OptionsContainer vw={vw} vh={vh}>\n                  {frequencies.map((freq) => (\n                    <OptionItem\n                      key={freq}\n                      vw={vw}\n                      vh={vh}\n                      onPress={() => selectFrequency(freq)}\n                    >\n                      <OptionText vw={vw}>{freq}</OptionText>\n                    </OptionItem>\n                  ))}\n                  {frequency === \"Other\" && (\n                    <StyledInput\n                      vw={vw}\n                      placeholder=\"Enter custom frequency\"\n                      value={customFrequency}\n                      onChangeText={setCustomFrequency}\n                      placeholderTextColor=\"#888\"\n                    />\n                  )}\n                </OptionsContainer>\n                <CloseButton vw={vw} vh={vh} onPress={() => setShowFrequencyModal(false)}>\n                  <CloseButtonText vw={vw}>Close</CloseButtonText>\n                </CloseButton>\n              </ModalContent>\n            </ModalContainer>\n          </Modal>\n        </KeyboardAvoidingView>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst responsiveWidth = (vw: number, percent: number) => vw * percent;\nconst responsiveHeight = (vh: number, percent: number) => vh * percent;\nconst responsiveFontSize = (vw: number, percent: number) => vw * percent;\n\nconst getDynamicStyles = (vw: number, vh: number) => {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: \"#fff\", // Set to white\n    },\n    scrollContainer: {\n      flexGrow: 1,\n      paddingBottom: responsiveHeight(vh, 10),\n      paddingHorizontal: responsiveWidth(vw, 5),\n    },\n    icon: {\n      width: responsiveWidth(vw, 30),\n      height: responsiveWidth(vw, 30),\n      alignSelf: \"center\",\n      marginBottom: responsiveHeight(vh, 2),\n    },\n    input: {\n      borderWidth: 1,\n      borderColor: \"#ccc\",\n      padding: 10,\n      borderRadius: 10,\n      width: \"100%\",\n      marginBottom: 20,\n      fontSize: responsiveFontSize(vw, 4),\n      ...Platform.select({\n        web: {\n          outline: \"none\",\n          boxShadow: \"none\",\n        },\n      }),\n    },\n  });\n};\n\nconst Header = styled.View<{ vw: number; vh: number }>`\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${({ vh, vw }) => responsiveHeight(vh, 2)}px ${({ vw }) => responsiveWidth(vw, 5)}px;\n`;\n\nconst HeaderText = styled.Text<{ vw: number }>`\n  color: #318CE7;\n  font-size: ${({ vw }) => responsiveFontSize(vw, 5)}px;\n  font-weight: bold;\n`;\n\nconst FormContainer = styled.View<{ vw: number; vh: number }>`\n  width: 98%;\n  align-self: center;\n  background-color: #fff;\n  padding: ${({ vh }) => responsiveHeight(vh, 3)}px;\n  border-radius: 20px;\n  margin: ${({ vh, vw }) => responsiveHeight(vh, 3)}px ${({ vw }) => responsiveWidth(vw, 5)}px;\n`;\n\nconst SectionTitle = styled.Text<{ vw: number; vh: number }>`\n  font-size: ${({ vw }) => responsiveFontSize(vw, 4.5)}px;\n  font-weight: bold;\n  margin-bottom: ${({ vh }) => responsiveHeight(vh, 1.5)}px;\n`;\n\nconst Row = styled.View<{ vw: number; vh: number }>`\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: ${({ vh }) => responsiveHeight(vh, 2)}px;\n`;\n\nconst DropdownButton = styled.TouchableOpacity<{ vw: number; vh: number }>`\n  flex: 1;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${({ vh }) => responsiveHeight(vh, 1.5)}px;\n  background-color: #f0f0f5;\n  border-radius: 10px;\n  margin: 0 ${({ vw }) => responsiveWidth(vw, 1)}px;\n`;\n\nconst DropdownButtonText = styled.Text<{ vw: number }>`\n  font-size: ${({ vw }) => responsiveFontSize(vw, 4)}px;\n  color: #318CE7;\n`;\n\nconst AddButton = styled.TouchableOpacity<{ disabled: boolean; vw: number; vh: number }>`\n  background-color: ${({ disabled }) => (disabled ? \"#ccc\" : \"#318CE7\")};\n  padding: ${({ vh }) => responsiveHeight(vh, 2)}px;\n  border-radius: 10px;\n  align-items: center;\n  width: 100%;\n`;\n\nconst AddButtonText = styled.Text<{ disabled: boolean; vw: number }>`\n  color: ${({ disabled }) => (disabled ? \"#888\" : \"#fff\")};\n  font-size: ${({ vw }) => responsiveFontSize(vw, 4)}px;\n`;\n\nconst ModalContainer = styled.View`\n  flex: 1;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nconst CenteredModalContainer = styled(ModalContainer)`\n  justify-content: center;\n`;\n\nconst ModalContent = styled.View<{ vw: number }>`\n  width: 80%;\n  background-color: #fff;\n  border-radius: 10px;\n  padding: 20px;\n  align-items: center;\n`;\n\nconst ModalTitle = styled.Text<{ vw: number; vh: number }>`\n  font-size: ${({ vw }) => responsiveFontSize(vw, 5)}px;\n  font-weight: bold;\n  margin-bottom: ${({ vh }) => responsiveHeight(vh, 2)}px;\n`;\n\nconst CloseButton = styled.TouchableOpacity<{ vw: number; vh: number }>`\n  margin-top: 20px;\n  padding: 10px 20px;\n  background-color: #318CE7;\n  border-radius: 10px;\n`;\n\nconst CloseButtonText = styled.Text<{ vw: number }>`\n  color: #fff;\n  font-size: ${({ vw }) => responsiveFontSize(vw, 4)}px;\n`;\n\nconst ConfirmButton = styled.TouchableOpacity<{ vw: number; vh: number }>`\n  margin-top: 20px;\n  padding: 10px 20px;\n  background-color: #318CE7;\n  border-radius: 10px;\n`;\n\nconst ConfirmButtonText = styled.Text<{ vw: number }>`\n  color: #fff;\n  font-size: ${({ vw }) => responsiveFontSize(vw, 4)}px;\n`;\n\nconst ButtonRow = styled.View<{ vw: number; vh: number }>`\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: ${({ vh }) => responsiveHeight(vh, 2)}px;\n`;\n\nconst OptionsContainer = styled.ScrollView<{ vw: number; vh: number }>`\n  width: 90%;\n  max-height: ${({ vh }) => responsiveHeight(vh, 20)}px;\n  margin-bottom: ${({ vh }) => responsiveHeight(vh, 2)}px;\n`;\n\nconst OptionItem = styled.TouchableOpacity<{ vw: number; vh: number }>`\n  padding: ${({ vh }) => responsiveHeight(vh, 1.5)}px;\n  background-color: #f2f2f2;\n  margin-bottom: ${({ vh }) => responsiveHeight(vh, 1)}px;\n  border-radius: 10px;\n  width: 100%;\n  align-self: center;\n`;\n\nconst OptionText = styled.Text<{ vw: number }>`\n  font-size: ${({ vw }) => responsiveFontSize(vw, 4)}px;\n  color: #000;\n`;\n\nconst StyledInput = styled(RNTextInput)<{ vw: number }>`\n  border-width: 1px;\n  border-color: #ccc;\n  padding: 10px;\n  border-radius: 10px;\n  width: 100%;\n  margin-bottom: 20px;\n  font-size: ${({ vw }) => responsiveFontSize(vw, 4)}px;\n  outline: none;\n  box-shadow: none;\n  &:focus {\n    outline: none;\n    box-shadow: none;\n  }\n`;\n\nexport default CombinedScreen;\n","import React from \"react\";\nimport { StyleSheet, View, Text, Linking, Dimensions, Pressable } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { auth } from \"../firebaseConfig\"; \n\n\ntype RootStackParamList = {\n  WelcomeScreen: undefined;\n  SymptomAssessment: undefined;\n  MedSchedule: undefined;\n  CounselorSession: undefined;\n  FitnessNutrition: undefined;\n  Settings: undefined;\n  LoginScreen: undefined;\n  NewsPage: undefined;\n  NotificationScreen: undefined;\n};\n\n\ntype MenuProps = {\n  navigation: StackNavigationProp<RootStackParamList>;\n};\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst Menu: React.FC<MenuProps> = ({ navigation }) => {\n  const handleLogOut = async () => {\n    try {\n      await auth.signOut(); \n      navigation.navigate(\"LoginScreen\"); \n    } catch (error) {\n      console.error(\"Error logging out:\", error);\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <LinearGradient\n        style={styles.header}\n        locations={[0, 1]}\n        colors={[\"#318CE7\", \"#1F75FE\"]}\n      >\n        <View style={styles.profileContainer}>\n          <Ionicons\n            name=\"person-circle-outline\"\n            size={responsiveFontSize(18)}\n            color=\"#dadada\"\n            style={styles.profileIcon}\n          />\n          <Text style={styles.username}>Username</Text>\n        </View>\n        <Ionicons\n          name=\"moon\"\n          size={responsiveFontSize(8)}\n          color=\"#fff\"\n          style={styles.nightModeIcon}\n        />\n      </LinearGradient>\n\n      <View style={styles.menuItems}>\n        <Pressable\n          style={({ pressed }) => [\n            styles.menuItem,\n            { backgroundColor: pressed ? \"#f0f0f0\" : \"transparent\" },\n          ]}\n          onPress={() => navigation.navigate(\"SymptomAssessment\")}\n        >\n          <Ionicons\n            name=\"pulse-outline\"\n            size={responsiveFontSize(7)}\n            color=\"#1F75FE\"\n            style={styles.menuIcon}\n          />\n          <Text style={styles.menuItemText}>Symptom Assessment</Text>\n        </Pressable>\n\n        <Pressable\n          style={({ pressed }) => [\n            styles.menuItem,\n            { backgroundColor: pressed ? \"#f0f0f0\" : \"transparent\" },\n          ]}\n          onPress={() => navigation.navigate(\"MedSchedule\")}\n        >\n          <Ionicons\n            name=\"calendar-outline\"\n            size={responsiveFontSize(7)}\n            color=\"#1F75FE\"\n            style={styles.menuIcon}\n          />\n          <Text style={styles.menuItemText}>Medication Schedule</Text>\n        </Pressable>\n\n        <Pressable\n          style={({ pressed }) => [\n            styles.menuItem,\n            { backgroundColor: pressed ? \"#f0f0f0\" : \"transparent\" },\n          ]}\n          onPress={() =>\n            Linking.openURL(\"https://webapps.knust.edu.gh/uhs/appointments/\")\n          }\n        >\n          <Ionicons\n            name=\"medkit-outline\"\n            size={responsiveFontSize(7)}\n            color=\"#1F75FE\"\n            style={styles.menuIcon}\n          />\n          <Text style={styles.menuItemText}>Clinic Appointment</Text>\n        </Pressable>\n        <Pressable\n          style={({ pressed }) => [\n            styles.menuItem,\n            { backgroundColor: pressed ? \"#f0f0f0\" : \"transparent\" },\n          ]}\n          onPress={() => navigation.navigate(\"NewsPage\")}\n        >\n          <Ionicons\n            name=\"newspaper-outline\"\n            size={responsiveFontSize(7)}\n            color=\"#1F75FE\"\n            style={styles.menuIcon}\n          />\n          <Text style={styles.menuItemText}>News</Text>\n        </Pressable>\n\n        <Pressable\n          style={({ pressed }) => [\n            styles.menuItem,\n            { backgroundColor: pressed ? \"#f0f0f0\" : \"transparent\" },\n          ]}\n          onPress={() => navigation.navigate(\"NotificationScreen\")}\n        >\n          <Ionicons\n            name=\"notifications-outline\"\n            size={responsiveFontSize(7)}\n            color=\"#1F75FE\"\n            style={styles.menuIcon}\n          />\n          <Text style={styles.menuItemText}>Notifications</Text>\n        </Pressable>\n        <Pressable\n          style={({ pressed }) => [\n            styles.menuItem,\n            { backgroundColor: pressed ? \"#f0f0f0\" : \"transparent\" },\n          ]}\n          onPress={() => navigation.navigate(\"Settings\")}\n        >\n          <Ionicons\n            name=\"settings-outline\"\n            size={responsiveFontSize(7)}\n            color=\"#1F75FE\"\n            style={styles.menuIcon}\n          />\n          <Text style={styles.menuItemText}>Settings</Text>\n        </Pressable>\n      </View>\n\n      <View style={styles.bottomItems}>\n        <View style={styles.divider} />\n        <Pressable style={styles.logoutButton} onPress={handleLogOut}>\n          <Ionicons\n            name=\"log-out-outline\"\n            size={responsiveFontSize(7)}\n            color=\"#1F75FE\"\n            style={styles.menuIcon}\n          />\n          <Text style={styles.menuItemText}>Log Out</Text>\n        </Pressable>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: responsiveWidth(5),\n    backgroundColor: \"#1F75FE\",\n    height: responsiveHeight(25),\n  },\n  profileContainer: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    alignSelf: \"flex-start\",\n    justifyContent: 'center',\n    \n  },\n  profileIcon: {\n    marginRight: responsiveWidth(2.5),\n    fontSize: responsiveFontSize(30),\n    color: 'white'\n  },\n  username: {\n    fontFamily: \"Poppins-SemiBold\",\n    fontSize: responsiveFontSize(4.5),\n    color: \"#fff\",\n  },\n  nightModeIcon: {\n    alignSelf: \"flex-start\",\n    fontSize: responsiveFontSize(6),\n    \n  },\n  menuItems: {\n    marginTop: responsiveHeight(2.5),\n    width: '100%',\n  \n  },\n  menuItem: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingVertical: responsiveHeight(1.25),\n    paddingLeft: responsiveHeight(3.25),\n  },\n  menuIcon: {\n    marginRight: responsiveWidth(3.75),\n  },\n  menuItemText: {\n    fontFamily: \"Poppins-Regular\",\n    fontSize: responsiveFontSize(4.5),\n    color: \"#333\",\n  },\n  divider: {\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ccc\",\n    marginVertical: responsiveHeight(1.25),\n  },\n  bottomItems: {\n    marginTop: \"auto\",\n    paddingHorizontal: responsiveWidth(5),\n  },\n  logoutButton: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingVertical: responsiveHeight(1.25),\n  },\n});\n\nexport default Menu;\n","import * as React from \"react\";\nimport { View, Text, Pressable, StyleSheet, Dimensions, Platform } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst WelcomeScreen = ({ navigation }: { navigation: any }) => {\n  const [screenWidth, setScreenWidth] = React.useState(Dimensions.get(\"window\").width);\n  const [screenHeight, setScreenHeight] = React.useState(Dimensions.get(\"window\").height);\n\n  React.useEffect(() => {\n    const handleResize = ({ window }) => {\n      setScreenWidth(window.width);\n      setScreenHeight(window.height);\n    };\n\n    const subscription = Dimensions.addEventListener(\"change\", handleResize);\n\n    return () => {\n      subscription?.remove();\n    };\n  }, []);\n\n  const vw = screenWidth / 100;\n  const vh = screenHeight / 100;\n\n  const dynamicStyles = getDynamicStyles(vw, vh, screenWidth);\n\n  return (\n    <View style={dynamicStyles.container}>\n      <Text style={dynamicStyles.welcomeText}>Welcome to CampCare!</Text>\n      <Pressable\n        style={dynamicStyles.buttonContainer}\n        onPress={() => navigation.navigate(\"LoginScreen\")}\n      >\n        <LinearGradient colors={[\"#318CE7\", \"#1F75FE\"]} style={dynamicStyles.button}>\n          <Text style={dynamicStyles.buttonText}>Login</Text>\n        </LinearGradient>\n      </Pressable>\n      <Pressable\n        style={dynamicStyles.buttonContainer}\n        onPress={() => navigation.navigate(\"SignUpScreen\")}\n      >\n        <LinearGradient colors={[\"#318CE7\", \"#1F75FE\"]} style={dynamicStyles.button}>\n          <Text style={dynamicStyles.buttonText}>Sign Up</Text>\n        </LinearGradient>\n      </Pressable>\n    </View>\n  );\n};\n\nconst getDynamicStyles = (vw: number, vh: number, screenWidth: number) => {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#fff\",\n      padding: Platform.OS === 'web' ? 5 * vw : 20, // Use percentage padding for web\n    },\n    welcomeText: {\n      fontFamily: \"Poppins-SemiBold\",\n      fontSize: Platform.OS === 'web' ? 5 * vw : screenWidth * 0.063, // Use vw for web\n      marginBottom: Platform.OS === 'web' ? 5 * vh : screenWidth * 0.05, // Use vh for web\n      textAlign: \"center\",\n    },\n    buttonContainer: {\n      marginVertical: Platform.OS === 'web' ? 1 * vh : screenWidth * 0.01, // Use vh for web\n      width: Platform.OS === 'web' ? 80 * vw : screenWidth * 0.8, // Use vw for web\n    },\n    button: {\n      paddingVertical: Platform.OS === 'web' ? 1.5 * vh : screenWidth * 0.012, // Use vh for web\n      paddingHorizontal: Platform.OS === 'web' ? 10 * vw : screenWidth * 0.1, // Use vw for web\n      borderRadius: 10,\n      alignItems: \"center\",\n    },\n    buttonText: {\n      fontFamily: \"Poppins-SemiBold\",\n      color: \"#fff\",\n      fontSize: Platform.OS === 'web' ? 4 * vw : screenWidth * 0.05, // Use vw for web\n    },\n  });\n};\n\nexport default WelcomeScreen;\n","import React from 'react';\nimport { View, Pressable, Text, StyleSheet } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\n\nconst CustomCheckBox = ({ value, onValueChange, label }) => {\n  return (\n    <Pressable style={styles.container} onPress={() => onValueChange(!value)}>\n      <View style={[styles.checkbox, value && styles.checkedCheckbox]}>\n        {value && <FontAwesome name=\"check\" size={16} color=\"#fff\" />}\n      </View>\n      <Text style={styles.label}>{label}</Text>\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 10,\n  },\n  checkedCheckbox: {\n    backgroundColor: '#318CE7',\n    borderColor: '#318CE7',\n  },\n  label: {\n    fontSize: 16,\n    color: '#717171',\n  },\n});\n\nexport default CustomCheckBox;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  Pressable,\n  View,\n  ScrollView,\n  Dimensions,\n  Image,\n  Platform,\n} from \"react-native\";\nimport { TextInput as RNPTextInput } from \"react-native-paper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { useNavigation, ParamListBase } from \"@react-navigation/native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { db, auth } from \"../firebaseConfig\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport CustomCheckBox from \"../components/CustomCheckBox\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst isValidEmail = (email: string) => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\nconst LoginScreen = () => {\n  const [emailOrUsername, setEmailOrUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState<string | null>(null);\n  const [rememberMe, setRememberMe] = useState(false);\n  const navigation = useNavigation<StackNavigationProp<ParamListBase>>();\n\n  useEffect(() => {\n    const checkStoredCredentials = async () => {\n      try {\n        let storedEmail = \"\";\n        let storedPassword = \"\";\n        if (Platform.OS === \"web\") {\n          storedEmail = localStorage.getItem(\"emailOrUsername\") || \"\";\n          storedPassword = localStorage.getItem(\"password\") || \"\";\n        } else {\n          storedEmail = (await AsyncStorage.getItem(\"emailOrUsername\")) || \"\";\n          storedPassword = (await AsyncStorage.getItem(\"password\")) || \"\";\n        }\n        if (storedEmail && storedPassword) {\n          setEmailOrUsername(storedEmail);\n          setPassword(storedPassword);\n          onLoginPress(storedEmail, storedPassword);\n        }\n      } catch (error) {\n        console.error(\"Error checking stored credentials:\", error);\n      }\n    };\n    checkStoredCredentials();\n  }, []);\n\n  const onLoginPress = async (emailInput?: string, passwordInput?: string) => {\n    try {\n      let email = emailInput || emailOrUsername;\n      let pass = passwordInput || password;\n\n      if (!email || !pass) {\n        throw new Error(\"Email and password are required.\");\n      }\n\n      if (!isValidEmail(emailOrUsername)) {\n        const userQuery = query(\n          collection(db, \"users\"),\n          where(\"username\", \"==\", emailOrUsername)\n        );\n        const userSnapshot = await getDocs(userQuery);\n        if (!userSnapshot.empty) {\n          const userData = userSnapshot.docs[0].data();\n          email = userData.email;\n        } else {\n          throw new Error(\"User not found\");\n        }\n      }\n\n      await signInWithEmailAndPassword(auth, email, pass);\n      if (rememberMe) {\n        if (Platform.OS === \"web\") {\n          localStorage.setItem(\"emailOrUsername\", emailOrUsername);\n          localStorage.setItem(\"password\", password);\n        } else {\n          await AsyncStorage.setItem(\"emailOrUsername\", emailOrUsername);\n          await AsyncStorage.setItem(\"password\", password);\n        }\n      } else {\n        if (Platform.OS === \"web\") {\n          localStorage.removeItem(\"emailOrUsername\");\n          localStorage.removeItem(\"password\");\n        } else {\n          await AsyncStorage.removeItem(\"emailOrUsername\");\n          await AsyncStorage.removeItem(\"password\");\n        }\n      }\n      setEmailOrUsername(\"\");\n      setPassword(\"\");\n      navigation.navigate(\"MainTabs\", {\n        screen: \"Home\",\n        params: { screen: \"Homepage1\" },\n      });\n    } catch (error: any) {\n      console.error(\"Login error:\", error);\n      setError(getErrorMessage(error));\n    }\n  };\n\n  const getErrorMessage = (error: any) => {\n    switch (error.code) {\n      case \"auth/invalid-email\":\n        return \"The email address is not valid.\";\n      case \"auth/user-disabled\":\n        return \"Your account has been disabled. Please contact support.\";\n      case \"auth/user-not-found\":\n        return \"Invalid email or password.\";\n      case \"auth/wrong-password\":\n        return \"Invalid email or password.\";\n      case \"auth/invalid-credential\":\n        return \"Incorrect email or password.\";\n      case \"auth/network-request-failed\":\n        return \"Network error.\";\n      default:\n        return (\n          error.message || \"An unexpected error occurred. Please try again.\"\n        );\n    }\n  };\n\n  const onGoogleLoginPress = () => {\n    // Handle Google login here\n  };\n\n  const onFacebookLoginPress = () => {\n    // Handle Facebook login here\n  };\n\n  const onXLoginPress = () => {\n    // Handle X (Twitter) login here\n  };\n\n  const onSignUpPress = () => {\n    navigation.navigate(\"SignUpScreen\");\n  };\n\n  const onForgotPasswordPress = () => {\n    navigation.navigate(\"ForgetPassword\");\n  };\n\n  return (\n    <SafeAreaView style={styles.safeArea}>\n      <ScrollView contentContainerStyle={styles.scrollView}>\n        <View style={styles.container}>\n          <Image\n            style={styles.logo}\n            resizeMode=\"contain\"\n            // source={require(\"../assets/campuscare-logo-1.png\")}\n          />\n          <View style={styles.formContainer}>\n            {error && <Text style={styles.errorText}>{error}</Text>}\n            <RNPTextInput\n              style={styles.input}\n              label=\"Email\"\n              placeholder=\"Email\"\n              mode=\"outlined\"\n              value={emailOrUsername}\n              onChangeText={setEmailOrUsername}\n              placeholderTextColor=\"#717171\"\n              outlineColor=\"#1F75FE\"\n              activeOutlineColor=\"#085ea9\"\n              keyboardType=\"default\"\n              theme={{\n                fonts: {\n                  regular: { fontFamily: \"Poppins-Regular\", fontWeight: \"300\" },\n                },\n                colors: { text: \"#818181\" },\n              }}\n            />\n            <RNPTextInput\n              style={styles.input}\n              label=\"Password\"\n              placeholder=\"Password\"\n              mode=\"outlined\"\n              value={password}\n              onChangeText={setPassword}\n              secureTextEntry\n              placeholderTextColor=\"#717171\"\n              outlineColor=\"#1F75FE\"\n              activeOutlineColor=\"#133e85\"\n              theme={{\n                fonts: {\n                  regular: { fontFamily: \"Poppins-Regular\", fontWeight: \"300\" },\n                },\n                colors: { text: \"#878787\" },\n              }}\n            />\n            <View style={styles.rememberMeContainer}>\n              <CustomCheckBox\n                value={rememberMe}\n                onValueChange={setRememberMe}\n                label=\"Remember Me\"\n              />\n            </View>\n            <Pressable onPress={onForgotPasswordPress}>\n              <Text style={styles.forgotPassword}>Forgot Password?</Text>\n            </Pressable>\n            <LinearGradient\n              colors={[\"#318CE7\", \"#1F75FE\"]}\n              style={styles.loginButton}\n            >\n              <Pressable\n                style={styles.pressable}\n                onPress={() => onLoginPress()}\n              >\n                <Text style={styles.loginText}>Login</Text>\n              </Pressable>\n            </LinearGradient>\n          </View>\n          <Text style={styles.orLoginWith}>Or Login with</Text>\n          <View style={styles.socialMediaLogin}>\n            <Pressable onPress={onGoogleLoginPress}>\n              <FontAwesome\n                name=\"google\"\n                size={responsiveFontSize(7)}\n                color=\"#DB4437\"\n              />\n            </Pressable>\n            <Pressable onPress={onFacebookLoginPress}>\n              <FontAwesome\n                name=\"facebook\"\n                size={responsiveFontSize(7)}\n                color=\"#3b5998\"\n              />\n            </Pressable>\n            <Pressable onPress={onXLoginPress}>\n              <FontAwesome\n                name=\"twitter\"\n                size={responsiveFontSize(7)}\n                color=\"#1DA1F2\"\n              />\n            </Pressable>\n          </View>\n          <View style={styles.dontHaveAnContainer}>\n            <Text style={styles.dontHaveAn}>Don't have an account yet?</Text>\n            <Pressable style={styles.signUp} onPress={onSignUpPress}>\n              <Text style={styles.signUpBtn}>Sign Up</Text>\n            </Pressable>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  scrollView: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    paddingTop: responsiveHeight(5),\n    paddingHorizontal: responsiveWidth(5),\n  },\n  logo: {\n    width: responsiveWidth(70),\n    height: responsiveHeight(17),\n    marginBottom: responsiveHeight(2),\n  },\n  formContainer: {\n    width: responsiveWidth(80),\n  },\n  input: {\n    marginBottom: responsiveHeight(2),\n  },\n  rememberMeContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: responsiveHeight(2),\n  },\n  rememberMeText: {\n    marginLeft: responsiveWidth(2),\n    fontSize: responsiveFontSize(3.5),\n    fontFamily: \"Poppins-Regular\",\n    color: \"#717171\",\n  },\n  forgotPassword: {\n    color: \"#1F75FE\",\n    marginBottom: responsiveHeight(2),\n    fontSize: responsiveFontSize(3.5),\n    fontFamily: \"Poppins-Regular\",\n    textAlign: \"right\",\n  },\n  loginButton: {\n    width: \"100%\",\n    borderRadius: 10,\n    overflow: \"hidden\",\n    marginBottom: responsiveHeight(2),\n  },\n  pressable: {\n    padding: responsiveWidth(3),\n    alignItems: \"center\",\n  },\n  loginText: {\n    color: \"#fff\",\n    fontSize: responsiveFontSize(5),\n    fontFamily: \"Poppins-Bold\",\n  },\n  orLoginWith: {\n    marginVertical: responsiveHeight(2),\n    fontSize: responsiveFontSize(4.0),\n    fontFamily: \"Poppins-Regular\",\n  },\n  socialMediaLogin: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: responsiveWidth(60),\n    marginBottom: responsiveHeight(2),\n  },\n  socialIcon: {\n    width: responsiveWidth(10),\n    height: responsiveWidth(10),\n  },\n  dontHaveAnContainer: {\n    marginTop: responsiveHeight(12),\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  dontHaveAn: {\n    fontSize: responsiveFontSize(4.0),\n    fontFamily: \"Poppins-Regular\",\n  },\n  signUp: {\n    marginLeft: responsiveWidth(1),\n  },\n  signUpBtn: {\n    color: \"#1F75FE\",\n    fontWeight: \"bold\",\n    fontSize: responsiveFontSize(4.0),\n    fontFamily: \"Poppins-SemiBold\",\n  },\n  errorText: {\n    color: \"red\",\n    marginBottom: responsiveHeight(2),\n    fontSize: responsiveFontSize(4),\n    fontFamily: \"Poppins-Regular\",\n    textAlign: \"center\",\n  },\n});\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, Pressable, View, ScrollView, Dimensions, Image, Alert } from \"react-native\";\nimport { TextInput as RNPTextInput } from \"react-native-paper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { useNavigation, ParamListBase } from \"@react-navigation/native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { getAuth, createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\nimport { setDoc, doc, serverTimestamp, getDocs, collection } from \"firebase/firestore\";\nimport { auth, db } from \"../firebaseConfig\"; // Ensure you import auth from your Firebase config correctly\n\nconst SignUpScreen: React.FC = () => {\n  const [firstname, setFirstname] = useState<string>(\"\");\n  const [lastname, setLastname] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\n  const [error, setError] = useState<string | null>(null);\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get(\"window\").width);\n  const [screenHeight, setScreenHeight] = useState(Dimensions.get(\"window\").height);\n  const navigation = useNavigation<StackNavigationProp<ParamListBase>>();\n\n  useEffect(() => {\n    const handleResize = ({ window }) => {\n      setScreenWidth(window.width);\n      setScreenHeight(window.height);\n    };\n\n    const dimensionListener = Dimensions.addEventListener(\"change\", handleResize);\n\n    return () => {\n      dimensionListener?.remove();\n    };\n  }, []);\n\n  const vw = screenWidth / 100;\n  const vh = screenHeight / 100;\n\n  const dynamicStyles = getDynamicStyles(vw, vh);\n\n  const onSignUpPress = async () => {\n    setError(null);\n    try {\n      if (password !== confirmPassword) {\n        setError(\"Passwords do not match\");\n        return;\n      }\n\n      // Create user with email and password\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Send verification email\n      await sendEmailVerification(user);\n\n      // Store user information in Firestore\n      await setDoc(doc(db, \"users\", user.uid), {\n        firstname: firstname,\n        lastname: lastname,\n        email: email,\n        createdAt: serverTimestamp(),\n        interests: [], // Initialize with an empty array\n      });\n\n      // Show verification note\n      Alert.alert(\n        \"Verification Required\",\n        \"A verification email has been sent to your email address. Please verify your email before proceeding.\",\n        [{ text: \"OK\", onPress: () => console.log(\"Verification email sent\") }]\n      );\n\n      // Clear input fields\n      setFirstname(\"\");\n      setLastname(\"\");\n      setEmail(\"\");\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n\n      // Navigate to the interests selection screen\n      navigation.navigate(\"HealthNewsInterest\", { userId: user.uid });\n\n    } catch (error: any) {\n      handleError(error);\n    }\n  };\n\n  const handleError = (error: any) => {\n    let message;\n    switch (error.code) {\n      case \"auth/email-already-in-use\":\n        message = \"The email address is already in use by another account.\";\n        break;\n      case \"auth/invalid-email\":\n        message = \"The email address is not valid.\";\n        break;\n      case \"auth/weak-password\":\n        message = \"The password is too weak. It should be at least 6 characters long.\";\n        break;\n      case \"auth/operation-not-allowed\":\n        message = \"Email/password accounts are not enabled. Please contact support.\";\n        break;\n      case \"auth/invalid-argument\":\n        message = \"An invalid argument was provided. Please check your input.\";\n        break;\n      case \"auth/invalid-user-import\":\n        message = \"The user record to import is invalid.\";\n        break;\n      default:\n        message = \"An unexpected error occurred. Please try again.\";\n    }\n    setError(message);\n  };\n\n  return (\n    <SafeAreaView style={dynamicStyles.safeArea}>\n      <ScrollView contentContainerStyle={dynamicStyles.scrollView}>\n        <View style={dynamicStyles.container}>\n          <Image\n            style={dynamicStyles.logo}\n            resizeMode=\"contain\"\n            // source={require(\"../assets/campuscare-logo-1.png\")}\n          />\n          <View style={dynamicStyles.formContainer}>\n            {error && <Text style={dynamicStyles.errorText}>{error}</Text>}\n            <RNPTextInput\n              style={dynamicStyles.input}\n              label=\"Firstname\"\n              placeholder=\"Firstname\"\n              mode=\"outlined\"\n              value={firstname}\n              onChangeText={setFirstname}\n              placeholderTextColor=\"#545454\"\n              outlineColor=\"#0b6fab\"\n              activeOutlineColor=\"#175689\"\n              theme={{ colors: { text: \"#626262\" } }}\n            />\n            <RNPTextInput\n              style={dynamicStyles.input}\n              label=\"Lastname\"\n              placeholder=\"Lastname\"\n              mode=\"outlined\"\n              value={lastname}\n              onChangeText={setLastname}\n              placeholderTextColor=\"#545454\"\n              outlineColor=\"#0b6fab\"\n              activeOutlineColor=\"#175689\"\n              theme={{ colors: { text: \"#626262\" } }}\n            />\n            <RNPTextInput\n              style={dynamicStyles.input}\n              label=\"Email\"\n              placeholder=\"Email\"\n              mode=\"outlined\"\n              value={email}\n              onChangeText={setEmail}\n              placeholderTextColor=\"#545454\"\n              outlineColor=\"#0b6fab\"\n              activeOutlineColor=\"#175689\"\n              keyboardType=\"email-address\"\n              theme={{ colors: { text: \"#626262\" } }}\n            />\n            <RNPTextInput\n              style={dynamicStyles.input}\n              label=\"Password\"\n              placeholder=\"Password\"\n              mode=\"outlined\"\n              value={password}\n              onChangeText={setPassword}\n              secureTextEntry\n              placeholderTextColor=\"#505050\"\n              outlineColor=\"#0c6b9b\"\n              activeOutlineColor=\"#083699\"\n              theme={{ colors: { text: \"#4b4b4b\" } }}\n            />\n            <RNPTextInput\n              style={dynamicStyles.input}\n              label=\"Confirm Password\"\n              placeholder=\"Confirm Password\"\n              mode=\"outlined\"\n              value={confirmPassword}\n              onChangeText={setConfirmPassword}\n              secureTextEntry\n              placeholderTextColor=\"#4b4b4b\"\n              outlineColor=\"#084e83\"\n              activeOutlineColor=\"#095290\"\n              theme={{ colors: { text: \"#474747\" } }}\n            />\n            <LinearGradient\n              colors={[\"#318CE7\", \"#1F75FE\"]}\n              style={dynamicStyles.signupButton}\n            >\n              <Pressable style={dynamicStyles.pressable} onPress={onSignUpPress}>\n                <Text style={dynamicStyles.signupText}>Sign Up</Text>\n              </Pressable>\n            </LinearGradient>\n          </View>\n\n          <View style={dynamicStyles.haveAnAccount}>\n            <Text style={dynamicStyles.haveAnAccountText}>Already have an account? </Text>\n            <Pressable onPress={() => navigation.navigate(\"LoginScreen\")}>\n              <Text style={dynamicStyles.loginBtn}>Login</Text>\n            </Pressable>\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst responsiveWidth = (vw, percent) => vw * percent;\nconst responsiveHeight = (vh, percent) => vh * percent;\nconst responsiveFontSize = (vw, percent) => vw * percent;\n\nconst getDynamicStyles = (vw, vh) => {\n  return StyleSheet.create({\n    safeArea: {\n      flex: 1,\n      backgroundColor: \"#fff\",\n    },\n    scrollView: {\n      flexGrow: 1,\n      justifyContent: \"center\",\n    },\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n      paddingTop: responsiveHeight(vh, 5),\n      paddingHorizontal: responsiveWidth(vw, 5),\n    },\n    logo: {\n      width: responsiveWidth(vw, 70),\n      height: responsiveHeight(vh, 17),\n      marginBottom: responsiveHeight(vh, 2),\n    },\n    formContainer: {\n      width: responsiveWidth(vw, 80),\n      marginBottom: responsiveHeight(vh, 2),\n    },\n    input: {\n      marginBottom: responsiveHeight(vh, 2),\n    },\n    signupButton: {\n      width: \"100%\",\n      borderRadius: 10,\n      overflow: \"hidden\",\n    },\n    pressable: {\n      padding: responsiveWidth(vw, 3),\n      alignItems: \"center\",\n    },\n    signupText: {\n      color: \"#fff\",\n      fontSize: responsiveFontSize(vw, 5),\n    },\n    haveAnAccount: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      marginTop: responsiveHeight(vh, 2),\n      marginBottom: responsiveHeight(vh, 5),\n    },\n    haveAnAccountText: {\n      fontSize: responsiveFontSize(vw, 4.0),\n    },\n    loginBtn: {\n      color: \"#1F75FE\",\n      fontSize: responsiveFontSize(vw, 4.0),\n      fontWeight: \"600\",\n      marginLeft: responsiveWidth(vw, 1),\n    },\n    errorText: {\n      color: \"red\",\n      marginBottom: responsiveHeight(vh, 2),\n      fontSize: responsiveFontSize(vw, 3.5),\n    },\n  });\n};\n\nexport default SignUpScreen;\n","import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  Pressable,\n  View,\n  ScrollView,\n  Dimensions,\n  Image,\n} from \"react-native\";\nimport { TextInput as RNPTextInput } from \"react-native-paper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { useNavigation, ParamListBase } from \"@react-navigation/native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { sendPasswordResetEmail } from \"firebase/auth\";\nimport { auth } from \"../firebaseConfig\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst ForgotPasswordScreen = () => {\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState<string | null>(null);\n  const [resetSent, setResetSent] = useState(false);\n\n  const handleResetPassword = async () => {\n    setError(null);\n    try {\n      // Validate email\n      if (!isValidEmail(email)) {\n        throw new Error(\"Please enter a valid email address.\");\n      }\n\n      // Send password reset email\n      await sendPasswordResetEmail(auth, email);\n      setResetSent(true);\n    } catch (error: any) {\n      console.error(\"Error sending password reset email:\", error);\n      setError(\n        \"Failed to send reset email. Please check your email address and try again.\"\n      );\n    }\n  };\n\n  const isValidEmail = (email: string) => {\n    // Basic email validation\n    return /\\S+@\\S+\\.\\S+/.test(email);\n  };\n\n  return (\n    <SafeAreaView style={styles.safeArea}>\n      <ScrollView contentContainerStyle={styles.scrollView}>\n        <View style={styles.container}>\n          <Image\n            style={styles.logo}\n            resizeMode=\"contain\"\n            source={require(\"../assets/campuscare-logo-1.png\")}\n          />\n          <View style={styles.formContainer}>\n            {resetSent ? (\n              <View style={styles.resetSentContainer}>\n                <Text style={styles.resetSentText}>\n                  A password reset link has been sent to your email. Please\n                  follow the instructions in the email to reset your password.\n                </Text>\n              </View>\n            ) : (\n              <>\n                <Text style={styles.title}>Forgot Password</Text>\n                <Text style={styles.instructions}>\n                  Enter your email address below to receive instructions to\n                  reset your password.\n                </Text>\n                {error && <Text style={styles.errorText}>{error}</Text>}\n                <RNPTextInput\n                  style={styles.input}\n                  label=\"Email\"\n                  placeholder=\"Email\"\n                  mode=\"outlined\"\n                  value={email}\n                  onChangeText={setEmail}\n                  placeholderTextColor=\"#717171\"\n                  outlineColor=\"#1F75FE\"\n                  activeOutlineColor=\"#085ea9\"\n                  keyboardType=\"email-address\"\n                  theme={{ colors: { text: \"#818181\" } }}\n                />\n                <LinearGradient\n                  colors={[\"#318CE7\", \"#1F75FE\"]}\n                  style={styles.resetButton}\n                >\n                  <Pressable\n                    style={styles.pressable}\n                    onPress={handleResetPassword}\n                  >\n                    <Text style={styles.resetText}>Reset Password</Text>\n                  </Pressable>\n                </LinearGradient>\n              </>\n            )}\n          </View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  scrollView: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    paddingTop: responsiveHeight(5),\n    paddingHorizontal: responsiveWidth(5),\n  },\n  logo: {\n    width: responsiveWidth(70),\n    height: responsiveHeight(17),\n    marginBottom: responsiveHeight(2),\n  },\n  formContainer: {\n    width: responsiveWidth(80),\n  },\n  title: {\n    fontSize: responsiveFontSize(5),\n    marginBottom: responsiveHeight(2),\n    fontFamily: \"Poppins-Bold\",\n    textAlign: \"center\",\n  },\n  instructions: {\n    fontSize: responsiveFontSize(3),\n    marginBottom: responsiveHeight(3),\n    fontFamily: \"Poppins-Regular\",\n    textAlign: \"center\",\n  },\n  input: {\n    marginBottom: responsiveHeight(2),\n  },\n  resetButton: {\n    width: \"100%\",\n    borderRadius: 10,\n    overflow: \"hidden\",\n    marginBottom: responsiveHeight(2),\n  },\n  pressable: {\n    padding: responsiveWidth(3),\n    alignItems: \"center\",\n  },\n  resetText: {\n    color: \"#fff\",\n    fontSize: responsiveFontSize(4),\n    fontFamily: \"Poppins-Bold\",\n  },\n  resetSentContainer: {\n    alignItems: \"center\",\n  },\n  resetSentText: {\n    fontSize: responsiveFontSize(3),\n    marginBottom: responsiveHeight(2),\n    fontFamily: \"Poppins-Regular\",\n    textAlign: \"center\",\n  },\n  errorText: {\n    color: \"red\",\n    marginBottom: responsiveHeight(2),\n    fontSize: responsiveFontSize(3),\n    fontFamily: \"Poppins-Regular\",\n    textAlign: \"center\",\n  },\n});\n\nexport default ForgotPasswordScreen;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  Dimensions,\n  SafeAreaView,\n  ScrollView,\n  Pressable,\n  StatusBar,\n  Linking,\n  ActivityIndicator,\n  Platform,\n} from \"react-native\";\nimport { useNavigation, NavigationProp, ParamListBase } from \"@react-navigation/native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport axios from \"axios\";\n\n// Conditionally import based on the platform\nconst TouchableOpacity = Platform.OS === 'web' ? require('react-native-web').TouchableOpacity : require('react-native').TouchableOpacity;\n\nconst NewsPage: React.FC = () => {\n  const navigation = useNavigation<NavigationProp<ParamListBase>>();\n  const [news, setNews] = useState<NewsArticle[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get(\"window\").width);\n  const [screenHeight, setScreenHeight] = useState(Dimensions.get(\"window\").height);\n\n  useEffect(() => {\n    const handleResize = ({ window }) => {\n      setScreenWidth(window.width);\n      setScreenHeight(window.height);\n    };\n\n    const dimensionListener = Dimensions.addEventListener(\"change\", handleResize);\n\n    return () => {\n      dimensionListener?.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        const response = await axios.get(\"https://newsapi.org/v2/top-headlines\", {\n          params: {\n            category: \"health\",\n            country: \"us\",\n            apiKey: \"d5438597f0d84a6aaace851b3aa26759\",\n          },\n        });\n\n        if (response.status === 200) {\n          setNews(response.data.articles);\n        } else {\n          console.error(`Error fetching news: ${response.status} ${response.statusText}`);\n        }\n      } catch (error) {\n        console.error(\"Error fetching health news:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchNews();\n\n    const interval = setInterval(fetchNews, 300000); // Refresh news every 5 minutes\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleBackPress = () => {\n    navigation.goBack();\n  };\n\n  const handleReadMore = (link: string) => {\n    Linking.openURL(link);\n  };\n\n  if (loading) {\n    return (\n      <SafeAreaView style={getDynamicStyles(screenWidth, screenHeight).container}>\n        <ActivityIndicator size=\"large\" color=\"#318CE7\" />\n      </SafeAreaView>\n    );\n  }\n\n  const vw = screenWidth / 100;\n  const vh = screenHeight / 100;\n\n  const dynamicStyles = getDynamicStyles(vw, vh, screenWidth);\n\n  return (\n    <SafeAreaView style={dynamicStyles.container}>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#fff\" />\n      <View style={dynamicStyles.header}>\n        <TouchableOpacity style={dynamicStyles.backButton} onPress={handleBackPress}>\n          <Ionicons name=\"arrow-back\" size={responsiveFontSize(vw, 6)} color=\"#000\" />\n        </TouchableOpacity>\n        <Text style={dynamicStyles.headerText}>Health News</Text>\n      </View>\n      <ScrollView contentContainerStyle={dynamicStyles.scrollContainer}>\n        {news.map((article, index) => (\n          <View key={index} style={dynamicStyles.newsItem}>\n            {article.urlToImage && (\n              <Image source={{ uri: article.urlToImage }} style={dynamicStyles.newsImage} />\n            )}\n            <View style={dynamicStyles.newsContent}>\n              <Text style={dynamicStyles.newsTitle}>{article.title}</Text>\n              <Text style={dynamicStyles.newsDescription}>\n                {article.description?.length > 50\n                  ? `${article.description.substring(0, 50)}...`\n                  : article.description}\n              </Text>\n              <Pressable onPress={() => handleReadMore(article.url)}>\n                <Text style={dynamicStyles.readMore}>Read More</Text>\n              </Pressable>\n            </View>\n          </View>\n        ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\ntype NewsArticle = {\n  source: { id: string | null; name: string };\n  author: string | null;\n  title: string;\n  description: string;\n  url: string;\n  urlToImage: string | null;\n  publishedAt: string;\n  content: string;\n};\n\nconst responsiveWidth = (vw: number, percent: number) => vw * percent;\nconst responsiveHeight = (vh: number, percent: number) => vh * percent;\nconst responsiveFontSize = (vw: number, percent: number) => vw * percent;\n\nconst getDynamicStyles = (vw: number, vh: number, screenWidth: number) => {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: \"#fff\",\n    },\n    header: {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      paddingHorizontal: responsiveWidth(vw, 5),\n      paddingVertical: responsiveHeight(vh, 2),\n    },\n    backButton: {\n      marginRight: responsiveWidth(vw, 2),\n    },\n    headerText: {\n      fontSize: responsiveFontSize(vw, 5),\n      fontWeight: \"bold\",\n    },\n    scrollContainer: {\n      paddingHorizontal: responsiveWidth(vw, 5),\n      paddingVertical: responsiveHeight(vh, 3),\n    },\n    newsItem: {\n      flexDirection: \"column\",\n      marginBottom: responsiveHeight(vh, 3),\n      backgroundColor: \"#f9f9f9\",\n      borderRadius: responsiveWidth(vw, 2),\n      overflow: \"hidden\",\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2,\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3.84,\n      elevation: 5,\n    },\n    newsImage: {\n      width: \"100%\",\n      height: responsiveHeight(vh, 25),\n      borderTopLeftRadius: responsiveWidth(vw, 2),\n      borderTopRightRadius: responsiveWidth(vw, 2),\n    },\n    newsContent: {\n      flex: 1,\n      padding: responsiveWidth(vw, 3),\n    },\n    newsTitle: {\n      fontSize: responsiveFontSize(vw, 4),\n      fontWeight: \"bold\",\n      marginBottom: responsiveHeight(vh, 1),\n    },\n    newsDescription: {\n      fontSize: responsiveFontSize(vw, 3.5),\n      color: \"#333\",\n      marginBottom: responsiveHeight(vh, 1),\n    },\n    readMore: {\n      fontSize: responsiveFontSize(vw, 3.5),\n      color: \"#318CE7\",\n      fontWeight: \"bold\",\n    },\n  });\n};\n\nexport default NewsPage;\n","import * as React from \"react\";\nimport { Text, StyleSheet, View, ScrollView, Pressable, Dimensions, Switch } from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport StatusBar from \"../components/StatusBar\"; // Adjust path as per your project structure\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst NotificationSettingsScreen = ({ navigation }) => {\n  const [emailNotifications, setEmailNotifications] = React.useState(false);\n  const [pushNotifications, setPushNotifications] = React.useState(false);\n  const [smsNotifications, setSmsNotifications] = React.useState(false);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar screenName=\"Notification Settings\" />\n      \n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <View style={styles.settingItem}>\n          <Text style={styles.label}>Email Notifications</Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#1F75FE\" }}\n            thumbColor={emailNotifications ? \"#fff\" : \"#f4f3f4\"}\n            onValueChange={() => setEmailNotifications(previousState => !previousState)}\n            value={emailNotifications}\n          />\n        </View>\n        <View style={styles.settingItem}>\n          <Text style={styles.label}>Push Notifications</Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#1F75FE\" }}\n            thumbColor={pushNotifications ? \"#fff\" : \"#f4f3f4\"}\n            onValueChange={() => setPushNotifications(previousState => !previousState)}\n            value={pushNotifications}\n          />\n        </View>\n        <View style={styles.settingItem}>\n          <Text style={styles.label}>SMS Notifications</Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#1F75FE\" }}\n            thumbColor={smsNotifications ? \"#fff\" : \"#f4f3f4\"}\n            onValueChange={() => setSmsNotifications(previousState => !previousState)}\n            value={smsNotifications}\n          />\n        </View>\n        {/* Add more notification settings as needed */}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f0f4f8\",\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: responsiveWidth(5),\n    backgroundColor: \"#fff\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ddd\",\n  },\n  backButton: {\n    marginRight: responsiveWidth(3),\n  },\n  headerTitle: {\n    fontSize: responsiveFontSize(5),\n    fontWeight: \"bold\",\n    color: \"#1F75FE\",\n  },\n  scrollContainer: {\n    padding: responsiveWidth(5),\n  },\n  settingItem: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingVertical: responsiveHeight(2),\n    borderBottomWidth: 1,\n    borderBottomColor: \"rgba(204, 204, 204, 0.3)\",\n  },\n  label: {\n    fontSize: responsiveFontSize(4.5),\n    color: \"#000\",\n  },\n});\n\nexport default NotificationSettingsScreen;\n","import AsyncStorage from '@react-native-async-storage/async-storage';\n\n// Mock data\nconst mockData = [\n  {\n    id: '1',\n    title: 'Understanding Anxiety',\n    description: 'Learn about the symptoms, causes, and treatments for anxiety disorders.',\n    imageUrl: 'https://example.com/anxiety.jpg',\n    link: 'https://www.example.com/anxiety',\n  },\n  {\n    id: '2',\n    title: 'Dealing with Depression',\n    description: 'A comprehensive guide to understanding and managing depression.',\n    imageUrl: 'https://example.com/depression.jpg',\n    link: 'https://www.example.com/depression',\n  },\n  {\n    id: '3',\n    title: 'Meditation for Mental Health',\n    description: 'Discover the benefits of meditation and how it can improve your mental health.',\n    imageUrl: 'https://example.com/meditation.jpg',\n    link: 'https://www.example.com/meditation',\n  },\n  {\n    id: '4',\n    title: 'Mindfulness Exercises',\n    description: 'Practical exercises to help you practice mindfulness in your daily life.',\n    imageUrl: 'https://example.com/mindfulness.jpg',\n    link: 'https://www.example.com/mindfulness',\n  },\n];\n\nexport const fetchMentalHealthResources = async (): Promise<any[]> => {\n  try {\n  \n    await AsyncStorage.setItem('mentalHealthResources', JSON.stringify(mockData));\n    return mockData;\n  } catch (error) {\n    console.error('Error fetching mental health resources:', error);\n    return [];\n  }\n};\n\nexport const getCachedMentalHealthResources = async (): Promise<any[]> => {\n  try {\n    const cachedData = await AsyncStorage.getItem('mentalHealthResources');\n    return cachedData ? JSON.parse(cachedData) : [];\n  } catch (error) {\n    console.error('Error getting cached mental health resources:', error);\n    return [];\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Text, StyleSheet, View, ScrollView, Pressable, Dimensions, Image, Linking, SafeAreaView } from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport StatusBar from \"../components/StatusBar\"; \nimport { fetchMentalHealthResources, getCachedMentalHealthResources } from \"../components/api\"; \n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst MentalHealthResourcesScreen: React.FC = ({ }) => {\n  const [resources, setResources] = useState<any[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    const loadResources = async () => {\n      try {\n        const cachedData = await getCachedMentalHealthResources();\n        if (cachedData && Array.isArray(cachedData) && cachedData.length > 0) {\n          setResources(cachedData);\n          setLoading(false);\n        }\n\n        const data = await fetchMentalHealthResources();\n        if (data && Array.isArray(data) && data.length > 0) {\n          setResources(data);\n        }\n      } catch (error) {\n        console.error(\"Error loading resources:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadResources();\n  }, []);\n\n  const openLink = (link: string) => {\n    Linking.openURL(link);\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <Text>Loading...</Text>\n      </View>\n    );\n  }\n\n  if (!Array.isArray(resources) || resources.length === 0) {\n    return (\n      <View style={styles.noResourcesContainer}>\n        <Text>No resources available</Text>\n      </View>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar screenName=\"Mental Health Resources\" />\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        {resources.map(resource => (\n          <Pressable key={resource.id} style={styles.resourceCard} onPress={() => openLink(resource.link)}>\n            <Image source={{ uri: resource.imageUrl }} style={styles.resourceImage} />\n            <View style={styles.resourceInfo}>\n              <Text style={styles.resourceTitle}>{resource.title}</Text>\n              <Text style={styles.resourceDescription}>{resource.description}</Text>\n            </View>\n          </Pressable>\n        ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f0f4f8\",\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  noResourcesContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  scrollContainer: {\n    padding: responsiveWidth(5),\n  },\n  resourceCard: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    padding: responsiveWidth(3),\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.84,\n    elevation: 5,\n    marginBottom: responsiveHeight(2),\n  },\n  resourceImage: {\n    width: responsiveWidth(25),\n    height: responsiveWidth(25),\n    borderRadius: 10,\n    marginRight: responsiveWidth(5),\n  },\n  resourceInfo: {\n    flex: 1,\n  },\n  resourceTitle: {\n    fontSize: responsiveFontSize(4.5),\n    fontWeight: \"bold\",\n    color: \"#000\",\n    marginBottom: responsiveHeight(1),\n  },\n  resourceDescription: {\n    fontSize: responsiveFontSize(3.5),\n    color: \"#666\",\n  },\n});\n\nexport default MentalHealthResourcesScreen;\n","// imports.ts\nimport React from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  Dimensions,\n  TouchableOpacityProps,\n  TextInput,\n  SafeAreaView,\n  Pressable,\n  StatusBar,\n} from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { FontAwesome5, FontAwesome, MaterialIcons } from \"@expo/vector-icons\";\nimport { useFonts } from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport Homepage1 from \"./screens/Homepage1\";\nimport FirstAid from \"./screens/FirstAid\";\nimport SymptomAssessment from \"./screens/SymptomAssessment\";\nimport CounselorSession from \"./screens/CounselorSession\";\nimport DailyTipDetailScreen from \"./screens/DailyTipDetailScreen\";\nimport MedSchedule from \"./screens/MedSchedule\";\nimport FitnessNutrition from \"./screens/FitnessNutrition\";\nimport Settings from \"./screens/Settings\";\n\nimport CounselorDetails from \"./screens/CounselorDetails\";\nimport BookAppointment from \"./screens/BookAppointment\";\nimport AddMedication from \"./screens/AddMedication\";\nimport Menu from \"./components/Menu\";\nimport WelcomeScreen from \"./screens/WelcomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport SignUpScreen from \"./screens/SignUpScreen\";\nimport ForgetPassword from \"./screens/ForgetPassword\";\nimport NewsPage from \"./screens/NewsPage\";\nimport NotificationScreen from \"./screens/NotificationScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nimport PrivacyScreen from \"./screens/PrivacyScreen\";\nimport PreferencesScreen from \"./screens/PreferencesScreen\";\nimport AccessibilityScreen from \"./screens/AccessibilityScreen\";\nimport NotificationSettings from \"./screens/NotificationSettings\";\nimport MentalHealth from \"./screens/MentalHealth\";\nimport { RootStackParamList } from \"./types\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst Drawer = createDrawerNavigator();\nconst Tab = createBottomTabNavigator();\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nexport {\n  React,\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  Dimensions,\n  TouchableOpacityProps,\n  TextInput,\n  SafeAreaView,\n  Pressable,\n  StatusBar,\n  NavigationContainer,\n  createDrawerNavigator,\n  createBottomTabNavigator,\n  createNativeStackNavigator,\n  FontAwesome5,\n  FontAwesome,\n  MaterialIcons,\n  useFonts,\n  AppLoading,\n  KeyboardAwareScrollView,\n  Homepage1,\n  FirstAid,\n  SymptomAssessment,\n  CounselorSession,\n  DailyTipDetailScreen,\n  MedSchedule,\n  FitnessNutrition,\n  Settings,\n  CounselorDetails,\n  BookAppointment,\n  AddMedication,\n  Menu,\n  WelcomeScreen,\n  LoginScreen,\n  SignUpScreen,\n  ForgetPassword,\n  NewsPage,\n  NotificationScreen,\n  ProfileScreen,\n  PrivacyScreen,\n  PreferencesScreen,\n  AccessibilityScreen,\n  NotificationSettings,\n  MentalHealth,\n  RootStackParamList,\n  responsiveWidth,\n  responsiveHeight,\n  responsiveFontSize,\n  Drawer,\n  Tab,\n  Stack,\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { Platform } from 'react-native';\nimport { Audio } from 'expo-av';\nimport axios from 'axios';\nimport { NavigationProp } from '@react-navigation/native';\n\nlet navigation: NavigationProp<any>;\n\nexport const initVoiceCommands = (nav: NavigationProp<any>) => {\n  navigation = nav;\n};\n\nconst speak = (text: string) => {\n  if (Platform.OS === 'web') {\n    const synth = window.speechSynthesis;\n    const utterance = new SpeechSynthesisUtterance(text);\n    synth.speak(utterance);\n  } else {\n    const Speech = require('expo-speech');\n    Speech.speak(text);\n  }\n};\n\nexport const useVoiceCommands = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [recording, setRecording] = useState<Audio.Recording | null>(null);\n  const [recordingStatus, setRecordingStatus] = useState(\"idle\");\n  const [audioPermission, setAudioPermission] = useState<boolean | null>(null);\n  const [recordedAudio, setRecordedAudio] = useState<any>(null);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const audioChunksRef = useRef<any[]>([]);\n\n  useEffect(() => {\n    async function getPermission() {\n      if (Platform.OS === 'web') {\n        try {\n          await navigator.mediaDevices.getUserMedia({ audio: true });\n          setAudioPermission(true);\n        } catch (error) {\n          console.error(\"Permission Denied: \" + error.message);\n          setAudioPermission(false);\n        }\n      } else {\n        const permission = await Audio.requestPermissionsAsync();\n        console.log(\"Permission Granted: \" + permission.granted);\n        setAudioPermission(permission.granted);\n      }\n    }\n\n    getPermission();\n    return () => {\n      if (recording) {\n        stopRecording();\n      }\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  const handleRecordButtonPress = async (firstName: string) => {\n    setRecordedAudio(null);\n    setRecording(null);\n    if (recording) {\n      await stopRecording();\n    } else {\n      await startRecording(firstName);\n    }\n  };\n\n  const startRecording = async (firstName: string) => {\n    setIsRecording(true);\n    setRecording(null);\n    setRecordedAudio(null);\n\n    if (isRecording) {\n      console.warn(\"A recording is already in progress\");\n      return;\n    }\n\n    if (!audioPermission) {\n      console.warn(\"Audio permission is not granted\");\n      return;\n    }\n\n    try {\n      if (Platform.OS === 'web') {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        audioChunksRef.current = [];\n\n        mediaRecorder.ondataavailable = event => {\n          audioChunksRef.current.push(event.data);\n        };\n\n        mediaRecorder.onstop = async () => {\n          const blob = new Blob(audioChunksRef.current, { type: 'audio/m4a' });\n          const uri = URL.createObjectURL(blob);\n          setRecordedAudio({ uri, name: `recording-${Date.now()}.m4a`, type: \"audio/m4a\" });\n          const command = await processAudio(uri);\n          handleCommand(command);\n        };\n\n        mediaRecorder.start();\n        console.log(\"Starting Recording\");\n\n      } else {\n        await Audio.setAudioModeAsync({\n          allowsRecordingIOS: true,\n          playsInSilentModeIOS: true,\n        });\n\n        const newRecording = new Audio.Recording();\n        console.log(\"Starting Recording\");\n\n        await newRecording.prepareToRecordAsync(Audio.RecordingOptionsPresets.HIGH_QUALITY);\n        await newRecording.startAsync();\n        setRecording(newRecording);\n      }\n\n      setRecordingStatus(\"recording\");\n\n      // Introduce and greet the user\n      const greetingMessage = `Hello, ${firstName}. How may I assist you today?`;\n      console.log(greetingMessage); // Debugging line\n      speak(greetingMessage);\n\n      // Set a timeout to stop recording after 5 seconds\n      timeoutRef.current = setTimeout(async () => {\n        if (recording || mediaRecorderRef.current) {\n          await stopRecording();\n          speak(\"I didn't hear you clearly. Here are some things I can help you with: Booking appointments, viewing counselor details, joining a counselor session, viewing daily tips, fitness and nutrition advice, and more. Please try again.\");\n        }\n      }, 5000);\n\n    } catch (error) {\n      console.error(\"Failed to start recording\", error);\n    }\n  };\n\n  const stopRecording = async () => {\n    setIsRecording(false);\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    try {\n      if (recordingStatus === \"recording\") {\n        console.log(\"Stopping Recording\");\n        if (Platform.OS === 'web' && mediaRecorderRef.current) {\n          mediaRecorderRef.current.stop();\n        } else if (recording) {\n          await recording.stopAndUnloadAsync();\n          const uri = recording.getURI();\n          setRecordedAudio({ uri, name: `recording-${Date.now()}.m4a`, type: \"audio/m4a\" });\n          const command = await processAudio(uri);\n          handleCommand(command);\n        }\n        setRecording(null);\n        setRecordingStatus(\"stopped\");\n      }\n    } catch (error) {\n      console.error(\"Failed to stop recording\", error);\n    }\n  };\n\n  const processAudio = async (uri: string): Promise<string> => {\n    try {\n      const formData = new FormData();\n      formData.append(\"audio\", {\n        uri,\n        name: `recording-${Date.now()}.m4a`,\n        type: \"audio/m4a\",\n      });\n\n      const response = await axios.post('https://api.assemblyai.com/v2/transcript', formData, {\n        headers: {\n          \"Authorization\": \"Bearer bbc677d7b8894c8badd6f29ed50707c8\",\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      return response.data.text;\n    } catch (error) {\n      console.log('Error processing audio:', error);\n      if (error.response && error.response.status === 401) {\n        speak(\"Authorization error. Please check your API key.\");\n      }\n      return '';\n    }\n  };\n\n  const handleCommand = (command: string) => {\n    console.log(`Recognized command: ${command}`);\n    speak(`You said: ${command}`);\n    switch (command.toLowerCase()) {\n      case 'take me to the book appointment page':\n      case 'i want to book an appointment':\n      case 'go to appointment booking':\n        navigation.navigate('BookAppointment');\n        break;\n      case 'show me the counselor details':\n      case 'go to counselor details page':\n      case 'i want to see counselor information':\n        navigation.navigate('CounselorDetails');\n        break;\n      case 'take me to the counselor session page':\n      case 'i want to join a counselor session':\n      case 'go to counselor session':\n        navigation.navigate('CounselorSession');\n        break;\n      case 'show me the daily tips':\n      case 'go to daily tips page':\n      case 'i want to see daily health tips':\n        navigation.navigate('DailyTips');\n        break;\n      case 'show me fitness and nutrition tips':\n      case 'go to fitness and nutrition page':\n      case 'i want to see fitness and nutrition advice':\n        navigation.navigate('FitnessNutrition');\n        break;\n      case 'i forgot my password':\n      case 'go to forget password page':\n      case 'take me to password reset':\n        navigation.navigate('ForgetPassword');\n        break;\n      case 'show me healthy tips':\n      case 'go to healthy tips page':\n      case 'i want to see health advice':\n        navigation.navigate('HealthyTips');\n        break;\n      case 'take me to the homepage':\n      case 'go to the main page':\n      case 'i want to go home':\n        navigation.navigate('Homepage');\n        break;\n      case 'take me to the login page':\n      case 'i want to log in':\n      case 'go to login screen':\n        navigation.navigate('LoginScreen');\n        break;\n      case 'show me my medication schedule':\n      case 'go to med schedule page':\n      case 'i want to see my meds schedule':\n        navigation.navigate('MedSchedule');\n        break;\n      case 'take me to mental health page':\n      case 'show me mental health tips':\n      case 'go to mental health section':\n        navigation.navigate('MentalHealth');\n        break;\n      case 'show me the news':\n      case 'go to the news page':\n      case 'i want to see health news':\n        navigation.navigate('NewsPage');\n        break;\n      case 'show me my notifications':\n      case 'go to notification screen':\n      case 'i want to see my alerts':\n        navigation.navigate('NotificationScreen');\n        break;\n      case 'take me to notification settings':\n      case 'go to notification settings page':\n      case 'i want to manage my notifications':\n        navigation.navigate('NotificationSettings');\n        break;\n      case 'take me to preferences':\n      case 'go to preferences page':\n      case 'i want to set my preferences':\n        navigation.navigate('PreferencesScreen');\n        break;\n      case 'show me the privacy settings':\n      case 'go to privacy screen':\n      case 'i want to see privacy options':\n        navigation.navigate('PrivacyScreen');\n        break;\n      case 'take me to my profile':\n      case 'go to profile page':\n      case 'i want to see my profile':\n        navigation.navigate('ProfileScreen');\n        break;\n      case 'take me to settings':\n      case 'go to the settings page':\n      case 'i want to change settings':\n        navigation.navigate('Settings');\n        break;\n      case 'take me to sign up':\n      case 'go to the sign up page':\n      case 'i want to create an account':\n        navigation.navigate('SignUpScreen');\n        break;\n      case 'take me to symptom assessment':\n      case 'go to symptom assessment page':\n      case 'i want to assess my symptoms':\n        navigation.navigate('SymptomAssessment');\n        break;\n      case 'is a counselor available for booking?':\n      case 'can i book a counselor now?':\n      case 'check if a counselor is available':\n        // Implement your logic to check counselor availability\n        break;\n      case 'what are the latest health tips today?':\n      case 'tell me today\\'s health tips':\n      case 'show me the latest health advice':\n        // Implement your logic to read the latest health tip\n        break;\n      case 'what do i have on my notifications?':\n      case 'read my notifications':\n      case 'tell me my latest alerts':\n        // Implement your logic to read notifications\n        break;\n      default:\n        speak(\"I didn't recognize that command. Here are some things I can help you with: Booking appointments, viewing counselor details, joining a counselor session, viewing daily tips, fitness and nutrition advice, and more. Please try again.\");\n    }\n  };\n\n  return {\n    handleRecordButtonPress,\n    isRecording,\n    recordingStatus,\n    recordedAudio,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { View, Text, StyleSheet, Pressable, FlatList, SafeAreaView, Dimensions } from \"react-native\";\nimport { useNavigation, RouteProp, ParamListBase } from \"@react-navigation/native\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\nimport { doc, updateDoc } from \"firebase/firestore\";\nimport { db } from \"../firebaseConfig\";\n\ntype InterestScreenNavigationProp = StackNavigationProp<\n  ParamListBase,\n  \"InterestsScreen\"\n>;\n\ntype InterestScreenRouteProp = RouteProp<\n  ParamListBase,\n  \"InterestsScreen\"\n>;\n\ntype Props = {\n  route: InterestScreenRouteProp;\n  navigation: InterestScreenNavigationProp;\n};\n\nconst interestsList = [\n  \"Fitness\",\n  \"Nutrition\",\n  \"Mental Health\",\n  \"General Health\",\n  \"Diseases\",\n  \"Treatments\",\n  \"Medicines\",\n  \"Lifestyle\",\n  \"Research\",\n];\n\nconst InterestsScreen: React.FC<Props> = ({ route, navigation }) => {\n  const { userId } = route.params;\n  const [selectedInterests, setSelectedInterests] = useState<string[]>([]);\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get(\"window\").width);\n  const [screenHeight, setScreenHeight] = useState(Dimensions.get(\"window\").height);\n\n  useEffect(() => {\n    const handleResize = ({ window }) => {\n      setScreenWidth(window.width);\n      setScreenHeight(window.height);\n    };\n\n    const dimensionListener = Dimensions.addEventListener(\"change\", handleResize);\n\n    return () => {\n      dimensionListener?.remove();\n    };\n  }, []);\n\n  const vw = screenWidth / 100;\n  const vh = screenHeight / 100;\n\n  const dynamicStyles = getDynamicStyles(vw, vh);\n\n  const toggleInterest = (interest: string) => {\n    setSelectedInterests((prevInterests) =>\n      prevInterests.includes(interest)\n        ? prevInterests.filter((item) => item !== interest)\n        : [...prevInterests, interest]\n    );\n  };\n\n  const handleSave = async () => {\n    try {\n      await updateDoc(doc(db, \"users\", userId), {\n        interests: selectedInterests,\n      });\n      navigation.navigate(\"LoginScreen\");\n    } catch (error) {\n      console.error(\"Error saving interests: \", error);\n    }\n  };\n\n  const handleSkip = () => {\n    navigation.navigate(\"LoginScreen\");\n  };\n\n  return (\n    <SafeAreaView style={dynamicStyles.container}>\n      <Text style={dynamicStyles.header}>Select Your Interests</Text>\n      <FlatList\n        data={interestsList}\n        keyExtractor={(item) => item}\n        numColumns={2}\n        renderItem={({ item }) => (\n          <Pressable\n            style={[\n              dynamicStyles.interestItem,\n              selectedInterests.includes(item) && dynamicStyles.selectedInterestItem,\n            ]}\n            onPress={() => toggleInterest(item)}\n          >\n            <Text style={dynamicStyles.interestText}>{item}</Text>\n          </Pressable>\n        )}\n        contentContainerStyle={dynamicStyles.interestsContainer}\n      />\n      <View style={dynamicStyles.buttonContainer}>\n        <Pressable style={dynamicStyles.button} onPress={handleSave}>\n          <Text style={dynamicStyles.buttonText}>Save</Text>\n        </Pressable>\n        <Pressable style={dynamicStyles.button} onPress={handleSkip}>\n          <Text style={dynamicStyles.buttonText}>Skip</Text>\n        </Pressable>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst responsiveWidth = (vw, percent) => vw * percent;\nconst responsiveHeight = (vh, percent) => vh * percent;\nconst responsiveFontSize = (vw, percent) => vw * percent;\n\nconst getDynamicStyles = (vw, vh) => {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      backgroundColor: \"#fff\",\n    },\n    header: {\n      fontSize: responsiveFontSize(vw, 6),\n      fontWeight: \"bold\",\n      marginVertical: responsiveHeight(vh, 2),\n    },\n    interestsContainer: {\n      justifyContent: \"center\",\n    },\n    interestItem: {\n      backgroundColor: \"#e0e0e0\",\n      padding: responsiveHeight(vh, 2),\n      margin: responsiveWidth(vw, 2),\n      borderRadius: 10,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: responsiveWidth(vw, 40),\n    },\n    selectedInterestItem: {\n      backgroundColor: \"#318CE7\",\n    },\n    interestText: {\n      fontSize: responsiveFontSize(vw, 4),\n      color: \"#333\",\n    },\n    buttonContainer: {\n      flexDirection: \"row\",\n      justifyContent: \"space-around\",\n      marginTop: responsiveHeight(vh, 2),\n    },\n    button: {\n      backgroundColor: \"#318CE7\",\n      padding: responsiveHeight(vh, 2),\n      borderRadius: 10,\n      marginHorizontal: responsiveWidth(vw, 5),\n      width: responsiveWidth(vw, 30),\n      alignItems: \"center\",\n    },\n    buttonText: {\n      color: \"#fff\",\n      fontSize: responsiveFontSize(vw, 4),\n    },\n  });\n};\n\nexport default InterestsScreen;\n","import * as imports from \"./imports\";\nimport { useVoiceCommands, initVoiceCommands } from './voiceCommands';\nimport { useNavigation } from '@react-navigation/native';\nimport { db, auth } from \"./firebaseConfig\";\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\nimport { View, TouchableOpacity, StyleSheet, Platform } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport React, { useEffect, useState, useRef } from 'react';\nimport * as Device from 'expo-device';\nimport * as Notifications from 'expo-notifications';\nimport Constants from 'expo-constants';\n\nimport { registerForPushNotificationsAsync, schedulePushNotification } from './registerPushNotifications';\nimport HealthNewsInterest from \"./screens/HealthNewsInterest\";\n\nconst {\n  Text,\n  NavigationContainer,\n  useFonts,\n  AppLoading,\n  Homepage1,\n  FirstAid,\n  SymptomAssessment,\n  CounselorSession,\n  DailyTipDetailScreen,\n  MedSchedule,\n  FitnessNutrition,\n  Settings,\n  CounselorDetails,\n  BookAppointment,\n  AddMedication,\n  Menu,\n  WelcomeScreen,\n  LoginScreen,\n  SignUpScreen,\n  ForgetPassword,\n  NewsPage,\n  NotificationScreen,\n  ProfileScreen,\n  PrivacyScreen,\n  PreferencesScreen,\n  AccessibilityScreen,\n  NotificationSettings,\n  MentalHealth,\n  RootStackParamList,\n  responsiveWidth,\n  responsiveHeight,\n  responsiveFontSize,\n  Drawer,\n  Tab,\n  Stack,\n} = imports;\n\n// Initialize Notifications\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n});\n\nconst HomeStack = () => (\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\n    <Stack.Screen name=\"Homepage1\" component={Homepage1} />\n    <Stack.Screen name=\"FirstAid\" component={FirstAid} />\n    <Stack.Screen name=\"CounselorSession\" component={CounselorSession} />\n    <Stack.Screen name=\"DailyTipDetailScreen\" component={DailyTipDetailScreen} />\n  </Stack.Navigator>\n);\n\nconst CenterButton = (props: any) => {\n  const [firstName, setFirstName] = React.useState<string>(\"\");\n  const { handleRecordButtonPress, isRecording } = useVoiceCommands();\n  const navigation = useNavigation();\n\n  React.useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const user = auth.currentUser;\n        if (user) {\n          const userQuery = query(collection(db, \"users\"), where(\"email\", \"==\", user.email));\n          const userSnapshot = await getDocs(userQuery);\n          if (!userSnapshot.empty) {\n            const userData = userSnapshot.docs[0].data();\n            if (userData && userData.firstname) {\n              setFirstName(userData.firstname);\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n\n    fetchUserData();\n    initVoiceCommands(navigation);\n  }, [navigation]);\n\n  return (\n    <TouchableOpacity {...props} style={styles.centerButton} onPress={() => handleRecordButtonPress(firstName)}>\n      <View style={[styles.centerButtonContainer, { backgroundColor: isRecording ? \"#FF6347\" : \"#318CE7\" }]}>\n        <FontAwesome5 name=\"robot\" color=\"#fff\" size={responsiveFontSize(6)} />\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst MainTabs = () => (\n  <Tab.Navigator\n    screenOptions={({ route }) => ({\n      tabBarShowLabel: true,\n      tabBarStyle: styles.tabBar,\n      tabBarIcon: ({ color, size }) => {\n        let iconName: string;\n        if (route.name === \"HomeTab\") {\n          iconName = \"home\";\n        } else if (route.name === \"FirstAidTab\") {\n          iconName = \"briefcase-medical\";\n        } else if (route.name === \"NewsPageTab\") {\n          iconName = \"newspaper\";\n        } else if (route.name === \"CounselorSessionTab\") {\n          iconName = \"user-friends\";\n        }\n\n        return <FontAwesome5 name={iconName} size={size} color={color} />;\n      },\n      tabBarLabel: ({ focused }) => {\n        let label: string;\n        if (route.name === \"HomeTab\") {\n          label = \"Home\";\n        } else if (route.name === \"FirstAidTab\") {\n          label = \"First Aid\";\n        } else if (route.name === \"NewsPageTab\") {\n          label = \"News\";\n        } else if (route.name === \"CounselorSessionTab\") {\n          label = \"Counselor\";\n        }\n        return (\n          <Text\n            style={{\n              color: focused ? \"#673ab7\" : \"#222\",\n              fontSize: responsiveFontSize(3),\n              fontFamily: \"Poppins-Regular\",\n            }}\n          >\n            {label}\n          </Text>\n        );\n      },\n    })}\n  >\n    <Tab.Screen name=\"HomeTab\" component={HomeStack} options={{ headerShown: false }} />\n    <Tab.Screen name=\"FirstAidTab\" component={FirstAid} options={{ headerShown: false }} />\n    <Tab.Screen\n      name=\"CenterButton\"\n      component={View}\n      options={{\n        tabBarButton: (props) => <CenterButton {...props} />,\n        headerShown: false,\n      }}\n    />\n    <Tab.Screen name=\"NewsPageTab\" component={NewsPage} options={{ headerShown: false }} />\n    <Tab.Screen name=\"CounselorSessionTab\" component={CounselorSession} options={{ headerShown: false }} />\n  </Tab.Navigator>\n);\n\nconst AppStack = () => (\n  <Stack.Navigator screenOptions={{ headerShown: false }} initialRouteName=\"WelcomeScreen\">\n    <Stack.Screen name=\"WelcomeScreen\" component={WelcomeScreen} />\n    <Stack.Screen name=\"LoginScreen\" component={LoginScreen} />\n    <Stack.Screen name=\"SignUpScreen\" component={SignUpScreen} />\n    <Stack.Screen name=\"ForgetPassword\" component={ForgetPassword} />\n    <Stack.Screen name=\"MainTabs\" component={MainTabs} />\n    <Stack.Screen name=\"MedSchedule\" component={MedSchedule} />\n    <Stack.Screen name=\"FitnessNutrition\" component={FitnessNutrition} />\n    <Stack.Screen name=\"Settings\" component={Settings} />\n    <Stack.Screen name=\"CounselorDetails\" component={CounselorDetails} />\n    <Stack.Screen name=\"BookAppointment\" component={BookAppointment} />\n    <Stack.Screen name=\"NewsPage\" component={NewsPage} />\n    <Stack.Screen name=\"NotificationScreen\" component={NotificationScreen} />\n    <Stack.Screen name=\"ProfileScreen\" component={ProfileScreen} />\n    <Stack.Screen name=\"PrivacyScreen\" component={PrivacyScreen} />\n    <Stack.Screen name=\"PreferencesScreen\" component={PreferencesScreen} />\n    <Stack.Screen name=\"AccessibilityScreen\" component={AccessibilityScreen} />\n    <Stack.Screen name=\"NotificationSettings\" component={NotificationSettings} />\n    <Stack.Screen name=\"MentalHealth\" component={MentalHealth} />\n    <Stack.Screen name=\"AddMedication\" component={AddMedication} />\n    <Stack.Screen name=\"SymptomAssessment\" component={SymptomAssessment} />\n    <Stack.Screen name=\"HealthNewsInterest\" component={HealthNewsInterest} />\n  </Stack.Navigator>\n);\n\nconst App = () => {\n  const [fontsLoaded] = useFonts({\n    \"Poppins-Regular\": require(\"./assets/fonts/Poppins-Regular.ttf\"),\n    \"Poppins-Bold\": require(\"./assets/fonts/Poppins-Bold.ttf\"),\n    \"Poppins-SemiBold\": require(\"./assets/fonts/Poppins-SemiBold.ttf\"),\n    \"Poppins-Medium\": require(\"./assets/fonts/Poppins-Medium.ttf\"),\n  });\n\n  const [expoPushToken, setExpoPushToken] = useState<string | undefined>('');\n  const [notification, setNotification] = useState<Notifications.Notification | boolean>(false);\n  const notificationListener = useRef<Notifications.Subscription>();\n  const responseListener = useRef<Notifications.Subscription>();\n\n  useEffect(() => {\n    if (Platform.OS !== 'web') {\n      registerForPushNotificationsAsync().then(token => setExpoPushToken(token));\n\n      notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n        setNotification(notification);\n      });\n\n      responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n        console.log(response);\n      });\n    }\n\n    const userEmail = auth.currentUser?.email || 'user@example.com'; // Replace with actual user email fetching logic\n    schedulePushNotification(db, userEmail); // Schedule notifications based on Firestore data\n\n    return () => {\n      if (notificationListener.current) {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n      }\n      if (responseListener.current) {\n        Notifications.removeNotificationSubscription(responseListener.current);\n      }\n    };\n  }, []);\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator\n        drawerContent={(props) => <Menu {...props} />}\n        screenOptions={({ route }) => ({\n          swipeEnabled: false,\n        })}\n      >\n        <Drawer.Screen name=\"Home\" component={AppStack} options={{ headerShown: false }} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n};\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    position: \"absolute\",\n    bottom: 0,\n    height: responsiveHeight(8.75),\n    backgroundColor: \"#fff\",\n    borderTopRightRadius: responsiveHeight(1.5),\n    borderTopLeftRadius: responsiveHeight(1.5),\n    paddingBottom: responsiveHeight(1.25),\n    ...Platform.select({\n      web: {\n        boxShadow: \"0px 0px 10px rgba(0,0,0,0.1)\",\n      },\n      default: {\n        elevation: 5,\n      },\n    }),\n  },\n  centerButton: {\n    top: -responsiveHeight(3.75),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  centerButtonContainer: {\n    width: responsiveWidth(17.5),\n    height: responsiveWidth(17.5),\n    borderRadius: responsiveWidth(8.75),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    ...Platform.select({\n      web: {\n        boxShadow: \"0px 0px 10px rgba(0,0,0,0.1)\",\n      },\n      default: {\n        elevation: 5,\n      },\n    }),\n  },\n});\n\nexport default App;\n","import * as Device from 'expo-device';\nimport * as Notifications from 'expo-notifications';\nimport Constants from 'expo-constants';\nimport { Platform } from 'react-native';\nimport { collection, getDocs, Firestore, addDoc } from \"firebase/firestore\";\n\nexport async function registerForPushNotificationsAsync(): Promise<string | undefined> {\n  let token: string | undefined;\n\n  if (Platform.OS === 'android') {\n    await Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  if (Platform.OS === 'web') {\n    console.log('Web platform detected, no push token required');\n    return;\n  }\n\n  if (Device.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!');\n      return;\n    }\n\n    token = (await Notifications.getExpoPushTokenAsync({\n      projectId: Constants.manifest.extra?.eas?.projectId,\n    })).data;\n    console.log(token);\n  } else {\n    alert('Must use physical device for Push Notifications');\n  }\n\n  return token;\n}\n\nexport async function schedulePushNotification(db: Firestore, userEmail: string) {\n  const now = new Date();\n  const currentTime = now.getTime();\n\n  const q = collection(db, 'medReminder');\n  const querySnapshot = await getDocs(q);\n\n  querySnapshot.forEach(async (doc) => {\n    const data = doc.data();\n    if (data.times && Array.isArray(data.times)) {\n      data.times.forEach(async (time: string) => {\n        const reminderTime = new Date();\n        const [hour, minute] = time.split(':');\n        const [hourPart, period] = hour.split(' ');\n        const formattedHour = period === 'PM' ? parseInt(hourPart) + 12 : parseInt(hourPart);\n        reminderTime.setHours(formattedHour);\n        reminderTime.setMinutes(parseInt(minute));\n        reminderTime.setSeconds(0);\n\n        const reminderTimestamp = reminderTime.getTime();\n\n        if (Math.abs(reminderTimestamp - currentTime) <= 5 * 60 * 1000) {\n          const notificationContent = {\n            title: `Medication Reminder`,\n            body: `It's time to take your ${data.medicationName} (${data.selectedForm}, ${data.selectedUnit})`,\n            data: { ...data },\n            timestamp: new Date().toISOString(),\n          };\n\n          if (Platform.OS === 'web') {\n            // Save notification to Firestore for web and let Firebase Extensions handle sending email\n            await addDoc(collection(db, 'notifications'), {\n              ...notificationContent,\n              email: userEmail,\n            });\n          } else {\n            // Schedule push notification for mobile devices\n            await Notifications.scheduleNotificationAsync({\n              content: {\n                title: notificationContent.title,\n                body: notificationContent.body,\n                sound: \"default\",\n                data: notificationContent.data,\n              },\n              trigger: { seconds: 2 },\n            });\n          }\n        }\n      });\n    }\n  });\n}\n","import * as React from \"react\";\nimport { StyleSheet, Text, View, Pressable, Dimensions } from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst CustomStatusBar = ({ screenName, icon }: { screenName: string, icon?: string }) => {\n  const navigation = useNavigation();\n\n  return (\n    <View style={styles.statusBar}>\n        <Pressable style={styles.leftArrowParent} onPress={() => navigation.goBack()}>\n          <Ionicons name=\"arrow-back\" size={responsiveFontSize(7.5)} color=\"#fff\" style={styles.leftArrowIcon} />\n        </Pressable>\n      <View style={styles.statusBarInner}>\n        <View style={styles.screenNameContainer}>\n          {icon && <Ionicons name={icon} size={responsiveFontSize(7.5)} color=\"#fff\" style={styles.screenIcon} />}\n          <Text style={styles.screenNameText}>{screenName}</Text>\n        </View>\n      </View>\n   \n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  statusBar: {\n    width: \"100%\",\n  },\n  statusBarInner: {\n    width: \"70%\",\n    justifyContent: \"center\",\n    backgroundColor: \"#318CE7\",\n    paddingLeft: responsiveFontSize(8.0),\n    marginTop: responsiveFontSize(4.5),\n    borderTopRightRadius: responsiveFontSize(8.0),\n    borderBottomRightRadius: responsiveFontSize(8.0),\n    height: responsiveHeight(5),\n  },\n  leftArrowParent: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginLeft: responsiveWidth(5.75),\n    marginTop: responsiveWidth(3.75),\n  },\n  leftArrowIcon: {\n \n    color: '#333'\n  },\n  screenNameContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  screenIcon: {\n    marginRight: responsiveWidth(2.5),\n  },\n  screenNameText: {\n    fontSize: responsiveFontSize(5.0),\n    fontWeight: \"bold\",\n    color: \"#fff\",\n  },\n  greetingContainer: {\n    paddingHorizontal: responsiveWidth(2.5),\n    paddingVertical: responsiveHeight(1.75),\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  greeting: {\n    fontSize: responsiveFontSize(4.0),\n    color: \"#fff\",\n  },\n});\n\nexport default CustomStatusBar;\n","import { getApps, initializeApp } from \"firebase/app\";\nimport { getAuth, initializeAuth, browserLocalPersistence } from \"firebase/auth\";\nimport { getFirestore, Firestore } from \"firebase/firestore\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCFWNcAqQ_4UzWLKt7-6JovmJ_V28_AcV8\",\n  authDomain: \"campcare-93295.firebaseapp.com\",\n  projectId: \"campcare-93295\",\n  storageBucket: \"campcare-93295.appspot.com\",\n  messagingSenderId: \"549195152079\",\n  appId: \"1:549195152079:web:8a83fe303fa6e30cdad5ba\"\n};\n\nlet app;\nif (!getApps().length) {\n  app = initializeApp(firebaseConfig);\n} else {\n  app = getApps()[0];\n}\n\n// Initialize Firestore\nconst db: Firestore = getFirestore(app);\n\n// Initialize Auth with persistence\nconst auth = initializeAuth(app, {\n  persistence: browserLocalPersistence,\n  // experimentalForceLongPolling: true,\n});\n\nexport { auth, db };\n","import * as React from \"react\";\nimport { Text, StyleSheet, View, ScrollView, Switch, Dimensions } from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport StatusBar from \"../components/StatusBar\";\nimport * as Speech from 'expo-speech';\nimport Slider from '@react-native-community/slider';\nimport ModalSelector from 'react-native-modal-selector';\n\nconst AccessibilityScreen = ({ navigation }) => {\n  const [isVoiceOverEnabled, setIsVoiceOverEnabled] = React.useState(false);\n  const [isDarkModeEnabled, setIsDarkModeEnabled] = React.useState(false);\n  const [selectedVoice, setSelectedVoice] = React.useState<string | null>(null);\n  const [pitch, setPitch] = React.useState<number>(1.0);\n  const [rate, setRate] = React.useState<number>(1.0);\n  const [voices, setVoices] = React.useState<Speech.Voice[]>([]);\n  const [screenWidth, setScreenWidth] = React.useState(Dimensions.get(\"window\").width);\n  const [screenHeight, setScreenHeight] = React.useState(Dimensions.get(\"window\").height);\n\n  const toggleVoiceOverSwitch = () => setIsVoiceOverEnabled(previousState => !previousState);\n  const toggleDarkModeSwitch = () => setIsDarkModeEnabled(previousState => !previousState);\n\n  React.useEffect(() => {\n    Speech.getAvailableVoicesAsync().then(setVoices);\n\n    const handleResize = ({ window }) => {\n      setScreenWidth(window.width);\n      setScreenHeight(window.height);\n    };\n\n    const dimensionListener = Dimensions.addEventListener(\"change\", handleResize);\n\n    return () => {\n      dimensionListener?.remove();\n    };\n  }, []);\n\n  const vw = screenWidth / 100;\n  const vh = screenHeight / 100;\n\n  const dynamicStyles = getDynamicStyles(vw, vh);\n\n  return (\n    <SafeAreaView style={dynamicStyles.container}>\n      <StatusBar screenName=\"Accessibility\" />\n    \n      <ScrollView contentContainerStyle={dynamicStyles.scrollContainer}>\n        <View style={dynamicStyles.accessibilityItem}>\n          <Text style={dynamicStyles.label}>Enable Voice Over</Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#1F75FE\" }}\n            thumbColor={isVoiceOverEnabled ? \"#fff\" : \"#f4f3f4\"}\n            onValueChange={toggleVoiceOverSwitch}\n            value={isVoiceOverEnabled}\n          />\n        </View>\n        <View style={dynamicStyles.accessibilityItem}>\n          <Text style={dynamicStyles.label}>Enable Dark Mode</Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#1F75FE\" }}\n            thumbColor={isDarkModeEnabled ? \"#fff\" : \"#f4f3f4\"}\n            onValueChange={toggleDarkModeSwitch}\n            value={isDarkModeEnabled}\n          />\n        </View>\n        <View style={dynamicStyles.accessibilityItem}>\n          <Text style={dynamicStyles.label}>Select Voice</Text>\n          <ModalSelector\n            data={voices.map((voice, index) => ({ key: index, label: voice.name, value: voice.identifier }))}\n            initValue=\"Select a voice\"\n            onChange={(option) => setSelectedVoice(option.value)}\n            style={dynamicStyles.picker}\n          >\n            <Text style={dynamicStyles.pickerText}>{selectedVoice || 'Select a voice'}</Text>\n          </ModalSelector>\n        </View>\n        <View style={dynamicStyles.accessibilityItem}>\n          <Text style={dynamicStyles.label}>Pitch</Text>\n          <Slider\n            style={dynamicStyles.slider}\n            minimumValue={0.5}\n            maximumValue={2.0}\n            value={pitch}\n            onValueChange={(value) => setPitch(value)}\n          />\n          <Text>{pitch.toFixed(1)}</Text>\n        </View>\n        <View style={dynamicStyles.accessibilityItem}>\n          <Text style={dynamicStyles.label}>Rate</Text>\n          <Slider\n            style={dynamicStyles.slider}\n            minimumValue={0.5}\n            maximumValue={2.0}\n            value={rate}\n            onValueChange={(value) => setRate(value)}\n          />\n          <Text>{rate.toFixed(1)}</Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst responsiveWidth = (vw, percent) => vw * percent;\nconst responsiveHeight = (vh, percent) => vh * percent;\nconst responsiveFontSize = (vw, percent) => vw * percent;\n\nconst getDynamicStyles = (vw, vh) => {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: \"#f0f4f8\",\n    },\n    scrollContainer: {\n      padding: responsiveWidth(vw, 5),\n    },\n    accessibilityItem: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      paddingVertical: responsiveHeight(vh, 2),\n      borderBottomWidth: 1,\n      borderBottomColor: \"rgba(204, 204, 204, 0.3)\",\n    },\n    label: {\n      fontSize: responsiveFontSize(vw, 4.5),\n      color: \"#000\",\n    },\n    picker: {\n      height: responsiveHeight(vh, 5),\n      width: responsiveWidth(vw, 50),\n    },\n    pickerText: {\n      fontSize: responsiveFontSize(vw, 4),\n      color: '#000',\n    },\n    slider: {\n      width: responsiveWidth(vw, 50),\n    },\n  });\n};\n\nexport default AccessibilityScreen;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Dimensions,\n  SafeAreaView,\n  ScrollView,\n  Pressable,\n  StatusBar,\n  Alert,\n  Platform,\n} from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useNavigation, NavigationProp, ParamListBase } from \"@react-navigation/native\";\nimport { collection, onSnapshot, deleteDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../firebaseConfig\"; // Ensure this path is correct\n\n// Conditionally import based on the platform\nconst TouchableOpacity = Platform.OS === 'web' ? require('react-native-web').TouchableOpacity : require('react-native').TouchableOpacity;\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\ntype Notification = {\n  id: string;\n  medicationName: string;\n  selectedForm: string;\n  selectedUnit: string;\n  frequency: string;\n  times: string[];\n};\n\nconst NotificationPage: React.FC = () => {\n  const navigation = useNavigation<NavigationProp<ParamListBase>>();\n  const [notifications, setNotifications] = useState<Notification[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [selectedNotifications, setSelectedNotifications] = useState<Set<string>>(new Set());\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(collection(db, 'medReminder'), (querySnapshot) => {\n      const fetchedNotifications: Notification[] = [];\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        fetchedNotifications.push({\n          id: doc.id,\n          medicationName: data.medicationName,\n          selectedForm: data.selectedForm,\n          selectedUnit: data.selectedUnit,\n          frequency: data.frequency,\n          times: data.times || [], // Default to empty array if undefined\n        });\n      });\n      setNotifications(fetchedNotifications);\n      setLoading(false);\n    }, (error) => {\n      console.error(\"Error fetching notifications: \", error);\n      setLoading(false);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  const handleBackPress = () => {\n    navigation.goBack();\n  };\n\n  const handleLongPress = (id: string) => {\n    if (selectedNotifications.has(id)) {\n      selectedNotifications.delete(id);\n    } else {\n      selectedNotifications.add(id);\n    }\n    setSelectedNotifications(new Set(selectedNotifications));\n  };\n\n  const handleDelete = async () => {\n    try {\n      await Promise.all(Array.from(selectedNotifications).map(id => deleteDoc(doc(db, 'medReminder', id))));\n      Alert.alert(\"Success\", \"Selected notifications have been deleted.\");\n      setSelectedNotifications(new Set());\n    } catch (error) {\n      console.error(\"Error deleting notifications: \", error);\n      Alert.alert(\"Error\", \"Failed to delete notifications.\");\n    }\n  };\n\n  const renderNotificationItem = (notification: Notification) => {\n    const isSelected = selectedNotifications.has(notification.id);\n    return (\n      <TouchableOpacity\n        key={notification.id}\n        onLongPress={() => handleLongPress(notification.id)}\n        style={[\n          styles.notificationItem,\n          isSelected && styles.notificationItemSelected,\n        ]}\n      >\n        <View style={styles.notificationContent}>\n          <Text style={styles.notificationTitle}>{notification.medicationName}</Text>\n          <Text style={styles.notificationDescription}>\n            {notification.selectedForm} {notification.selectedUnit}\n          </Text>\n          <Text style={styles.notificationDate}>{notification.frequency}</Text>\n          <Text style={styles.notificationTimes}>\n            {notification.times.join(\", \")}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  if (loading) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <StatusBar barStyle=\"dark-content\" backgroundColor=\"#fff\" />\n        <View style={styles.header}>\n          <Pressable style={styles.backButton} onPress={handleBackPress}>\n            <Ionicons name=\"arrow-back\" size={responsiveFontSize(6)} color=\"#000\" />\n          </Pressable>\n          <Text style={styles.headerText}>Notifications</Text>\n        </View>\n        <View style={styles.loadingContainer}>\n          <Text style={styles.loadingText}>Loading...</Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#fff\" />\n      <View style={styles.header}>\n        <Pressable style={styles.backButton} onPress={handleBackPress}>\n          <Ionicons name=\"arrow-back\" size={responsiveFontSize(6)} color=\"#000\" />\n        </Pressable>\n        <Text style={styles.headerText}>Notifications</Text>\n        {selectedNotifications.size > 0 && (\n          <Pressable style={styles.deleteButton} onPress={handleDelete}>\n            <Ionicons name=\"trash\" size={responsiveFontSize(6)} color=\"red\" />\n          </Pressable>\n        )}\n      </View>\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        {notifications.length === 0 ? (\n          <View style={styles.noNotificationsContainer}>\n            <Text style={styles.noNotificationsText}>No notifications available.</Text>\n          </View>\n        ) : (\n          notifications.map(renderNotificationItem)\n        )}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: responsiveWidth(5),\n    paddingVertical: responsiveHeight(2),\n    justifyContent: \"space-between\",\n  },\n  backButton: {\n    marginRight: responsiveWidth(2),\n  },\n  headerText: {\n    fontSize: responsiveFontSize(5),\n    fontWeight: \"bold\",\n  },\n  deleteButton: {\n    marginLeft: \"auto\",\n  },\n  scrollContainer: {\n    paddingHorizontal: responsiveWidth(5),\n    paddingVertical: responsiveHeight(3),\n  },\n  notificationItem: {\n    marginBottom: responsiveHeight(3),\n    backgroundColor: \"#f9f9f9\",\n    borderRadius: responsiveWidth(2),\n    overflow: \"hidden\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  notificationItemSelected: {\n    backgroundColor: \"#d1e7ff\",\n  },\n  notificationContent: {\n    padding: responsiveWidth(4),\n  },\n  notificationTitle: {\n    fontSize: responsiveFontSize(4),\n    fontWeight: \"bold\",\n    marginBottom: responsiveHeight(1),\n  },\n  notificationDescription: {\n    fontSize: responsiveFontSize(3.5),\n    color: \"#333\",\n    marginBottom: responsiveHeight(1),\n  },\n  notificationDate: {\n    fontSize: responsiveFontSize(3),\n    color: \"#888\",\n  },\n  notificationTimes: {\n    fontSize: responsiveFontSize(3),\n    color: \"#555\",\n    marginTop: responsiveHeight(1),\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    fontSize: responsiveFontSize(4),\n    color: \"#333\",\n  },\n  noNotificationsContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  noNotificationsText: {\n    fontSize: responsiveFontSize(4),\n    color: \"#888\",\n  },\n  // Media queries for tablet\n  '@media (min-width: 768px)': {\n    header: {\n      paddingHorizontal: responsiveWidth(3),\n      paddingVertical: responsiveHeight(1.5),\n    },\n    headerText: {\n      fontSize: responsiveFontSize(4.5),\n    },\n    scrollContainer: {\n      paddingHorizontal: responsiveWidth(4),\n    },\n    notificationItem: {\n      marginBottom: responsiveHeight(2.5),\n      borderRadius: responsiveWidth(1.5),\n    },\n    notificationContent: {\n      padding: responsiveWidth(3.5),\n    },\n    notificationTitle: {\n      fontSize: responsiveFontSize(3.5),\n    },\n    notificationDescription: {\n      fontSize: responsiveFontSize(3),\n    },\n    notificationDate: {\n      fontSize: responsiveFontSize(2.5),\n    },\n    notificationTimes: {\n      fontSize: responsiveFontSize(2.5),\n    },\n  },\n  // Media queries for desktop\n  '@media (min-width: 1024px)': {\n    header: {\n      paddingHorizontal: responsiveWidth(2.5),\n      paddingVertical: responsiveHeight(1),\n    },\n    headerText: {\n      fontSize: responsiveFontSize(4),\n    },\n    scrollContainer: {\n      paddingHorizontal: responsiveWidth(3.5),\n    },\n    notificationItem: {\n      marginBottom: responsiveHeight(2),\n      borderRadius: responsiveWidth(1),\n    },\n    notificationContent: {\n      padding: responsiveWidth(3),\n    },\n    notificationTitle: {\n      fontSize: responsiveFontSize(3),\n    },\n    notificationDescription: {\n      fontSize: responsiveFontSize(2.5),\n    },\n    notificationDate: {\n      fontSize: responsiveFontSize(2),\n    },\n    notificationTimes: {\n      fontSize: responsiveFontSize(2),\n    },\n  },\n});\n\nexport default NotificationPage;\n","import * as React from \"react\";\nimport { Text, StyleSheet, View, ScrollView, Pressable, Dimensions, Switch } from \"react-native\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport StatusBar from \"../components/StatusBar\"; // Adjust path as per your project structure\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst PreferencesScreen = ({ }) => {\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = React.useState(false);\n  const [isLocationEnabled, setIsLocationEnabled] = React.useState(false);\n\n  const toggleNotificationsSwitch = () => setIsNotificationsEnabled(previousState => !previousState);\n  const toggleLocationSwitch = () => setIsLocationEnabled(previousState => !previousState);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar screenName=\"Preferences\" />\n     \n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <View style={styles.preferenceItem}>\n          <Text style={styles.label}>Enable Notifications</Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#1F75FE\" }}\n            thumbColor={isNotificationsEnabled ? \"#fff\" : \"#f4f3f4\"}\n            onValueChange={toggleNotificationsSwitch}\n            value={isNotificationsEnabled}\n          />\n        </View>\n        <View style={styles.preferenceItem}>\n          <Text style={styles.label}>Enable Location Services</Text>\n          <Switch\n            trackColor={{ false: \"#767577\", true: \"#1F75FE\" }}\n            thumbColor={isLocationEnabled ? \"#fff\" : \"#f4f3f4\"}\n            onValueChange={toggleLocationSwitch}\n            value={isLocationEnabled}\n          />\n        </View>\n        {/* Add more preference settings as needed */}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f0f4f8\",\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: responsiveWidth(5),\n    backgroundColor: \"#fff\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ddd\",\n  },\n  backButton: {\n    marginRight: responsiveWidth(3),\n  },\n  headerTitle: {\n    fontSize: responsiveFontSize(5),\n    fontWeight: \"bold\",\n    color: \"#1F75FE\",\n  },\n  scrollContainer: {\n    padding: responsiveWidth(5),\n  },\n  preferenceItem: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingVertical: responsiveHeight(2),\n    borderBottomWidth: 1,\n    borderBottomColor: \"rgba(204, 204, 204, 0.3)\",\n  },\n  label: {\n    fontSize: responsiveFontSize(4.5),\n    color: \"#000\",\n  },\n});\n\nexport default PreferencesScreen;\n","import * as React from \"react\";\nimport { Text, StyleSheet, View, ScrollView, Pressable, Dimensions } from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport StatusBar from \"../components/StatusBar\"; // Adjust path as per your project structure\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nconst Privacy = ({ navigation }) => {\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar screenName=\"Privacy Policy\" />\n  \n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <Text style={styles.sectionTitle}>Introduction</Text>\n        <Text style={styles.sectionContent}>\n          Your privacy is important to us. This privacy statement explains the personal data our app processes, how our app processes it, and for what purposes.\n        </Text>\n\n        <Text style={styles.sectionTitle}>Data Collection</Text>\n        <Text style={styles.sectionContent}>\n          We collect data to provide better services to all our users. The types of information we collect include things you do, things others do, and information from the services you use.\n        </Text>\n\n        <Text style={styles.sectionTitle}>Data Usage</Text>\n        <Text style={styles.sectionContent}>\n          We use the data we collect to provide, maintain, and improve our services, to develop new services, and to protect our app and our users.\n        </Text>\n\n        <Text style={styles.sectionTitle}>Data Sharing</Text>\n        <Text style={styles.sectionContent}>\n          We do not share your personal information with companies, organizations, or individuals outside of our app except in the following cases: with your consent, for legal reasons, and to meet any applicable law, regulation, or legal process.\n        </Text>\n\n        <Text style={styles.sectionTitle}>Data Security</Text>\n        <Text style={styles.sectionContent}>\n          We work hard to protect our users from unauthorized access to or unauthorized alteration, disclosure, or destruction of information we hold.\n        </Text>\n\n        <Text style={styles.sectionTitle}>Changes to This Policy</Text>\n        <Text style={styles.sectionContent}>\n          Our privacy policy may change from time to time. We will post any privacy policy changes on this page and, if the changes are significant, we will provide a more prominent notice.\n        </Text>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f0f4f8\",\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: responsiveWidth(5),\n    backgroundColor: \"#fff\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ddd\",\n  },\n  backButton: {\n    marginRight: responsiveWidth(3),\n  },\n  headerTitle: {\n    fontSize: responsiveFontSize(5),\n    fontWeight: \"bold\",\n    color: \"#1F75FE\",\n  },\n  scrollContainer: {\n    padding: responsiveWidth(5),\n  },\n  sectionTitle: {\n    fontSize: responsiveFontSize(4),\n    fontWeight: \"bold\",\n    color: \"#1F75FE\",\n    marginVertical: responsiveHeight(2),\n  },\n  sectionContent: {\n    fontSize: responsiveFontSize(3.5),\n    color: \"#666\",\n    lineHeight: responsiveHeight(3),\n    marginBottom: responsiveHeight(2),\n  },\n});\n\nexport default Privacy;\n","import * as React from \"react\";\nimport { Text, StyleSheet, View, Pressable, Dimensions, ScrollView, Alert, Image, TextInput, KeyboardAvoidingView, Platform } from \"react-native\";\nimport { FontAwesome, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, updateDoc, collection, query, where, getDocs, addDoc } from \"firebase/firestore\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Device from 'expo-device';\nimport * as Notifications from 'expo-notifications';\nimport Constants from 'expo-constants';\nimport StatusBar from \"../components/StatusBar\"; // Adjust path as per your project structure\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst responsiveWidth = (percent: number) => (width * percent) / 100;\nconst responsiveHeight = (percent: number) => (height * percent) / 100;\nconst responsiveFontSize = (percent: number) => (width * percent) / 100;\n\nexport async function registerForPushNotificationsAsync(): Promise<string | undefined> {\n  let token: string | undefined;\n\n  if (Platform.OS === 'android') {\n    await Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  if (Platform.OS === 'web') {\n    console.log('Web platform detected, no push token required');\n    return;\n  }\n\n  if (Device.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!');\n      return;\n    }\n\n    token = (await Notifications.getExpoPushTokenAsync({\n      projectId: Constants.manifest.extra?.eas?.projectId,\n    })).data;\n    console.log(token);\n  } else {\n    alert('Must use physical device for Push Notifications');\n  }\n\n  return token;\n}\n\nexport async function schedulePushNotification(db: Firestore, userEmail: string) {\n  const now = new Date();\n  const currentTime = now.getTime();\n\n  const q = collection(db, 'medReminder');\n  const querySnapshot = await getDocs(q);\n\n  querySnapshot.forEach(async (doc) => {\n    const data = doc.data();\n    if (data.times && Array.isArray(data.times)) {\n      data.times.forEach(async (time: string) => {\n        const reminderTime = new Date();\n        const [hour, minute] = time.split(':');\n        const [hourPart, period] = hour.split(' ');\n        const formattedHour = period === 'PM' ? parseInt(hourPart) + 12 : parseInt(hourPart);\n        reminderTime.setHours(formattedHour);\n        reminderTime.setMinutes(parseInt(minute));\n        reminderTime.setSeconds(0);\n\n        const reminderTimestamp = reminderTime.getTime();\n\n        if (Math.abs(reminderTimestamp - currentTime) <= 5 * 60 * 1000) {\n          const notificationContent = {\n            title: `Medication Reminder`,\n            body: `It's time to take your ${data.medicationName} (${data.selectedForm}, ${data.selectedUnit})`,\n            data: { ...data },\n            timestamp: new Date().toISOString(),\n          };\n\n          if (Platform.OS === 'web') {\n            // Save notification to Firestore for web and let Firebase Extensions handle sending email\n            await addDoc(collection(db, 'notifications'), {\n              ...notificationContent,\n              email: userEmail,\n            });\n          } else {\n            // Schedule push notification for mobile devices\n            await Notifications.scheduleNotificationAsync({\n              content: {\n                title: notificationContent.title,\n                body: notificationContent.body,\n                sound: \"default\",\n                data: notificationContent.data,\n              },\n              trigger: { seconds: 2 },\n            });\n          }\n        }\n      });\n    }\n  });\n}\n\nconst Profile = () => {\n  const [editable, setEditable] = React.useState(false);\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [phone, setPhone] = React.useState(\"9898712132\");\n  const [profileImage, setProfileImage] = React.useState(require(\"../assets/profilephoto.png\"));\n  const auth = getAuth();\n  const db = getFirestore();\n  const fileInputRef = React.useRef(null);\n\n  React.useEffect(() => {\n    const fetchUserData = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        const userDoc = await getDoc(doc(db, \"users\", user.uid));\n        if (userDoc.exists()) {\n          const userData = userDoc.data();\n          setFirstName(userData.firstname);\n          setEmail(userData.email);\n        }\n      }\n    };\n\n    fetchUserData();\n  }, []);\n\n  const handleProfilePictureChange = () => {\n    if (Platform.OS === 'web') {\n      fileInputRef.current.click();\n    } else {\n      handleImagePicker();\n    }\n  };\n\n  const handleImagePicker = async () => {\n    const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (status !== 'granted') {\n      Alert.alert('Permission Denied', 'Please grant permission to access the photo library.');\n      return;\n    }\n\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 4],\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setProfileImage({ uri: result.assets[0].uri });\n    }\n  };\n\n  const handleFileInputChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        setProfileImage({ uri: reader.result });\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleCamera = async () => {\n    if (Platform.OS === 'web') {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      const video = document.createElement('video');\n      video.srcObject = stream;\n      video.play();\n      const canvas = document.createElement('canvas');\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      const context = canvas.getContext('2d');\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n      const dataUrl = canvas.toDataURL('image/png');\n      setProfileImage({ uri: dataUrl });\n      stream.getTracks().forEach(track => track.stop());\n    } else {\n      const { status } = await ImagePicker.requestCameraPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission Denied', 'Please grant permission to access the camera.');\n        return;\n      }\n\n      const result = await ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 4],\n        quality: 1,\n      });\n\n      if (!result.canceled) {\n        setProfileImage({ uri: result.uri });\n      }\n    }\n  };\n\n  const openCameraAndLibrary = () => {\n    if (Platform.OS === 'web') {\n      handleProfilePictureChange();\n    } else {\n      Alert.alert(\n        \"Upload Photo\",\n        \"Choose an option\",\n        [\n          { text: \"Camera\", onPress: handleCamera },\n          { text: \"Photo Library\", onPress: handleImagePicker },\n          { text: \"Cancel\", style: \"cancel\" }\n        ]\n      );\n    }\n  };\n\n  const handleEditPress = () => {\n    setEditable(true);\n  };\n\n  const handleSavePress = async () => {\n    try {\n      const user = auth.currentUser;\n      if (user) {\n        await updateDoc(doc(db, \"users\", user.uid), {\n          firstname: firstName,\n          email: email\n        });\n      }\n      setEditable(false);\n      Alert.alert(\"Success\", \"Profile updated successfully.\");\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n      Alert.alert(\"Error\", \"Failed to update profile.\");\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar screenName=\"Profile\" />\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n        style={styles.container}\n      >\n        <ScrollView contentContainerStyle={styles.scrollContainer}>\n          <Pressable\n            onPress={handleEditPress}\n            style={styles.editIconContainer}\n          >\n            <FontAwesome\n              name=\"pencil\"\n              size={24}\n              color=\"#fff\"\n              style={styles.editIcon}\n            />\n          </Pressable>\n          <View style={styles.profileHeader}>\n            <Image source={profileImage} style={styles.profileImage} />\n            <View style={styles.profileInfo}>\n              {editable ? (\n                <TextInput\n                  style={[styles.profileNameInput, styles.textInput]}\n                  value={firstName}\n                  onChangeText={setFirstName}\n                  editable={editable}\n                />\n              ) : (\n                <Text style={styles.profileName}>{firstName}</Text>\n              )}\n            </View>\n            <Pressable\n              onPress={openCameraAndLibrary}\n              style={styles.cameraIconContainer}\n            >\n              <MaterialCommunityIcons\n                name=\"camera\"\n                size={24}\n                color=\"#fff\"\n                style={styles.cameraIcon}\n              />\n            </Pressable>\n            {Platform.OS === 'web' && (\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                style={{ display: 'none' }}\n                ref={fileInputRef}\n                onChange={handleFileInputChange}\n              />\n            )}\n          </View>\n          <View style={styles.profileDetails}>\n            <View style={styles.personalDetails}>\n              <DetailRow\n                label=\"Email\"\n                value={email}\n                editable={editable}\n                onChangeText={setEmail}\n                iconName=\"envelope-o\"\n              />\n              <DetailRow\n                label=\"Phone\"\n                value={phone}\n                editable={editable}\n                onChangeText={setPhone}\n                iconName=\"phone\"\n              />\n            </View>\n          </View>\n        </ScrollView>\n        {editable && (\n          <Pressable\n            onPress={handleSavePress}\n            style={styles.saveButton}\n          >\n            <Text style={styles.saveButtonText}>Save</Text>\n          </Pressable>\n        )}\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nconst DetailRow = ({\n  label,\n  value,\n  iconName,\n  editable,\n  onChangeText\n}: {\n  label: string;\n  value?: string;\n  iconName: string;\n  editable?: boolean;\n  onChangeText?: (text: string) => void;\n}) => {\n  return (\n    <Pressable style={styles.detailRow}>\n      <FontAwesome name={iconName} size={24} color=\"#1F75FE\" style={styles.detailIcon} />\n      <View style={styles.detailTextContainer}>\n        <Text style={styles.label}>{label}</Text>\n        {editable ? (\n          <TextInput\n            style={[styles.valueInput, styles.textInput]}\n            value={value}\n            onChangeText={onChangeText}\n            editable={editable}\n          />\n        ) : (\n          <Text style={styles.value}>{value}</Text>\n        )}\n      </View>\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f0f4f8\",\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    padding: responsiveWidth(5),\n  },\n  profileHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#1F75FE',\n    padding: responsiveWidth(5),\n    borderRadius: 10,\n    marginBottom: responsiveHeight(2),\n    position: 'relative',\n  },\n  profileImage: {\n    width: responsiveWidth(20),\n    height: responsiveWidth(20),\n    borderRadius: responsiveWidth(10),\n  },\n  profileInfo: {\n    marginLeft: responsiveWidth(5),\n  },\n  profileName: {\n    fontSize: responsiveFontSize(6),\n    color: \"#fff\",\n    fontWeight: \"bold\",\n  },\n  profileNameInput: {\n    fontSize: responsiveFontSize(6),\n    color: \"#fff\",\n    fontWeight: \"bold\",\n  },\n  cameraIconContainer: {\n    position: \"absolute\",\n    bottom: responsiveHeight(5),\n    right: responsiveWidth(4),\n    backgroundColor: \"#1F75FE\",\n    borderRadius: 50,\n    padding: responsiveWidth(1),\n    borderWidth: 1,\n    borderColor: 'white'\n  },\n  cameraIcon: {\n    fontSize: responsiveFontSize(5),\n  },\n  editIconContainer: {\n    zIndex: 1,\n    position: \"absolute\",\n    top: responsiveHeight(19.5),\n    right: responsiveWidth(8),\n    backgroundColor: \"#1F75FE\",\n    borderRadius: 70,\n    padding: responsiveWidth(1),\n    width: responsiveFontSize(9),\n    height: responsiveFontSize(9),\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  saveButton: {\n    position: \"absolute\",\n    bottom: responsiveHeight(2),\n    left: responsiveWidth(5),\n    right: responsiveWidth(5),\n    backgroundColor: \"#1F75FE\",\n    borderRadius: 10,\n    padding: responsiveHeight(2),\n    alignItems: 'center',\n  },\n  saveButtonText: {\n    color: \"#fff\",\n    fontSize: responsiveFontSize(4),\n    fontWeight: \"bold\",\n  },\n  editIcon: {\n    fontSize: responsiveFontSize(5),\n  },\n  profileDetails: {\n    backgroundColor: \"#fff\",\n    padding: responsiveWidth(5),\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.84,\n    elevation: 5,\n    marginBottom: responsiveHeight(2),\n  },\n  personalDetails: {\n    marginBottom: responsiveHeight(2),\n  },\n  detailRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingVertical: responsiveHeight(2),\n    borderBottomWidth: 1,\n    borderBottomColor: \"rgba(204, 204, 204, 0.3)\",\n    justifyContent: 'space-between',\n  },\n  detailIcon: {\n    marginRight: responsiveWidth(2),\n  },\n  detailTextContainer: {\n    flex: 1,\n    marginLeft: responsiveWidth(2),\n  },\n  label: {\n    fontSize: responsiveFontSize(4.5),\n    color: \"#000\",\n  },\n  value: {\n    fontSize: responsiveFontSize(3.5),\n    color: \"#666\",\n  },\n  valueInput: {\n    fontSize: responsiveFontSize(3.5),\n    color: \"#666\",\n  },\n  textInput: {\n    ...Platform.select({\n      web: {\n        outline: 'none',\n        boxShadow: 'none',\n      },\n    }),\n  },\n});\n\nexport default Profile;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [39], () => (__webpack_require__(55819)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["content","image","require","width","height","Dimensions","get","responsiveWidth","percent","responsiveHeight","responsiveFontSize","styles","StyleSheet","create","container","flex","menuIconContainer","position","top","left","zIndex","padding","menuIcon","fontSize","color","headerContainer","marginTop","marginBottom","header","flexDirection","alignItems","backgroundColor","paddingLeft","paddingVertical","borderTopRightRadius","borderBottomRightRadius","iconContainer","borderRadius","justifyContent","userIcon","headerText","marginLeft","dailyTipsContainer","marginVertical","alignSelf","dailyTipsSubContainer","display","borderBottomWidth","borderBottomColor","dtTopicContainer","dtTopic","dailyTip","_objectSpread","paddingHorizontal","boxShadow","dailyTipContents","fontFamily","textAlign","TipContainer","readMorebtn","readMore","arrowRight","mainContainer","flexGrow","subContainer","button","marginHorizontal","undefined","buttonText","iconText","Homepage","navigation","useNavigation","firstName","setFirstName","useState","useEffect","async","user","auth","currentUser","console","log","email","userQuery","query","collection","db","where","userSnapshot","getDocs","empty","userData","docs","data","firstname","error","fetchUserData","_jsxs","SafeAreaView","style","children","_jsx","StatusBar","barStyle","Pressable","onPress","dispatch","DrawerActions","openDrawer","FontAwesome5","name","View","Text","ScrollView","contentContainerStyle","LinearGradient","colors","dailyTips","slice","map","item","index","Image","source","resizeMode","length","substring","navigate","size","homepage","Homepage1","firstAidIcon","buttonContainer","elevation","overflow","borderWidth","borderColor","FirstAidPage","safeAreaView","warningContainer","warningText","chatContainer","chatRow","userRow","botRow","thumbnailContainer","userThumbnail","thumbnail","thumbnailText","messageContainer","maxWidth","nameText","fontWeight","chatBubble","userBubble","botBubble","chatText","errorText","inputContainer","textInput","marginRight","outlineWidth","sendButton","SymptomAssessment","symptom","setSymptom","messages","setMessages","setError","useFocusEffect","React","CustomStatusBar","screenName","message","bot","_Fragment","charAt","toUpperCase","TextInput","value","onChangeText","placeholder","placeholderTextColor","trim","userMessage","botResponse","symptomsKeywords","some","keyword","toLowerCase","includes","responseData","axios","post","contents","parts","text","headers","candidates","response","chatWithGemini","replace","prevMessages","MaterialCommunityIcons","counselorCard","shadowColor","shadowOpacity","shadowRadius","shadowOffset","counselorImage","borderTopLeftRadius","borderBottomLeftRadius","counselorInfo","fullName","ratingContainer","ratingText","CounselorCard","counselor","handlePress","MaterialIcons","id","scrollContainer","paddingBottom","searchContainer","searchIcon","searchInput","webSearchInput","outlineStyle","sectionTitle","cardContainer","cardSpacing","noResultsText","feelingsTitle","feelingsContainer","feeling","feelingIconContainer","selectedFeelingIconContainer","feelingIcon","feelingText","additionalInfo","additionalInfoTitle","additionalInfoText","CounselorSession","selectedFeeling","setSelectedFeeling","searchQuery","setSearchQuery","filteredCounselors","setFilteredCounselors","counselors","KeyboardAvoidingView","behavior","keyboardVerticalOffset","FontAwesome","filtered","filter","horizontal","showsHorizontalScrollIndicator","icon","backButton","backIcon","imageContainer","contentContainer","contentText","DailyTipDetailScreen","route","tip","params","handleBackPress","goBack","TouchableOpacity","Container","styled","Header","MonthText","DateScrollerContainer","DateItem","selected","DayText","DateText","MedicationsContainer","Title","NoMedicationsText","MedicationItem","MedicationInfo","MedicationName","MedicationDosage","MedTimeText","MedicationFrequency","AddButton","MedicationReminderScreen","selectedDate","setSelectedDate","Date","getDate","currentMonth","setCurrentMonth","currentYear","setCurrentYear","medications","setMedications","date","toLocaleString","month","getFullYear","toString","medQuery","unsubscribe","onSnapshot","querySnapshot","medsData","doc","dates","Array","from","_","i","setDate","handleDeleteMedication","deleteDoc","Icon","FlatList","keyExtractor","renderItem","renderDateItem","weekday","med","medicationName","selectedForm","selectedUnit","times","join","frequency","confirmDeleteMedication","window","confirm","handleAddMedication","headerTitle","resourceCard","webResourceCard","cursor","resourceImage","resourceInfo","resourceTitle","resourceDescription","FitnessNutritionScreen","title","description","imageUrl","link","resource","openLink","Linking","openURL","uri","buttonIcon","Settings","menuButton","counselorInfoContainer","counselorName","counselorSpecialization","counselorPosition","counselorExperience","buttonGroup","videoCallButton","chatButton","aboutContainer","aboutTitle","aboutDescription","bookNowButton","bookNowText","CounselorDetails","specialization","rating","experience","handleBookAppointmentPress","backButtonText","label","input","modeContainer","modeButton","selectedModeButton","modeButtonText","bookButton","bookButtonText","BookAppointmentScreen","mode","setMode","show","setShow","appointmentDetails","setAppointmentDetails","counselingMode","setCounselingMode","showMode","currentMode","showDatePicker","toDateString","showTimePicker","toTimeString","multiline","handleBookPress","DateTimePicker","testID","is24Hour","onChange","event","currentDate","vw","vh","getDynamicStyles","outline","HeaderText","FormContainer","SectionTitle","Row","DropdownButton","DropdownButtonText","disabled","AddButtonText","ModalContainer","CenteredModalContainer","ModalContent","ModalTitle","CloseButton","CloseButtonText","ConfirmButton","ConfirmButtonText","ButtonRow","OptionsContainer","OptionItem","OptionText","StyledInput","RNTextInput","CombinedScreen","setMedicationName","setSelectedForm","setSelectedUnit","setFrequency","customFrequency","setCustomFrequency","showFrequencyModal","setShowFrequencyModal","showFormModal","setShowFormModal","showUnitModal","setShowUnitModal","setShowTimePicker","time","setTime","setTimes","screenWidth","setScreenWidth","screenHeight","setScreenHeight","dimensionListener","addEventListener","handleResize","remove","dynamicStyles","toLocaleTimeString","hour","minute","addDoc","timestamp","serverTimestamp","Alert","alert","cancelable","Modal","animationType","transparent","visible","onRequestClose","type","hour12","e","handleTimeChange","selectedTime","target","handleConfirmTime","form","unit","freq","selectedFrequency","profileContainer","profileIcon","username","nightModeIcon","menuItems","menuItem","menuItemText","divider","bottomItems","logoutButton","Menu","locations","Ionicons","pressed","signOut","welcomeText","WelcomeScreen","subscription","checkbox","checkedCheckbox","CustomCheckBox","onValueChange","safeArea","scrollView","paddingTop","logo","formContainer","rememberMeContainer","rememberMeText","forgotPassword","loginButton","pressable","loginText","orLoginWith","socialMediaLogin","socialIcon","dontHaveAnContainer","dontHaveAn","signUp","signUpBtn","LoginScreen","emailOrUsername","setEmailOrUsername","password","setPassword","rememberMe","setRememberMe","storedEmail","storedPassword","localStorage","getItem","onLoginPress","checkStoredCredentials","emailInput","passwordInput","pass","Error","test","isValidEmail","signInWithEmailAndPassword","setItem","removeItem","screen","getErrorMessage","code","RNPTextInput","outlineColor","activeOutlineColor","keyboardType","theme","fonts","regular","secureTextEntry","onForgotPasswordPress","onGoogleLoginPress","onFacebookLoginPress","onXLoginPress","onSignUpPress","signupButton","signupText","haveAnAccount","haveAnAccountText","loginBtn","SignUpScreen","setFirstname","lastname","setLastname","setEmail","confirmPassword","setConfirmPassword","handleError","createUserWithEmailAndPassword","sendEmailVerification","setDoc","uid","createdAt","interests","userId","instructions","resetButton","resetText","resetSentContainer","resetSentText","ForgotPasswordScreen","resetSent","setResetSent","sendPasswordResetEmail","newsItem","newsImage","newsContent","newsTitle","newsDescription","NewsPage","news","setNews","loading","setLoading","fetchNews","category","country","apiKey","status","articles","statusText","interval","setInterval","clearInterval","ActivityIndicator","article","urlToImage","handleReadMore","url","settingItem","NotificationSettingsScreen","emailNotifications","setEmailNotifications","pushNotifications","setPushNotifications","smsNotifications","setSmsNotifications","Switch","trackColor","false","true","thumbColor","previousState","mockData","loadingContainer","noResourcesContainer","MentalHealthResourcesScreen","resources","setResources","cachedData","AsyncStorage","JSON","parse","getCachedMentalHealthResources","isArray","stringify","fetchMentalHealthResources","loadResources","Drawer","createDrawerNavigator","Tab","createBottomTabNavigator","Stack","createNativeStackNavigator","initVoiceCommands","nav","speak","synth","speechSynthesis","utterance","SpeechSynthesisUtterance","useVoiceCommands","isRecording","setIsRecording","recording","setRecording","recordingStatus","setRecordingStatus","audioPermission","setAudioPermission","recordedAudio","setRecordedAudio","timeoutRef","useRef","mediaRecorderRef","audioChunksRef","navigator","mediaDevices","getUserMedia","audio","getPermission","stopRecording","current","clearTimeout","startRecording","warn","stream","mediaRecorder","MediaRecorder","ondataavailable","push","onstop","blob","Blob","URL","createObjectURL","now","command","processAudio","handleCommand","start","greetingMessage","setTimeout","stop","stopAndUnloadAsync","getURI","formData","FormData","append","handleRecordButtonPress","interestsList","interestsContainer","interestItem","margin","selectedInterestItem","interestText","InterestsScreen","selectedInterests","setSelectedInterests","numColumns","toggleInterest","interest","prevInterests","updateDoc","handleSkip","NavigationContainer","useFonts","AppLoading","FirstAid","MedSchedule","FitnessNutrition","BookAppointment","AddMedication","ForgetPassword","NotificationScreen","ProfileScreen","PrivacyScreen","PreferencesScreen","AccessibilityScreen","NotificationSettings","MentalHealth","RootStackParamList","imports","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","HomeStack","Navigator","screenOptions","headerShown","Screen","component","CenterButton","props","centerButton","centerButtonContainer","MainTabs","tabBarShowLabel","tabBarStyle","tabBar","tabBarIcon","iconName","tabBarLabel","focused","options","tabBarButton","AppStack","initialRouteName","HealthNewsInterest","bottom","App","fontsLoaded","expoPushToken","setExpoPushToken","notification","setNotification","notificationListener","responseListener","userEmail","currentTime","getTime","q","forEach","reminderTime","split","hourPart","period","formattedHour","parseInt","setHours","setMinutes","setSeconds","reminderTimestamp","Math","abs","notificationContent","body","toISOString","schedulePushNotification","drawerContent","swipeEnabled","statusBar","statusBarInner","leftArrowParent","leftArrowIcon","screenNameContainer","screenIcon","screenNameText","greetingContainer","greeting","firebaseConfig","authDomain","projectId","storageBucket","messagingSenderId","appId","app","getApps","initializeApp","getFirestore","initializeAuth","persistence","browserLocalPersistence","accessibilityItem","picker","pickerText","slider","isVoiceOverEnabled","setIsVoiceOverEnabled","isDarkModeEnabled","setIsDarkModeEnabled","selectedVoice","setSelectedVoice","pitch","setPitch","rate","setRate","voices","setVoices","Speech","then","toggleVoiceOverSwitch","toggleDarkModeSwitch","ModalSelector","voice","key","identifier","initValue","option","Slider","minimumValue","maximumValue","toFixed","deleteButton","notificationItem","notificationItemSelected","notificationTitle","notificationDescription","notificationDate","notificationTimes","loadingText","noNotificationsContainer","noNotificationsText","NotificationPage","notifications","setNotifications","selectedNotifications","setSelectedNotifications","Set","fetchedNotifications","Promise","all","isSelected","has","onLongPress","handleLongPress","delete","add","preferenceItem","isNotificationsEnabled","setIsNotificationsEnabled","isLocationEnabled","setIsLocationEnabled","toggleNotificationsSwitch","toggleLocationSwitch","sectionContent","lineHeight","Privacy","registerForPushNotificationsAsync","DetailRow","editable","detailRow","detailIcon","detailTextContainer","valueInput","profileHeader","profileImage","profileInfo","profileName","profileNameInput","cameraIconContainer","right","cameraIcon","editIconContainer","saveButton","saveButtonText","editIcon","profileDetails","personalDetails","Profile","setEditable","phone","setPhone","setProfileImage","getAuth","fileInputRef","userDoc","getDoc","exists","handleEditPress","openCameraAndLibrary","click","accept","ref","file","files","reader","FileReader","onload","result","readAsDataURL","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}